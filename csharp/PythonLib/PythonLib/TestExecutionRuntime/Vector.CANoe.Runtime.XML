<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vector.CANoe.Runtime</name>
    </assembly>
    <members>
        <member name="T:Vector.CANoe.Runtime.Dns">
            <summary>
            Provides simple domain name resolution functionality.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Dns.AsyncHostQueryResult.EndRequest">
            <summary>
            Ends the asynchronous request and returns the result.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously returns the Internet Protocol (IP) addresses for the specified host.
            </summary>
            <param name="hostName">The host name to resolve.</param>
            <param name="requestCallback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="stateObject">A user-defined object that contains information about the operation. This object is passed to the <paramref name="requestCallback"/> 
            delegate when the operation is complete.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> instance that references the asynchronous request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="hostName"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="hostName"/> is greater than 255 characters.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving <paramref name="hostName"/>.</exception>
            <remarks>
            The function dissolves a host name in its IP addresses.
            <para/>
            The given host name first is searched in the CANoe Simulation Setup and then in the assigned database.
            If the name is not defined there it is determined via a DNS request by using the operating system stack. For this the operating system stack must be selected in the CANoe TCP/IP Stack configuration dialog.
            The result is then given back in the corresponding <paramref name="requestCallback"/> by calling <see cref="M:Vector.CANoe.Runtime.Dns.EndGetHostAddresses(System.IAsyncResult)"/>.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="Dns" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Dns.EndGetHostAddresses(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for DNS information.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> instance returned by a call to the <see cref="M:Vector.CANoe.Runtime.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)"/> method.</param>
            <returns>An array of type <see cref="T:System.Net.IPAddress"/> that holds the IP addresses for the host
            specified by the <paramref name="hostName"/> parameter of <see cref="M:Vector.CANoe.Runtime.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="asyncResult"/> was not returned by a call to the <see cref="M:Vector.CANoe.Runtime.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)"/> method.</exception>
            <exception cref="T:System.InvalidOperationException">
            <para><see cref="M:Vector.CANoe.Runtime.Dns.EndGetHostAddresses(System.IAsyncResult)"/> was previously called for the asynchronous host query.</para>
            <para> -- OR -- </para>
            <para>The asynchronous host query that returned <paramref name="asyncResult"/> is not completed.</para>
            </exception>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="Dns" />
            </example>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBitAccessor">
            <summary>
            Interface for bit-wise field access to an <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IBitAccessor.NumBits">
            <summary>
            Gets the number of bits that are accessible.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IBitAccessor.Item(System.Int32)">
            <summary>
            Gets/sets a specific bit of the bitfield.
            </summary>
            <param name="bitIndex">The index of the bit.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.BitAccessor`1">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IBitAccessor"/>s.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the underlying protocol field.</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.BitAccessor`1.NumBits">
            <summary>
            The number of accessible bits.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.BitAccessor`1.Item(System.Int32)">
            <summary>
            Get/set access to bits.
            </summary>
            <param name="bitIndex">The index of the bit.</param>
            <returns>The logical state of the bit.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.BitAccessor`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the Bits of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that iterates over the Bits of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.BitAccessor`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.IHeaderPart">
            <summary>
            Interface for header parts within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IHeaderPart.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IHeaderPart"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IHeaderPart.IsAvailable">
            <summary>
            Checks if the <see cref="T:Vector.CANoe.Runtime.IHeaderPart"/> is contained in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocolField">
            <summary>
            Interface for protocol fields.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.ByteLength">
            <summary>
            Byte length of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.ByteOffset">
            <summary>
            Byte offset of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.BitLength">
            <summary>
            Bit length of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.BitOffset">
            <summary>
            Bit offset of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.ValueInt16">
            <summary>
            Gets the protocol field value as <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.ValueInt64">
            <summary>
            Gets the protocol field value as <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolField.DataCopy">
            <summary>
            Gets a copy of the protocol field value as <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocolFieldGroup">
            <summary>
            Interface for groups of <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolFieldGroup.Fields">
            <summary>
            Gets all protocol fields contained in the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.
            </summary>
            <returns>A collection of all protocol fields within this <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocolFieldValue`1">
            <summary>
            Interface for <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s that have an accessible value.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the field's value.</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolFieldValue`1.Value">
            <summary>
            Gets or sets the value of the protocol field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IOptionalHeaderPart">
            <summary>
            Interface for optional <see cref="T:Vector.CANoe.Runtime.IHeaderPart"/>s, i.e., which can be present or absent within the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IOptionalHeaderPart.Init">
            <summary>
            Initialize the <see cref="T:Vector.CANoe.Runtime.IOptionalHeaderPart"/> within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the <see cref="T:Vector.CANoe.Runtime.IOptionalHeaderPart"/>, if it is not already contained in the packet.
            </summary>
            <returns>The success of the operation.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocolFieldOptional">
            <summary>
            Interface for optional <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProtocolFieldOptional.Clear">
            <summary>Removes the optional protocol field from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket" />.</summary>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProtocolFieldOptional.GetRawDataCopy">
            <summary>
            Gets a copy of the protocol field data within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <exception cref="T:Vector.CANoe.Runtime.EthernetPacketException">The protocol field data could not be retrieved.</exception>
            <returns>A copy of the protocol field data as <see cref="T:System.Byte"/>-Array.</returns>
            <remarks>
            If the protocol field is not available in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>, an <see cref="T:Vector.CANoe.Runtime.EthernetPacketException"/> is thrown.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProtocolFieldOptional.GetRawDataCopy(System.Int32)">
            <inheritdoc cref="M:Vector.CANoe.Runtime.IProtocolFieldOptional.GetRawDataCopy"/>
            <param name="offset">Byte offset in the protocol field where it starts to copy data.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProtocolFieldOptional.GetRawDataCopy(System.Int32,System.Int32)">
            <inheritdoc cref="M:Vector.CANoe.Runtime.IProtocolFieldOptional.GetRawDataCopy(System.Int32)"/>
            <summary>
            Gets a copy of the protocol field data within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            If the specified <paramref name="length"/> is greater than the available data, only the available data is copied.
            </summary>
            <param name="length">Number of bytes to copy.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProtocolFieldOptional.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets the protocol field data within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="offset">Byte offset in the protocol field data where it starts to copy data.</param>
            <param name="data">The <see cref="T:System.Byte"/>-Array containing the protocol field data.</param>
            <param name="length">Number of bytes to copy to the protocol field data.</param>
            <exception cref="T:Vector.CANoe.Runtime.EthernetPacketException">The protocol field data could not be set.</exception>
            <returns>The number of bytes copied.</returns>
            <remarks>
            If the protocol field is not available in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>, an <see cref="T:Vector.CANoe.Runtime.EthernetPacketException"/> is thrown.
            </remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocolFieldBits">
            <summary>
            Interface for BitFields.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolFieldBits.Bits">
            <summary>
            Gets a bit-accessor for bit-wise field access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProtocolFieldBits.Fields">
            <summary>
            Gets all subfields of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.
            </summary>
            <returns>A collection of all subfields within this <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.HeaderPart">
            <summary>
            Base class for header parts within a protocol structure of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.HeaderPart.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.HeaderPart"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.HeaderPart.IsAvailable">
            <summary>
            Checks if the <see cref="T:Vector.CANoe.Runtime.IHeaderPart"/> is contained in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProtocol">
            <summary>
            Interface for protocols within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPayloadProtocol">
            <summary>
            Interface for <see cref="T:Vector.CANoe.Runtime.IProtocol"/>s which have an accessible payload.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.ResizeData(System.Int32)">
            <summary>
            Resizes the payload of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="newLength">New length in bytes.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.GetRawDataCopy">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>A copy of the payload data as <see cref="T:System.Byte"/>-Array.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.GetRawDataCopy(System.Int32)">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <returns>A copy of the payload data as <see cref="T:System.Byte"/>-Array.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.GetRawDataCopy(System.Int32,System.Int32)">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            If the specified <paramref name="length"/> is greater than the available data, only the available data is copied.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <param name="length">Number of bytes to copy.</param>
            <returns>A copy of the payload data as <see cref="T:System.Byte"/>-Array.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.SetRawData(System.Byte[])">
            <summary>
            Sets payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            The length of the data is resized to the given length of the new data.
            </summary>
            <param name="data">The <see cref="T:System.Byte"/>-Array containing the payload data.</param>
            <returns>The number of bytes set.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPayloadProtocol.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            If data is greater than the current length of the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>'s payload, the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/> is enlarged;
            if data is smaller, the length is not changed.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <param name="data">The <see cref="T:System.Byte"/>-Array containing the payload data.</param>
            <param name="length">Number of bytes to copy to the protocol payload.</param>
            <returns>The number of bytes set.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.ByteLength">
            <summary>
            Returns the length of the payload of the protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.ByteOffset">
            <summary>
            Returns the byte-offset of the protocol payload within the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            Offset 0 is directly after the Ethertype.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.SByte">
            <summary>
            <see cref="T:System.SByte"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.Byte">
            <summary>
            <see cref="T:System.Byte"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.UInt16">
            <summary>
            <see cref="T:System.UInt16"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.Int16">
            <summary>
            <see cref="T:System.Int16"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.UInt32">
            <summary>
            <see cref="T:System.UInt32"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.Int32">
            <summary>
            <see cref="T:System.Int32"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.UInt64">
            <summary>
            <see cref="T:System.UInt64"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPayloadProtocol.Int64">
            <summary>
            <see cref="T:System.Int64"/>-wise payload data access.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocol">
            <summary>
            Base class for protocols within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocol.Init">
            <summary>
            Initialize the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the protocol, if it is not already contained in the packet and initializes the protocol header with default values.
            </summary>
            <returns>The success of the operation.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocol.IsAvailable">
            <summary>
            Checks if the protocol is contained in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocol.Fields">
            <summary>
            Gets all protocol fields contained in the <see cref="T:Vector.CANoe.Runtime.Protocol"/>.
            </summary>
            <returns>A collection of all protocol fields within this <see cref="T:Vector.CANoe.Runtime.Protocol"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocol.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of the <see cref="T:Vector.CANoe.Runtime.Protocol"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IPayloadProtocol"/>s.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.ResizeData(System.Int32)">
            <summary>
            Resizes the payload of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="newLength">New length in bytes.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.GetRawDataCopy">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.GetRawDataCopy(System.Int32)">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.GetRawDataCopy(System.Int32,System.Int32)">
            <summary>
            Gets a copy of the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            If the specified <paramref name="length"/> is greater than the available data, only the available data is copied.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <param name="length">Number of bytes to copy.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.SetRawData(System.Byte[])">
            <summary>
            Sets payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            The length of the payload is resized to the given length of the new data.
            </summary>
            <param name="data">The <see cref="T:System.Byte"/>-Array containing the payload data.</param>
            <returns>The number of bytes set.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.PayloadProtocol.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets the payload data of the protocol within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            If data is greater than the current length of the <see cref="T:Vector.CANoe.Runtime.IPayloadProtocol"/>'s payload, the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/> is enlarged;
            if data is smaller, the length is not changed.
            </summary>
            <param name="offset">Byte offset in the payload where it starts to copy data.</param>
            <param name="data">The <see cref="T:System.Byte"/>-Array containing the payload data.</param>
            <param name="length">Number of bytes to copy to the protocol payload.</param>
            <returns>The number of bytes set.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.ByteLength">
            <summary>
            Returns the length of the payload of the protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.ByteOffset">
            <summary>
            Returns the byte-offset of the protocol payload within the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            Offset 0 is directly after the Ethertype.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.SByte">
            <summary>
            <see cref="T:System.SByte"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.Byte">
            <summary>
            <see cref="T:System.Byte"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.UInt16">
            <summary>
            <see cref="T:System.UInt16"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.Int16">
            <summary>
            <see cref="T:System.Int16"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.UInt32">
            <summary>
            <see cref="T:System.UInt32"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.Int32">
            <summary>
            <see cref="T:System.Int32"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.UInt64">
            <summary>
            <see cref="T:System.UInt64"/>-wise payload data access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.PayloadProtocol.Int64">
            <summary>
            <see cref="T:System.Int64"/>-wise payload data access.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorSByte">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorByte">
            <summary>
            Provides <see cref="T:System.Byte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorUInt16">
            <summary>
            Provides <see cref="T:System.UInt16"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorInt16">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorUInt32">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorInt32">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorUInt64">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.PayloadProtocol.PayloadAccessorInt64">
            <summary>
            Provides <see cref="T:System.SByte"/>-wise access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldImpl">
            <summary>
            Holds the common implementation of the protocol field access.
            Is also used at runtime to access protocol fields that have not been generated, see <see cref="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocolField(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolField">
            <summary>
            Base class for protocol fields.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.IsAvailable">
            <summary>
            Checks if the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/> is contained in the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.ByteLength">
            <summary>
            Byte length of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.ByteOffset">
            <summary>
            Byte offset of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.BitLength">
            <summary>
            Bit length of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.BitOffset">
            <summary>
            Bit offset of the protocol field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.Vector#CANoe#Runtime#IProtocolField#ValueInt16">
            <inheritdoc/>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.Vector#CANoe#Runtime#IProtocolField#ValueInt64">
            <inheritdoc/>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolField.Vector#CANoe#Runtime#IProtocolField#DataCopy">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldValue`1">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s.
            </summary>
            <inheritdoc path="typeparam"/>
        </member>
        <member name="F:Vector.CANoe.Runtime.ProtocolFieldValue`1.mTokenGetter">
            <summary>Internal field. You should never use it directly.</summary>
            <exclude/>
        </member>
        <member name="F:Vector.CANoe.Runtime.ProtocolFieldValue`1.mTokenSetter">
            <summary>Internal field. You should never use it directly.</summary>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldValue`1.Value">
            <summary>
            Gets or sets to the value of the protocol field.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldValue`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldGroup">
            <summary>
            base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>s.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldGroup.Fields">
            <summary>
            Gets all protocol fields contained in the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.
            </summary>
            <returns>A collection of all protocol fields within this <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldGroup.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldBits`1">
            <summary>Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.</summary>
            <inheritdoc path="typeparam"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldBits`1.Bits">
            <summary>
            Gets an <see cref="T:Vector.CANoe.Runtime.IBitAccessor"/> for bit-wise field access.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldBits`1.Fields">
            <summary>
            Gets all subfields of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.
            </summary>
            <returns>A collection of all subfields within this <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldBits`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>. of the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>..</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldBits`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldBitsAccessor`1">
            <summary>
            Class for the sub fields (i.e., the single bits) of an <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>, as <see cref="T:Vector.CANoe.Runtime.ProtocolFieldValue`1"/> with generic type <see cref="T:System.Boolean"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the underlying protocol field's value.</typeparam>
        </member>
        <member name="F:Vector.CANoe.Runtime.ProtocolFieldBitsAccessor`1.mBitField">
            <summary>Internal field. You should never use it directly.</summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldBitsAccessor`1.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldBitsAccessor`1.Value">
            <summary>
            Gets or sets to the value of the protocol field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.OptionalProtocolField">
            <summary>
            Base class for optional <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.Init">
            <summary>
            Initialize the optional <see cref="T:Vector.CANoe.Runtime.IProtocolField"/> within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the optional <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>, if it is not already contained in the packet.
            </summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.Clear">
            <summary>Removes the optional <see cref="T:Vector.CANoe.Runtime.IProtocolField"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.</summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.GetRawDataCopy">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.GetRawDataCopy(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.GetRawDataCopy(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolField.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1">
            <summary>
            Base class for optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s.
            </summary>
            <inheritdoc path="typeparam"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.Init">
            <summary>
            Initialize the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>, if it is not already contained in the packet.
            </summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.Clear">
            <summary>Removes the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.</summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.GetRawDataCopy">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.GetRawDataCopy(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.GetRawDataCopy(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldValue`1.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.OptionalProtocolFieldGroup">
            <summary>
            Base class for optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>s.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.Init">
            <summary>
            Initialize the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/> within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/>, if it is not already contained in the packet.
            </summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.Clear">
            <summary>Removes the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldGroup"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.</summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.GetRawDataCopy">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.GetRawDataCopy(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.GetRawDataCopy(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldGroup.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1">
            <summary>
            Base class for optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>'.
            </summary>
            <inheritdoc path="typeparam"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.Init">
            <summary>
            Initialize the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/> within an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            It appends the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/>, if it is not already contained in the packet.
            </summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.Clear">
            <summary>Removes the optional <see cref="T:Vector.CANoe.Runtime.IProtocolFieldBits"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.</summary>
            <inheritdoc path="returns"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.GetRawDataCopy">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.GetRawDataCopy(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.GetRawDataCopy(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OptionalProtocolFieldBits`1.SetRawData(System.Int32,System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldString">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> with generic type <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldMACAddress">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> with generic type <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldMACAddress.ParseAddress(System.String)">
            <summary>
            Parses the <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/> from a string and sets the protocol field.
            </summary>
            <param name="address"><see cref="T:System.Net.NetworkInformation.PhysicalAddress"/> in text format.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldMACAddress.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldIPAddress">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> with generic type <see cref="T:System.Net.IPAddress"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldIPAddress.AddressFamily">
            <summary>
            The <see cref="T:System.Net.Sockets.AddressFamily"/> of the <see cref="T:System.Net.IPAddress"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ProtocolFieldIPAddress.ParseAddress(System.String)">
            <summary>
            Parses the <see cref="T:System.Net.IPAddress"/> from a string and sets the protocol field.
            </summary>
            <param name="address"><see cref="T:System.Net.IPAddress"/> in text format.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldIPv4Address">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> with generic type <see cref="T:System.Net.IPAddress"/> and <see cref="P:Vector.CANoe.Runtime.ProtocolFieldIPv4Address.AddressFamily"/> <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldIPv4Address.AddressFamily">
            <summary>
            The <see cref="T:System.Net.Sockets.AddressFamily"/> of the <see cref="T:System.Net.IPAddress"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ProtocolFieldIPv6Address">
            <summary>
            Base class for <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/> with generic type <see cref="T:System.Net.IPAddress"/> and <see cref="P:Vector.CANoe.Runtime.ProtocolFieldIPv6Address.AddressFamily"/> <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ProtocolFieldIPv6Address.AddressFamily">
            <summary>
            The <see cref="T:System.Net.Sockets.AddressFamily"/> of the <see cref="T:System.Net.IPAddress"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacket">
            <summary>
            Class which represents an ethernet frame. 
            </summary>
            <remarks>
            nothing to remark yet
            </remarks>
            
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AAF">
            <summary>
            Access to AVTP AAF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AAFPCM">
            <summary>
            Access to AVTP AAF PCM protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AEF">
            <summary>
            Access to AVTP AEF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AH">
            <summary>
            Access to AH protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.ARP">
            <summary>
            Access to ARP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AutosarPduMux">
            <summary>
            Access to AUTOSAR PDU Multiplexing protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.AVTP">
            <summary>
            Access to AVTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.CRF">
            <summary>
            Access to AVTP CRF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.CVF">
            <summary>
            Access to AVTP CVF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.DHCPv4">
            <summary>
            Access to DHCPv4 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.DHCPv6">
            <summary>
            Access to DHCPv6 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.DoIP">
            <summary>
            Access to DoIP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.DTLS">
            <summary>
            Access to DTLS protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.EECF">
            <summary>
            Access to AVTP EECF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.EFControl">
            <summary>
            Access to AVTP EF_CONTROL protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.EFStream">
            <summary>
            Access to AVTP EF_STREAM protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.ESCF">
            <summary>
            Access to AVTP ESCF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.ESP">
            <summary>
            Access to ESP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.FSA">
            <summary>
            Access to FSA protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.HDCPAuth">
            <summary>
            Access to HDCP Authentication Protocol protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.HSFZ">
            <summary>
            Access to HSFZ protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.HTTP">
            <summary>
            Access to HTTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.ICMPv4">
            <summary>
            Access to ICMPv4 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.ICMPv6">
            <summary>
            Access to ICMPv6 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.IGMP">
            <summary>
            Access to IGMP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.IKEv2">
            <summary>
            Access to IKEv2 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.IPv4">
            <summary>
            Access to IPv4 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.IPv6">
            <summary>
            Access to IPv6 protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.MMAStream">
            <summary>
            Access to AVTP MMA Stream protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.MP2T">
            <summary>
            Access to MP2T protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.NDP">
            <summary>
            Access to NDP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.NTP">
            <summary>
            Access to NTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.NTSCF">
            <summary>
            Access to AVTP NTSCF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.PTP">
            <summary>
            Access to PTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.RTCP">
            <summary>
            Access to RTCP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.RTP">
            <summary>
            Access to RTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.RVF">
            <summary>
            Access to AVTP RVF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.SNMP">
            <summary>
            Access to SNMP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.SOMEIP">
            <summary>
            Access to SOME/IP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.SVF">
            <summary>
            Access to AVTP SVF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.TCP">
            <summary>
            Access to TCP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.TFTP">
            <summary>
            Access to TFTP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.TLS">
            <summary>
            Access to TLS protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.TSCF">
            <summary>
            Access to AVTP TSCF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.UDP">
            <summary>
            Access to UDP protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.UDPNM">
            <summary>
            Access to UDP NM protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.VSF">
            <summary>
            Access to AVTP VSF protocol.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.XCP">
            <summary>
            Access to XCP protocol.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocols">
            <summary>
            Returns an enumerable collection of all built-in protocols that are available in this <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>A list of <see cref="T:Vector.CANoe.Runtime.IProtocol"/>s.</returns>
            <remarks>This method only provides access to the protocols which are currently available in this packet. 
            You can use this method to determine which are the currently available protocols.
            For an overview of the built-in protocols in CANoe, see <see cref="N:Vector.CANoe.Runtime.Protocols"/>.</remarks>
            <seealso cref="N:Vector.CANoe.Runtime.Protocols"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor">
            <summary>
            Default constructor. This constructor is included for internal purposes.
            You should use the other constructors, giving channel, source, destination, ethertype and payload, 
            if you create an instance of EthernetPacket.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor(System.Byte,System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress,System.UInt16,System.UInt16,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="channel">The CANoe channel number.</param>
            <param name="source">The source MAC address</param>
            <param name="destination">The destination MAC address</param>
            <param name="ethertype">The ethertype of the packet.</param>
            <param name="vlanTci">The VLAN tag of the packet.</param>
            <param name="payload">The payload data.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor(System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress,System.UInt16,System.UInt16,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source MAC address</param>
            <param name="destination">The destination MAC address</param>
            <param name="ethertype">The ethertype of the packet.</param>
            <param name="vlanTci">The VLAN tag of the packet.</param>
            <param name="payload">The payload data.</param>   
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor(System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress,System.UInt16,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source MAC address</param>
            <param name="destination">The destination MAC address</param>
            <param name="ethertype">The ethertype of the packet.</param>
            <param name="payload">The payload data.</param>  
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor(System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress,System.UInt16)">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source MAC address</param>
            <param name="destination">The destination MAC address</param>
            <param name="ethertype">The ethertype of the packet.</param>   
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.#ctor(System.Net.NetworkInformation.PhysicalAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source MAC address</param>
            <param name="destination">The destination MAC address</param>  
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.VLANTCI">
            <summary>
            Stores the first VLAN tag of the Ethernet packet.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.TimeNS">
            <summary>Returns the time stamp of the frame, in nanoseconds as int64.</summary>
            <value>The time stamp.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.Send">
            <summary>
            Sends the ethernet packet.
            </summary>
            <returns>0 when the frame was sent successfull.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.Inject(Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection)">
            <summary>
            Transmits an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/> by a specific <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> defined in <see cref="P:Vector.CANoe.Runtime.EthernetPacket.HardwarePort"/>.
            Unlike <see cref="M:Vector.CANoe.Runtime.EthernetPacket.Send"/>, this method allows to send a frame not only on a simulation port, but on a physical port as well e.g. for error injection.
            </summary>
            <param name="direction">Transmit direction from viewpoint of the segment:
            <see cref="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Rx"/> to send from a simulated port in real mode
            <see cref="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Tx"/> to send from a physical measurement port in real mode
            In simulated mode use <see cref="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Tx"/> or <see cref="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Rx"/></param>
            <returns>
            <para>0: Success</para>
            <para>1: Invalid Ethernet port</para>
            <para>2: packet failure</para>
            <para>3: Output not allowed</para>
            </returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.Simulated">
            <summary>
            Returns whether the packet was sent by a simulated node in the simulation setup.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.HardwarePort">
            <summary>
            The EthernetPort on which the packet is sent.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.CreateNewInstance(System.Int64)">
            <summary>
            Internal method. You should never need to call or override this method.
            </summary>
            <param name="time">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection">
            <summary>
            The direction of the ethernet packet.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Rx">
            <summary>
            Packet is a Rx (received) packet.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacket.EthernetPacketDirection.Tx">
            <summary>
            Packet is a Tx (transmitted) packet. 
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.Block">
            <summary>
            For nodes in the measurement setup, specifies that the received frame
            shall not be transmitted further through the current measurement 
            setup branch. Thus, the node can be used as a frame filter.
            </summary>
            <remarks>Has no effect on frames which were not received or if called
            on a node which is not in the measurement setup.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.VlanTags">
            <summary>
            Access to the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>s <see cref="T:Vector.CANoe.Runtime.VlanTag"/>(s).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.CompletePacket">
            <summary>
            Calculates the checksum and length fields for all protocols contained in the packet.
            </summary>
            <returns>Success of the operation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.Clear">
            <summary>
            Clears packet data and resets length.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacket.HasProtocolError">
            <summary>
            Returns whether the IP protocols of this <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/> contain protocol errors, like wrong checksum or wrong length field, etc.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocolErrorText">
            <summary>
            Returns a string containing protocol error information for an invalid <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>String containing protocol error information.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocolField(System.String,System.String)">
            <summary>
            Returns a protocol field specified by its name.
            </summary>
            <param name="protocolName">The name of the protocol.</param>
            <param name="fieldName">The name of the protocol field.</param>
            <returns>The requested protocol field.</returns>
            <exception cref="T:System.ArgumentException">The protocol field with the specified <paramref name="protocolName"/> and <paramref name="fieldName"/> could not be found.</exception>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="GetProtocolField_string" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetGeneratedProtocolFieldInstance(System.String,System.String,Vector.CANoe.Runtime.ProtocolField@)">
            <summary>Gets the generated protocol field for the given protocol and field names.</summary>
            <param name="protocolName">The name of the protocol.</param>
            <param name="fieldName">The name of the protocol field.</param>
            <param name="result">The protocol field instance, if exists, or <see langword="null"/> otherwise.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all built-in protocols that are available in this <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through all available built-in protocols.</returns>
            <inheritdoc cref="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocols" path="remarks"/>
            <seealso cref="M:Vector.CANoe.Runtime.EthernetPacket.GetProtocols"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.GetInvalidPayloadException">
            <summary>Gets an invalid payload exception.</summary>
            <returns>The EthernetPacketException</returns>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.CreateNewEthernetPacketException">
            <summary>Creates a new ethernet packet exception.</summary>
            <returns>The EthernetPacketException</returns>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.CreateNewEthernetPacketException(System.String)">
            <summary>Creates a new ethernet packet exception.</summary>
            <param name="message">The message text.</param>
            <returns>The EthernetPacketException</returns>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacket.CreateNewEthernetPacketException(System.String,System.Exception)">
            <summary>Creates a new ethernet packet exception.</summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
            <returns>The EthernetPacketException</returns>
            <exclude/>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAF">
            <summary>
            Class representing the protocol AAF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AAF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AAF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.Format">
            <summary>
            AAF Format.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAF.FormatType">
            <summary>
            Class representing the protocol field 'Format' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.FormatType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.Sp">
            <summary>
            AAF Sparse Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAF.SpType">
            <summary>
            Class representing the protocol field 'Sp' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.SpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.Evt">
            <summary>
            AAF EVT.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAF.EvtType">
            <summary>
            Class representing the protocol field 'Evt' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAF.EvtType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAFPCM">
            <summary>
            Class representing the protocol AAFPCM.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AAFPCM.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AAFPCM"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.Nsr">
            <summary>
            AAFPCM Nominal Sample Rate.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAFPCM.NsrType">
            <summary>
            Class representing the protocol field 'Nsr' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAFPCM"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.NsrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.ChannelsPerFrame">
            <summary>
            AAFPCM Channels Per Frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAFPCM.ChannelsPerFrameType">
            <summary>
            Class representing the protocol field 'ChannelsPerFrame' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAFPCM"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.ChannelsPerFrameType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.BitDepth">
            <summary>
            AAFPCM Bit Depth.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AAFPCM.BitDepthType">
            <summary>
            Class representing the protocol field 'BitDepth' of <see cref="T:Vector.CANoe.Runtime.Protocols.AAFPCM"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AAFPCM.BitDepthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AEF">
            <summary>
            Class representing the protocol AEF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AEF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AEF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.Enc">
            <summary>
            AEF Encryption Format.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AEF.EncType">
            <summary>
            Class representing the protocol field 'Enc' of <see cref="T:Vector.CANoe.Runtime.Protocols.AEF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.EncType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.Blocks">
            <summary>
            AEF Blocks.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AEF.BlocksType">
            <summary>
            Class representing the protocol field 'Blocks' of <see cref="T:Vector.CANoe.Runtime.Protocols.AEF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.BlocksType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.KeyId">
            <summary>
            AEF Key ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AEF.KeyIdType">
            <summary>
            Class representing the protocol field 'KeyId' of <see cref="T:Vector.CANoe.Runtime.Protocols.AEF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AEF.KeyIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH">
            <summary>
            Class representing the protocol AH.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AH.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Next">
            <summary>
            AH Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Length">
            <summary>
            AH Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Spi">
            <summary>
            AH Security Parameters Index.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH.SpiType">
            <summary>
            Class representing the protocol field 'Spi' of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.SpiType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Sequence">
            <summary>
            AH Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.Icv">
            <summary>
            AH Integrity Check Value.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AH.IcvType">
            <summary>
            Class representing the protocol field 'Icv' of <see cref="T:Vector.CANoe.Runtime.Protocols.AH"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AH.IcvType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP">
            <summary>
            Class representing the protocol ARP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ARP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.Header">
            <summary>
            ARP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwType">
            <summary>
            ARP Hardware Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.HwTypeType">
            <summary>
            Class representing the protocol field 'HwType' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtType">
            <summary>
            ARP Protocol Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.ProtTypeType">
            <summary>
            Class representing the protocol field 'ProtType' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwSize">
            <summary>
            ARP Hardware Size.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.HwSizeType">
            <summary>
            Class representing the protocol field 'HwSize' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwSizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtSize">
            <summary>
            ARP Protocol Size.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.ProtSizeType">
            <summary>
            Class representing the protocol field 'ProtSize' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtSizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.Operation">
            <summary>
            ARP Operation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.OperationType">
            <summary>
            Class representing the protocol field 'Operation' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.OperationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwSourceAddr">
            <summary>
            ARP Sender Hardware Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.HwSourceAddrType">
            <summary>
            Class representing the protocol field 'HwSourceAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwSourceAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtSourceAddr">
            <summary>
            ARP Sender Protocol Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.ProtSourceAddrType">
            <summary>
            Class representing the protocol field 'ProtSourceAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtSourceAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwDestinationAddr">
            <summary>
            ARP Target Hardware Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.HwDestinationAddrType">
            <summary>
            Class representing the protocol field 'HwDestinationAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.HwDestinationAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtDestinationAddr">
            <summary>
            ARP Target Protocol Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ARP.ProtDestinationAddrType">
            <summary>
            Class representing the protocol field 'ProtDestinationAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ARP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ARP.ProtDestinationAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AutosarPduMux">
            <summary>
            Class representing the protocol AutosarPduMux.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AutosarPduMux.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AutosarPduMux.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AutosarPduMux"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AVTP">
            <summary>
            Class representing the protocol AVTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AVTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.AVTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.AVTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AVTP.Subtype">
            <summary>
            AVTP Subtype.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AVTP.SubtypeType">
            <summary>
            Class representing the protocol field 'Subtype' of <see cref="T:Vector.CANoe.Runtime.Protocols.AVTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AVTP.SubtypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AVTP.Version">
            <summary>
            AVTP Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.AVTP.VersionType">
            <summary>
            Class representing the protocol field 'Version' of <see cref="T:Vector.CANoe.Runtime.Protocols.AVTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.AVTP.VersionType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF">
            <summary>
            Class representing the protocol CRF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.CRF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.Fs">
            <summary>
            CRF Frame Sync.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.FsType">
            <summary>
            Class representing the protocol field 'Fs' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.FsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.CRF.FsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF.FsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.Type">
            <summary>
            CRF Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.Pull">
            <summary>
            CRF Pull.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.PullType">
            <summary>
            Class representing the protocol field 'Pull' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.PullType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.BaseFrequency">
            <summary>
            CRF Base Frequency.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.BaseFrequencyType">
            <summary>
            Class representing the protocol field 'BaseFrequency' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.BaseFrequencyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.DataLength">
            <summary>
            CRF Data Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.DataLengthType">
            <summary>
            Class representing the protocol field 'DataLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.DataLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.TimestampInterval">
            <summary>
            CRF Timestamp Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CRF.TimestampIntervalType">
            <summary>
            Class representing the protocol field 'TimestampInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.CRF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CRF.TimestampIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF">
            <summary>
            Class representing the protocol CVF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.CVF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.Format">
            <summary>
            CVF Format.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF.FormatType">
            <summary>
            Class representing the protocol field 'Format' of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.FormatType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.FormatSubtype">
            <summary>
            CVF Format Subtype.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF.FormatSubtypeType">
            <summary>
            Class representing the protocol field 'FormatSubtype' of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.FormatSubtypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.M">
            <summary>
            CVF Marker Bit.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF.MType">
            <summary>
            Class representing the protocol field 'M' of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.MType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.CVF.MType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF.MType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.Evt">
            <summary>
            CVF Evt.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF.EvtType">
            <summary>
            Class representing the protocol field 'Evt' of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.EvtType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.Ptv">
            <summary>
            CVF Ptv.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.CVF.PtvType">
            <summary>
            Class representing the protocol field 'Ptv' of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.CVF.PtvType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.CVF.PtvType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.CVF.PtvType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4">
            <summary>
            Class representing the protocol DHCPv4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.DHCPv4.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Header">
            <summary>
            DHCPv4 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Operation">
            <summary>
            DHCPv4 Operation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.OperationType">
            <summary>
            Class representing the protocol field 'Operation' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.OperationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HwType">
            <summary>
            DHCPv4 Hardware Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.HwTypeType">
            <summary>
            Class representing the protocol field 'HwType' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HwTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HwSize">
            <summary>
            DHCPv4 Hardware Size.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.HwSizeType">
            <summary>
            Class representing the protocol field 'HwSize' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HwSizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Hops">
            <summary>
            DHCPv4 Hops.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.HopsType">
            <summary>
            Class representing the protocol field 'Hops' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.HopsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Xid">
            <summary>
            DHCPv4 XID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.XidType">
            <summary>
            Class representing the protocol field 'Xid' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.XidType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Time">
            <summary>
            DHCPv4 Seconds.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.TimeType">
            <summary>
            Class representing the protocol field 'Time' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.TimeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.Flags">
            <summary>
            DHCPv4 Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.DHCPv4.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientAddr">
            <summary>
            DHCPv4 Client IP Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientAddrType">
            <summary>
            Class representing the protocol field 'ClientAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.YourAddr">
            <summary>
            DHCPv4 Your IP Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.YourAddrType">
            <summary>
            Class representing the protocol field 'YourAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.YourAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerAddr">
            <summary>
            DHCPv4 Server IP Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerAddrType">
            <summary>
            Class representing the protocol field 'ServerAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.AgentAddr">
            <summary>
            DHCPv4 Agent IP Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.AgentAddrType">
            <summary>
            Class representing the protocol field 'AgentAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.AgentAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddr">
            <summary>
            DHCPv4 Client Hw Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddrType">
            <summary>
            Class representing the protocol field 'ClientHwAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddrPadding">
            <summary>
            DHCPv4 Client Hw Address Padding.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddrPaddingType">
            <summary>
            Class representing the protocol field 'ClientHwAddrPadding' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ClientHwAddrPaddingType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerName">
            <summary>
            DHCPv4 Server Name.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerNameType">
            <summary>
            Class representing the protocol field 'ServerName' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.ServerNameType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.File">
            <summary>
            DHCPv4 Boot File Name.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.FileType">
            <summary>
            Class representing the protocol field 'File' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.FileType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.MagicCookie">
            <summary>
            DHCPv4 Magic Cookie.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv4.MagicCookieType">
            <summary>
            Class representing the protocol field 'MagicCookie' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv4.MagicCookieType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv6">
            <summary>
            Class representing the protocol DHCPv6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv6.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.DHCPv6.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv6"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv6.Header">
            <summary>
            DHCPv6 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv6.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv6.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv6.MsgType">
            <summary>
            DHCPv6 Message type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DHCPv6.MsgTypeType">
            <summary>
            Class representing the protocol field 'MsgType' of <see cref="T:Vector.CANoe.Runtime.Protocols.DHCPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DHCPv6.MsgTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DoIP">
            <summary>
            Class representing the protocol DoIP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DoIP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.DoIP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.DoIP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.DTLS">
            <summary>
            Class representing the protocol DTLS.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.DTLS.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.DTLS.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.DTLS"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EECF">
            <summary>
            Class representing the protocol EECF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.EECF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.EECF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.Enc">
            <summary>
            EECF Encryption Algorithm.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EECF.EncType">
            <summary>
            Class representing the protocol field 'Enc' of <see cref="T:Vector.CANoe.Runtime.Protocols.EECF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.EncType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.Length">
            <summary>
            EECF Encrypted Payload Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EECF.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.EECF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.KeyId">
            <summary>
            EECF Key ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EECF.KeyIdType">
            <summary>
            Class representing the protocol field 'KeyId' of <see cref="T:Vector.CANoe.Runtime.Protocols.EECF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EECF.KeyIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EFControl">
            <summary>
            Class representing the protocol EFControl.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EFControl.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.EFControl.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.EFControl"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EFControl.ControlDataLength">
            <summary>
            EFControl Control Data Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EFControl.ControlDataLengthType">
            <summary>
            Class representing the protocol field 'ControlDataLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.EFControl"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EFControl.ControlDataLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.EFStream">
            <summary>
            Class representing the protocol EFStream.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.EFStream.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.EFStream.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.EFStream"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF">
            <summary>
            Class representing the protocol ESCF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ESCF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.Sig">
            <summary>
            ESCF Signature Algorithm.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.SigType">
            <summary>
            Class representing the protocol field 'Sig' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SigType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.Length">
            <summary>
            ESCF Encapsulated AVTPDU Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.KeyId">
            <summary>
            ESCF Key ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.KeyIdType">
            <summary>
            Class representing the protocol field 'KeyId' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.KeyIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SigningTimestamp">
            <summary>
            ESCF Signing Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.SigningTimestampType">
            <summary>
            Class representing the protocol field 'SigningTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SigningTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SignatureC">
            <summary>
            ESCF ECDSA Signature C.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.SignatureCType">
            <summary>
            Class representing the protocol field 'SignatureC' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SignatureCType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SignatureD">
            <summary>
            ESCF ECDSA Signature D.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESCF.SignatureDType">
            <summary>
            Class representing the protocol field 'SignatureD' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESCF.SignatureDType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESP">
            <summary>
            Class representing the protocol ESP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ESP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ESP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESP.Spi">
            <summary>
            ESP Security Parameters Index.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESP.SpiType">
            <summary>
            Class representing the protocol field 'Spi' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESP.SpiType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESP.Sequence">
            <summary>
            ESP Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ESP.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ESP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ESP.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.FSA">
            <summary>
            Class representing the protocol FSA.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.FSA.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.FSA.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.FSA"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.HDCPAuth">
            <summary>
            Class representing the protocol HDCPAuth.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.HDCPAuth.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.HDCPAuth.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.HDCPAuth"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.HSFZ">
            <summary>
            Class representing the protocol HSFZ.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.HSFZ.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.HSFZ.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.HSFZ"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.HTTP">
            <summary>
            Class representing the protocol HTTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.HTTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.HTTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.HTTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.HTTP.Header">
            <summary>
            HTTP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.HTTP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.HTTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.HTTP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4">
            <summary>
            Class representing the protocol ICMPv4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Header">
            <summary>
            ICMPv4 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Type">
            <summary>
            ICMPv4 Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Code">
            <summary>
            ICMPv4 Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.CodeType">
            <summary>
            Class representing the protocol field 'Code' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.CodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Checksum">
            <summary>
            ICMPv4 Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReply">
            <summary>
            ICMPv4 EchoReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType">
            <summary>
            Class representing the protocol field 'EchoReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.Identifier">
            <summary>
            ICMPv4 EchoReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.Sequence">
            <summary>
            ICMPv4 EchoReply Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DestinationUnreachable">
            <summary>
            ICMPv4 DestinationUnreachable.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DestinationUnreachableType">
            <summary>
            Class representing the protocol field 'DestinationUnreachable' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DestinationUnreachableType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.DestinationUnreachableType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DestinationUnreachableType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SourceQuench">
            <summary>
            ICMPv4 SourceQuench.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SourceQuenchType">
            <summary>
            Class representing the protocol field 'SourceQuench' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SourceQuenchType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.SourceQuenchType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SourceQuenchType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Redirect">
            <summary>
            ICMPv4 Redirect.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType">
            <summary>
            Class representing the protocol field 'Redirect' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType.GatewayAddress">
            <summary>
            ICMPv4 Redirect Gateway IP Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType.GatewayAddressType">
            <summary>
            Class representing the protocol field 'GatewayAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RedirectType.GatewayAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AlternateHostAddress">
            <summary>
            ICMPv4 AlternateHostAddress.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AlternateHostAddressType">
            <summary>
            Class representing the protocol field 'AlternateHostAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AlternateHostAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Echo">
            <summary>
            ICMPv4 Echo.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType">
            <summary>
            Class representing the protocol field 'Echo' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.Identifier">
            <summary>
            ICMPv4 Echo Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.Sequence">
            <summary>
            ICMPv4 Echo Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.EchoType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisement">
            <summary>
            ICMPv4 RouterAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType">
            <summary>
            Class representing the protocol field 'RouterAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.NumOfAddr">
            <summary>
            ICMPv4 RouterAdvertisement Number of Addresses.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.NumOfAddrType">
            <summary>
            Class representing the protocol field 'NumOfAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.NumOfAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.AddrEntrySize">
            <summary>
            ICMPv4 RouterAdvertisement Address Entry Size.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.AddrEntrySizeType">
            <summary>
            Class representing the protocol field 'AddrEntrySize' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.AddrEntrySizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.Lifetime">
            <summary>
            ICMPv4 RouterAdvertisement Lifetime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.LifetimeType">
            <summary>
            Class representing the protocol field 'Lifetime' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.LifetimeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.RouterAddr">
            <summary>
            ICMPv4 RouterAdvertisement Router Addresses.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.RouterAddrType">
            <summary>
            Class representing the protocol field 'RouterAddr' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterAdvertisementType.RouterAddrType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterSolicitation">
            <summary>
            ICMPv4 RouterSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterSolicitationType">
            <summary>
            Class representing the protocol field 'RouterSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterSolicitationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.RouterSolicitationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimeExceeded">
            <summary>
            ICMPv4 TimeExceeded.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimeExceededType">
            <summary>
            Class representing the protocol field 'TimeExceeded' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimeExceededType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.TimeExceededType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimeExceededType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblem">
            <summary>
            ICMPv4 ParameterProblem.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType">
            <summary>
            Class representing the protocol field 'ParameterProblem' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType.Pointer">
            <summary>
            ICMPv4 ParameterProblem Pointer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType.PointerType">
            <summary>
            Class representing the protocol field 'Pointer' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.ParameterProblemType.PointerType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Timestamp">
            <summary>
            ICMPv4 Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType">
            <summary>
            Class representing the protocol field 'Timestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampOriginate">
            <summary>
            ICMPv4 Timestamp Originate Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampOriginateType">
            <summary>
            Class representing the protocol field 'TimestampOriginate' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampOriginateType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampReceive">
            <summary>
            ICMPv4 Timestamp Receivce Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampReceiveType">
            <summary>
            Class representing the protocol field 'TimestampReceive' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampReceiveType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampTransmit">
            <summary>
            ICMPv4 Timestamp Transmit Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampTransmitType">
            <summary>
            Class representing the protocol field 'TimestampTransmit' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.TimestampTransmitType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.Identifier">
            <summary>
            ICMPv4 Timestamp Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.Sequence">
            <summary>
            ICMPv4 Timestamp Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReply">
            <summary>
            ICMPv4 TimestampReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType">
            <summary>
            Class representing the protocol field 'TimestampReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.Identifier">
            <summary>
            ICMPv4 TimestampReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.Sequence">
            <summary>
            ICMPv4 TimestampReply Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampOriginate">
            <summary>
            ICMPv4 TimestampReply Originate Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampOriginateType">
            <summary>
            Class representing the protocol field 'TimestampOriginate' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampOriginateType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampReceive">
            <summary>
            ICMPv4 TimestampReply Receivce Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampReceiveType">
            <summary>
            Class representing the protocol field 'TimestampReceive' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampReceiveType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampTransmit">
            <summary>
            ICMPv4 TimestampReply Transmit Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampTransmitType">
            <summary>
            Class representing the protocol field 'TimestampTransmit' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TimestampReplyType.TimestampTransmitType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequest">
            <summary>
            ICMPv4 InformationRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType">
            <summary>
            Class representing the protocol field 'InformationRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.Identifier">
            <summary>
            ICMPv4 InformationRequest Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.Sequence">
            <summary>
            ICMPv4 InformationRequest Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationRequestType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReply">
            <summary>
            ICMPv4 InformationReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType">
            <summary>
            Class representing the protocol field 'InformationReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.Identifier">
            <summary>
            ICMPv4 InformationReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.Sequence">
            <summary>
            ICMPv4 InformationReply Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.InformationReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequest">
            <summary>
            ICMPv4 AddrMaskRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType">
            <summary>
            Class representing the protocol field 'AddrMaskRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.AddressMask">
            <summary>
            ICMPv4 AddrMaskRequest Address Mask.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.AddressMaskType">
            <summary>
            Class representing the protocol field 'AddressMask' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.AddressMaskType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.Identifier">
            <summary>
            ICMPv4 AddrMaskRequest Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.Sequence">
            <summary>
            ICMPv4 AddrMaskRequest Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskRequestType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReply">
            <summary>
            ICMPv4 AddrMaskReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType">
            <summary>
            Class representing the protocol field 'AddrMaskReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.AddressMask">
            <summary>
            ICMPv4 AddrMaskReply Address Mask.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.AddressMaskType">
            <summary>
            Class representing the protocol field 'AddressMask' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.AddressMaskType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.Identifier">
            <summary>
            ICMPv4 AddrMaskReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.Sequence">
            <summary>
            ICMPv4 AddrMaskReply Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.AddrMaskReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Traceroute">
            <summary>
            ICMPv4 Traceroute.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType">
            <summary>
            Class representing the protocol field 'Traceroute' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutboundHopCnt">
            <summary>
            ICMPv4 Traceroute Outbound Hop Counter.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutboundHopCntType">
            <summary>
            Class representing the protocol field 'OutboundHopCnt' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutboundHopCntType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.ReturnHopCnt">
            <summary>
            ICMPv4 Traceroute Return Hop Counter.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.ReturnHopCntType">
            <summary>
            Class representing the protocol field 'ReturnHopCnt' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.ReturnHopCntType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkSpeed">
            <summary>
            ICMPv4 Traceroute Output Link Speed.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkSpeedType">
            <summary>
            Class representing the protocol field 'OutputLinkSpeed' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkSpeedType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkMTU">
            <summary>
            ICMPv4 Traceroute Output Link MTU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkMTUType">
            <summary>
            Class representing the protocol field 'OutputLinkMTU' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.OutputLinkMTUType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.Identifier">
            <summary>
            ICMPv4 Traceroute Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.TracerouteType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvError">
            <summary>
            ICMPv4 DatagramConvError.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType">
            <summary>
            Class representing the protocol field 'DatagramConvError' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType.ErrorPointer">
            <summary>
            ICMPv4 DatagramConvError Pointer to Problem Area.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType.ErrorPointerType">
            <summary>
            Class representing the protocol field 'ErrorPointer' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DatagramConvErrorType.ErrorPointerType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileHostRedirect">
            <summary>
            ICMPv4 MobileHostRedirect.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileHostRedirectType">
            <summary>
            Class representing the protocol field 'MobileHostRedirect' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileHostRedirectType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6WhereAreYou">
            <summary>
            ICMPv4 Ipv6WhereAreYou.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6WhereAreYouType">
            <summary>
            Class representing the protocol field 'Ipv6WhereAreYou' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6WhereAreYouType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6IAmHere">
            <summary>
            ICMPv4 Ipv6IAmHere.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6IAmHereType">
            <summary>
            Class representing the protocol field 'Ipv6IAmHere' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Ipv6IAmHereType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegRequest">
            <summary>
            ICMPv4 MobileRegRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegRequestType">
            <summary>
            Class representing the protocol field 'MobileRegRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegReply">
            <summary>
            ICMPv4 MobileRegReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegReplyType">
            <summary>
            Class representing the protocol field 'MobileRegReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MobileRegReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequest">
            <summary>
            ICMPv4 DomainNameRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType">
            <summary>
            Class representing the protocol field 'DomainNameRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.Identifier">
            <summary>
            ICMPv4 DomainNameRequest Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.Sequence">
            <summary>
            ICMPv4 DomainNameRequest Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameRequestType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReply">
            <summary>
            ICMPv4 DomainNameReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType">
            <summary>
            Class representing the protocol field 'DomainNameReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.Ttl">
            <summary>
            ICMPv4 DomainNameReply Time-to-live.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.TtlType">
            <summary>
            Class representing the protocol field 'Ttl' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.TtlType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.DomainNames">
            <summary>
            ICMPv4 DomainNameReply Domain Names.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.DomainNamesType">
            <summary>
            Class representing the protocol field 'DomainNames' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.DomainNamesType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.Identifier">
            <summary>
            ICMPv4 DomainNameReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.Sequence">
            <summary>
            ICMPv4 DomainNameReply Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.DomainNameReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.Skip">
            <summary>
            ICMPv4 Skip.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SkipType">
            <summary>
            Class representing the protocol field 'Skip' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SkipType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailures">
            <summary>
            ICMPv4 SecurityFailures.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType">
            <summary>
            Class representing the protocol field 'SecurityFailures' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType.PointerSPI">
            <summary>
            ICMPv4 SecurityFailures Pointer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType.PointerSPIType">
            <summary>
            Class representing the protocol field 'PointerSPI' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.SecurityFailuresType.PointerSPIType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExp">
            <summary>
            ICMPv4 MsgUtilizedByExp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType">
            <summary>
            Class representing the protocol field 'MsgUtilizedByExp' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType.SubType">
            <summary>
            ICMPv4 MsgUtilizedByExp Subtype.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType.SubTypeType">
            <summary>
            Class representing the protocol field 'SubType' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv4.MsgUtilizedByExpType.SubTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6">
            <summary>
            Class representing the protocol ICMPv6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.Header">
            <summary>
            ICMPv6 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.Type">
            <summary>
            ICMPv6 Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.Code">
            <summary>
            ICMPv6 Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.CodeType">
            <summary>
            Class representing the protocol field 'Code' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.CodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.Checksum">
            <summary>
            ICMPv6 Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.DestinationUnreachable">
            <summary>
            ICMPv6 DestinationUnreachable.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.DestinationUnreachableType">
            <summary>
            Class representing the protocol field 'DestinationUnreachable' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.DestinationUnreachableType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBig">
            <summary>
            ICMPv6 PacketTooBig.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType">
            <summary>
            Class representing the protocol field 'PacketTooBig' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType.Mtu">
            <summary>
            ICMPv6 PacketTooBig MTU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType.MtuType">
            <summary>
            Class representing the protocol field 'Mtu' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.PacketTooBigType.MtuType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.TimeExceeded">
            <summary>
            ICMPv6 TimeExceeded.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.TimeExceededType">
            <summary>
            Class representing the protocol field 'TimeExceeded' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.TimeExceededType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblem">
            <summary>
            ICMPv6 ParameterProblem.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType">
            <summary>
            Class representing the protocol field 'ParameterProblem' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType.Pointer">
            <summary>
            ICMPv6 ParameterProblem Pointer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType.PointerType">
            <summary>
            Class representing the protocol field 'Pointer' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.ParameterProblemType.PointerType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequest">
            <summary>
            ICMPv6 EchoRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType">
            <summary>
            Class representing the protocol field 'EchoRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.Identifier">
            <summary>
            ICMPv6 EchoRequest Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.Sequence">
            <summary>
            ICMPv6 EchoRequest Sequence number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoRequestType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReply">
            <summary>
            ICMPv6 EchoReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType">
            <summary>
            Class representing the protocol field 'EchoReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.Identifier">
            <summary>
            ICMPv6 EchoReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.Sequence">
            <summary>
            ICMPv6 EchoReply Sequence number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.EchoReplyType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQuery">
            <summary>
            ICMPv6 MulticastListenerQuery.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType">
            <summary>
            Class representing the protocol field 'MulticastListenerQuery' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SuppressRouterSideProcessing">
            <summary>
            ICMPv6 MulticastListenerQuery Suppress Router-Side Processing.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SuppressRouterSideProcessingType">
            <summary>
            Class representing the protocol field 'SuppressRouterSideProcessing' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SuppressRouterSideProcessingType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.Qrv">
            <summary>
            ICMPv6 MulticastListenerQuery QRV.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.QrvType">
            <summary>
            Class representing the protocol field 'Qrv' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.QrvType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.Qqic">
            <summary>
            ICMPv6 MulticastListenerQuery QQIC.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.QqicType">
            <summary>
            Class representing the protocol field 'Qqic' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.QqicType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SourceAddress">
            <summary>
            ICMPv6 MulticastListenerQuery Source Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SourceAddressType">
            <summary>
            Class representing the protocol field 'SourceAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.SourceAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MaximumResponseCode">
            <summary>
            ICMPv6 MulticastListenerQuery Maximum Response Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MaximumResponseCodeType">
            <summary>
            Class representing the protocol field 'MaximumResponseCode' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MaximumResponseCodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MulticastAddress">
            <summary>
            ICMPv6 MulticastListenerQuery Multicast Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MulticastAddressType">
            <summary>
            Class representing the protocol field 'MulticastAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerQueryType.MulticastAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReport">
            <summary>
            ICMPv6 MulticastListenerReport.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType">
            <summary>
            Class representing the protocol field 'MulticastListenerReport' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MaximumResponseCode">
            <summary>
            ICMPv6 MulticastListenerReport Maximum Response Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MaximumResponseCodeType">
            <summary>
            Class representing the protocol field 'MaximumResponseCode' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MaximumResponseCodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MulticastAddress">
            <summary>
            ICMPv6 MulticastListenerReport Multicast Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MulticastAddressType">
            <summary>
            Class representing the protocol field 'MulticastAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerReportType.MulticastAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDone">
            <summary>
            ICMPv6 MulticastListenerDone.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType">
            <summary>
            Class representing the protocol field 'MulticastListenerDone' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MaximumResponseCode">
            <summary>
            ICMPv6 MulticastListenerDone Maximum Response Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MaximumResponseCodeType">
            <summary>
            Class representing the protocol field 'MaximumResponseCode' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MaximumResponseCodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MulticastAddress">
            <summary>
            ICMPv6 MulticastListenerDone Multicast Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MulticastAddressType">
            <summary>
            Class representing the protocol field 'MulticastAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastListenerDoneType.MulticastAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReport">
            <summary>
            ICMPv6 V2MulticastListenerReport.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType">
            <summary>
            Class representing the protocol field 'V2MulticastListenerReport' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.MulticastAddress">
            <summary>
            ICMPv6 V2MulticastListenerReport Multicast Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.MulticastAddressType">
            <summary>
            Class representing the protocol field 'MulticastAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.MulticastAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.SourceAddress">
            <summary>
            ICMPv6 V2MulticastListenerReport Source Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.SourceAddressType">
            <summary>
            Class representing the protocol field 'SourceAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.V2MulticastListenerReportType.SourceAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequest">
            <summary>
            ICMPv6 HomeAgentAddrDiscRequest.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType">
            <summary>
            Class representing the protocol field 'HomeAgentAddrDiscRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType.Identifier">
            <summary>
            ICMPv6 HomeAgentAddrDiscRequest Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscRequestType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReply">
            <summary>
            ICMPv6 HomeAgentAddrDiscReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType">
            <summary>
            Class representing the protocol field 'HomeAgentAddrDiscReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.HomeAgentAddresses">
            <summary>
            ICMPv6 HomeAgentAddrDiscReply Home Agent Addresses.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.HomeAgentAddressesType">
            <summary>
            Class representing the protocol field 'HomeAgentAddresses' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.HomeAgentAddressesType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.Identifier">
            <summary>
            ICMPv6 HomeAgentAddrDiscReply Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.HomeAgentAddrDiscReplyType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitation">
            <summary>
            ICMPv6 MobilePrefixSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType">
            <summary>
            Class representing the protocol field 'MobilePrefixSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType.Identifier">
            <summary>
            ICMPv6 MobilePrefixSolicitation Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixSolicitationType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisement">
            <summary>
            ICMPv6 MobilePrefixAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType">
            <summary>
            Class representing the protocol field 'MobilePrefixAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementFlags">
            <summary>
            ICMPv6 MobilePrefixAdvertisement Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementFlagsType">
            <summary>
            Class representing the protocol field 'MobilePrefixAdvertisementFlags' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementFlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementFlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementFlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementOptions">
            <summary>
            ICMPv6 MobilePrefixAdvertisement Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementOptionsType">
            <summary>
            Class representing the protocol field 'MobilePrefixAdvertisementOptions' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.MobilePrefixAdvertisementOptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.Identifier">
            <summary>
            ICMPv6 MobilePrefixAdvertisement Identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.IdentifierType">
            <summary>
            Class representing the protocol field 'Identifier' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MobilePrefixAdvertisementType.IdentifierType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisement">
            <summary>
            ICMPv6 MulticastRouterAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType">
            <summary>
            Class representing the protocol field 'MulticastRouterAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.AdvertisementInterval">
            <summary>
            ICMPv6 MulticastRouterAdvertisement Advertisement Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.AdvertisementIntervalType">
            <summary>
            Class representing the protocol field 'AdvertisementInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.AdvertisementIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.QueryInterval">
            <summary>
            ICMPv6 MulticastRouterAdvertisement Query Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.QueryIntervalType">
            <summary>
            Class representing the protocol field 'QueryInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.QueryIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.RobustnessVariable">
            <summary>
            ICMPv6 MulticastRouterAdvertisement Robustness Variable.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.RobustnessVariableType">
            <summary>
            Class representing the protocol field 'RobustnessVariable' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterAdvertisementType.RobustnessVariableType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterSolicitation">
            <summary>
            ICMPv6 MulticastRouterSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterSolicitationType">
            <summary>
            Class representing the protocol field 'MulticastRouterSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterTermination">
            <summary>
            ICMPv6 MulticastRouterTermination.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterTerminationType">
            <summary>
            Class representing the protocol field 'MulticastRouterTermination' of <see cref="T:Vector.CANoe.Runtime.Protocols.ICMPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.ICMPv6.MulticastRouterTerminationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP">
            <summary>
            Class representing the protocol IGMP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IGMP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.Header">
            <summary>
            IGMP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.Type">
            <summary>
            IGMP Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MaxResponseTime">
            <summary>
            IGMP Max. Response Time.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MaxResponseTimeType">
            <summary>
            Class representing the protocol field 'MaxResponseTime' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MaxResponseTimeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.Checksum">
            <summary>
            IGMP Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.GroupAddress">
            <summary>
            IGMP Group Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.GroupAddressType">
            <summary>
            Class representing the protocol field 'GroupAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.GroupAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQuery">
            <summary>
            IGMP Membership Query.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType">
            <summary>
            Class representing the protocol field 'MembershipQuery' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SupressRouterSideProcessing">
            <summary>
            IGMP MembershipQuery Supress Router-Side Processing.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SupressRouterSideProcessingType">
            <summary>
            Class representing the protocol field 'SupressRouterSideProcessing' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SupressRouterSideProcessingType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.Qrv">
            <summary>
            IGMP MembershipQuery QRV.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.QrvType">
            <summary>
            Class representing the protocol field 'Qrv' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.QrvType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.Qqic">
            <summary>
            IGMP MembershipQuery QQIC.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.QqicType">
            <summary>
            Class representing the protocol field 'Qqic' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.QqicType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.NumberOfSources">
            <summary>
            IGMP MembershipQuery Number of Sources.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.NumberOfSourcesType">
            <summary>
            Class representing the protocol field 'NumberOfSources' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.NumberOfSourcesType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SourceAddress">
            <summary>
            IGMP MembershipQuery Source Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SourceAddressType">
            <summary>
            Class representing the protocol field 'SourceAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipQueryType.SourceAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReport">
            <summary>
            IGMP Membership Report.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType">
            <summary>
            Class representing the protocol field 'MembershipReport' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType.NumberOfGroupRecords">
            <summary>
            IGMP MembershipReport Number of Group Records.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType.NumberOfGroupRecordsType">
            <summary>
            Class representing the protocol field 'NumberOfGroupRecords' of <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IGMP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IGMP.MembershipReportType.NumberOfGroupRecordsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2">
            <summary>
            Class representing the protocol IKEv2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IKEv2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Initiator">
            <summary>
            IKEv2 Initiator SPI.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.InitiatorType">
            <summary>
            Class representing the protocol field 'Initiator' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.InitiatorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Responder">
            <summary>
            IKEv2 Responder SPI.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.ResponderType">
            <summary>
            Class representing the protocol field 'Responder' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.ResponderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Next">
            <summary>
            IKEv2 Next Payload.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Major">
            <summary>
            IKEv2 Major Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.MajorType">
            <summary>
            Class representing the protocol field 'Major' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.MajorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Minor">
            <summary>
            IKEv2 Minor Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.MinorType">
            <summary>
            Class representing the protocol field 'Minor' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.MinorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Type">
            <summary>
            IKEv2 Exchange Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Flags">
            <summary>
            IKEv2 Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Id">
            <summary>
            IKEv2 Message ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.IdType">
            <summary>
            Class representing the protocol field 'Id' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.IdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.Length">
            <summary>
            IKEv2 Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IKEv2.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IKEv2"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IKEv2.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4">
            <summary>
            Class representing the protocol IPv4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv4.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Header">
            <summary>
            IPv4 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Version">
            <summary>
            IPv4 Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.VersionType">
            <summary>
            Class representing the protocol field 'Version' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.VersionType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Ihl">
            <summary>
            IPv4 Header Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.IhlType">
            <summary>
            Class representing the protocol field 'Ihl' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.IhlType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Dscp">
            <summary>
            IPv4 DSCP.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.DscpType">
            <summary>
            Class representing the protocol field 'Dscp' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.DscpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Ecn">
            <summary>
            IPv4 ECN.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.EcnType">
            <summary>
            Class representing the protocol field 'Ecn' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.EcnType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Length">
            <summary>
            IPv4 Total Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Identification">
            <summary>
            IPv4 Identification.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.IdentificationType">
            <summary>
            Class representing the protocol field 'Identification' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.IdentificationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Flags">
            <summary>
            IPv4 Control Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv4.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Offset">
            <summary>
            IPv4 Fragment Offset.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OffsetType">
            <summary>
            Class representing the protocol field 'Offset' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OffsetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Ttl">
            <summary>
            IPv4 Time to Live.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.TtlType">
            <summary>
            Class representing the protocol field 'Ttl' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.TtlType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Protocol">
            <summary>
            IPv4 Protocol.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.ProtocolType">
            <summary>
            Class representing the protocol field 'Protocol' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.ProtocolType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Checksum">
            <summary>
            IPv4 Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Source">
            <summary>
            IPv4 Source.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.SourceType">
            <summary>
            Class representing the protocol field 'Source' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.SourceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Destination">
            <summary>
            IPv4 Destination.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.DestinationType">
            <summary>
            Class representing the protocol field 'Destination' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.DestinationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.Options">
            <summary>
            IPv4 Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionsType">
            <summary>
            Class representing the protocol field 'Options' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionEOL">
            <summary>
            IPv4 OptionEOL.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionEOLType">
            <summary>
            Class representing the protocol field 'OptionEOL' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionEOLType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionNOP">
            <summary>
            IPv4 OptionNOP.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionNOPType">
            <summary>
            Class representing the protocol field 'OptionNOP' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionNOPType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionSecurity">
            <summary>
            IPv4 OptionSecurity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionSecurityType">
            <summary>
            Class representing the protocol field 'OptionSecurity' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionSecurityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionLooseSourceRoute">
            <summary>
            IPv4 OptionLooseSourceRoute.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionLooseSourceRouteType">
            <summary>
            Class representing the protocol field 'OptionLooseSourceRoute' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionLooseSourceRouteType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionTimeStamp">
            <summary>
            IPv4 OptionTimeStamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionTimeStampType">
            <summary>
            Class representing the protocol field 'OptionTimeStamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionTimeStampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionRecordRoute">
            <summary>
            IPv4 OptionRecordRoute.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionRecordRouteType">
            <summary>
            Class representing the protocol field 'OptionRecordRoute' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionRecordRouteType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionStreamID">
            <summary>
            IPv4 OptionStreamID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionStreamIDType">
            <summary>
            Class representing the protocol field 'OptionStreamID' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionStreamIDType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionStrictSourceRoute">
            <summary>
            IPv4 OptionStrictSourceRoute.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv4.OptionStrictSourceRouteType">
            <summary>
            Class representing the protocol field 'OptionStrictSourceRoute' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv4"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv4.OptionStrictSourceRouteType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6">
            <summary>
            Class representing the protocol IPv6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Header">
            <summary>
            IPv6 Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Version">
            <summary>
            IPv6 Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.VersionType">
            <summary>
            Class representing the protocol field 'Version' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.VersionType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Class">
            <summary>
            IPv6 Traffic Class.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.ClassType">
            <summary>
            Class representing the protocol field 'Class' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.ClassType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Flow">
            <summary>
            IPv6 Flow Label.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FlowType">
            <summary>
            Class representing the protocol field 'Flow' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FlowType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Length">
            <summary>
            IPv6 Payload Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Next">
            <summary>
            IPv6 Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopLimit">
            <summary>
            IPv6 HopLimit.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopLimitType">
            <summary>
            Class representing the protocol field 'HopLimit' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopLimitType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Source">
            <summary>
            IPv6 Source.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.SourceType">
            <summary>
            Class representing the protocol field 'Source' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.SourceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Destination">
            <summary>
            IPv6 Destination.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationType">
            <summary>
            Class representing the protocol field 'Destination' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptions">
            <summary>
            IPv6 IPv6 Hop-by-Hop Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType">
            <summary>
            Class representing the protocol field 'HopByHopOptions' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.Next">
            <summary>
            IPv6 HopByHopOptions Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.Length">
            <summary>
            IPv6 HopByHopOptions Extension Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.Options">
            <summary>
            IPv6 HopByHopOptions Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionsType">
            <summary>
            Class representing the protocol field 'Options' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionCode">
            <summary>
            IPv6 HopByHopOptions Option Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionCodeType">
            <summary>
            Class representing the protocol field 'OptionCode' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionCodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionLength">
            <summary>
            IPv6 HopByHopOptions Option Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionLengthType">
            <summary>
            Class representing the protocol field 'OptionLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionData">
            <summary>
            IPv6 HopByHopOptions Option Data.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionDataType">
            <summary>
            Class representing the protocol field 'OptionData' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.HopByHopOptionsType.OptionDataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Routing">
            <summary>
            IPv6 IPv6 Routing Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType">
            <summary>
            Class representing the protocol field 'Routing' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.Next">
            <summary>
            IPv6 Routing Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.Length">
            <summary>
            IPv6 Routing Extension Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.Type">
            <summary>
            IPv6 Routing Routing Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.TypeType">
            <summary>
            Class representing the protocol field 'Type' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.TypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.SegmentsLeft">
            <summary>
            IPv6 Routing Segments Left.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.SegmentsLeftType">
            <summary>
            Class representing the protocol field 'SegmentsLeft' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.SegmentsLeftType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.Data">
            <summary>
            IPv6 Routing Routing Data.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.DataType">
            <summary>
            Class representing the protocol field 'Data' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.RoutingType.DataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Fragment">
            <summary>
            IPv6 IPv6 Fragment Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType">
            <summary>
            Class representing the protocol field 'Fragment' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.Next">
            <summary>
            IPv6 Fragment Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.Offset">
            <summary>
            IPv6 Fragment Fragment Offset.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.OffsetType">
            <summary>
            Class representing the protocol field 'Offset' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.OffsetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.MFlag">
            <summary>
            IPv6 Fragment M Flag.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.MFlagType">
            <summary>
            Class representing the protocol field 'MFlag' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.MFlagType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.MFlagType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.MFlagType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.Identification">
            <summary>
            IPv6 Fragment Identification.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.IdentificationType">
            <summary>
            Class representing the protocol field 'Identification' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.FragmentType.IdentificationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Authentication">
            <summary>
            IPv6 IPv6 Authentication.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType">
            <summary>
            Class representing the protocol field 'Authentication' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Next">
            <summary>
            IPv6 Authentication Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Length">
            <summary>
            IPv6 Authentication Payload Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Spi">
            <summary>
            IPv6 Authentication SPI.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.SpiType">
            <summary>
            Class representing the protocol field 'Spi' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.SpiType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Sequence">
            <summary>
            IPv6 Authentication Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.Icv">
            <summary>
            IPv6 Authentication ICV.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.IcvType">
            <summary>
            Class representing the protocol field 'Icv' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.AuthenticationType.IcvType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.Esp">
            <summary>
            IPv6 IPv6 Encapsulating Security Payload.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType">
            <summary>
            Class representing the protocol field 'Esp' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.EspType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.Spi">
            <summary>
            IPv6 Esp SPI.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType.SpiType">
            <summary>
            Class representing the protocol field 'Spi' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.SpiType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.Sequence">
            <summary>
            IPv6 Esp Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.Data">
            <summary>
            IPv6 Esp Payload.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType.DataType">
            <summary>
            Class representing the protocol field 'Data' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.EspType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.EspType.DataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptions">
            <summary>
            IPv6 IPv6 Destination Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType">
            <summary>
            Class representing the protocol field 'DestinationOptions' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.Next">
            <summary>
            IPv6 DestinationOptions Next Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.NextType">
            <summary>
            Class representing the protocol field 'Next' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.NextType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.Length">
            <summary>
            IPv6 DestinationOptions Extension Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.Options">
            <summary>
            IPv6 DestinationOptions Options.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionsType">
            <summary>
            Class representing the protocol field 'Options' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionCode">
            <summary>
            IPv6 DestinationOptions Option Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionCodeType">
            <summary>
            Class representing the protocol field 'OptionCode' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionCodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionLength">
            <summary>
            IPv6 DestinationOptions Option Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionLengthType">
            <summary>
            Class representing the protocol field 'OptionLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionData">
            <summary>
            IPv6 DestinationOptions Option Data.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionDataType">
            <summary>
            Class representing the protocol field 'OptionData' of <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.IPv6"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.IPv6.DestinationOptionsType.OptionDataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.MMAStream">
            <summary>
            Class representing the protocol MMAStream.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.MMAStream.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.MMAStream.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.MMAStream"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.MP2T">
            <summary>
            Class representing the protocol MP2T.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.MP2T.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.MP2T.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.MP2T"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP">
            <summary>
            Class representing the protocol NDP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.Header">
            <summary>
            NDP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterSolicitation">
            <summary>
            NDP RouterSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterSolicitationType">
            <summary>
            Class representing the protocol field 'RouterSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.RouterSolicitationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterSolicitationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisement">
            <summary>
            NDP RouterAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType">
            <summary>
            Class representing the protocol field 'RouterAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.CurHopLimit">
            <summary>
            NDP RouterAdvertisement Cur Hop Limit.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.CurHopLimitType">
            <summary>
            Class representing the protocol field 'CurHopLimit' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.CurHopLimitType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ManagedAddrConfig">
            <summary>
            NDP RouterAdvertisement Managed Address Config.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ManagedAddrConfigType">
            <summary>
            Class representing the protocol field 'ManagedAddrConfig' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ManagedAddrConfigType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.OtherConfig">
            <summary>
            NDP RouterAdvertisement Other configuration.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.OtherConfigType">
            <summary>
            Class representing the protocol field 'OtherConfig' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.OtherConfigType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.MobileHomeAgent">
            <summary>
            NDP RouterAdvertisement Mobile Home Agent.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.MobileHomeAgentType">
            <summary>
            Class representing the protocol field 'MobileHomeAgent' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.MobileHomeAgentType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.DefaultRouterPrefs">
            <summary>
            NDP RouterAdvertisement Default Router Preferences.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.DefaultRouterPrefsType">
            <summary>
            Class representing the protocol field 'DefaultRouterPrefs' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.DefaultRouterPrefsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.NeighborDiscoveryProxy">
            <summary>
            NDP RouterAdvertisement Neighbor Discovery Proxy.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.NeighborDiscoveryProxyType">
            <summary>
            Class representing the protocol field 'NeighborDiscoveryProxy' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.NeighborDiscoveryProxyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RouterLifeTime">
            <summary>
            NDP RouterAdvertisement Router Lifetime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RouterLifeTimeType">
            <summary>
            Class representing the protocol field 'RouterLifeTime' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RouterLifeTimeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ReachableTime">
            <summary>
            NDP RouterAdvertisement Reachable Time.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ReachableTimeType">
            <summary>
            Class representing the protocol field 'ReachableTime' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.ReachableTimeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RetransTimer">
            <summary>
            NDP RouterAdvertisement Retrans Timer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RetransTimerType">
            <summary>
            Class representing the protocol field 'RetransTimer' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.RetransTimerType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.Flags">
            <summary>
            NDP RouterAdvertisement Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RouterAdvertisementType.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitation">
            <summary>
            NDP NeighborSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType">
            <summary>
            Class representing the protocol field 'NeighborSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType.Target">
            <summary>
            NDP NeighborSolicitation Target Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType.TargetType">
            <summary>
            Class representing the protocol field 'Target' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborSolicitationType.TargetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisement">
            <summary>
            NDP NeighborAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType">
            <summary>
            Class representing the protocol field 'NeighborAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.RouterFlag">
            <summary>
            NDP NeighborAdvertisement Router Flag.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.RouterFlagType">
            <summary>
            Class representing the protocol field 'RouterFlag' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.RouterFlagType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.SolicitedFlag">
            <summary>
            NDP NeighborAdvertisement Solicited Flag.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.SolicitedFlagType">
            <summary>
            Class representing the protocol field 'SolicitedFlag' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.SolicitedFlagType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.OverrideFlag">
            <summary>
            NDP NeighborAdvertisement Override Flag.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.OverrideFlagType">
            <summary>
            Class representing the protocol field 'OverrideFlag' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.OverrideFlagType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.Flags">
            <summary>
            NDP NeighborAdvertisement Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.Target">
            <summary>
            NDP NeighborAdvertisement Target Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.TargetType">
            <summary>
            Class representing the protocol field 'Target' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.NeighborAdvertisementType.TargetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.Redirect">
            <summary>
            NDP Redirect.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType">
            <summary>
            Class representing the protocol field 'Redirect' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.Destination">
            <summary>
            NDP Redirect Destination Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.DestinationType">
            <summary>
            Class representing the protocol field 'Destination' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.DestinationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.Target">
            <summary>
            NDP Redirect Target Address.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.TargetType">
            <summary>
            Class representing the protocol field 'Target' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.RedirectType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.RedirectType.TargetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.InverseSolicitation">
            <summary>
            NDP InverseSolicitation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.InverseSolicitationType">
            <summary>
            Class representing the protocol field 'InverseSolicitation' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.InverseSolicitationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.InverseSolicitationType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.InverseSolicitationType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.InverseAdvertisement">
            <summary>
            NDP InverseAdvertisement.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.InverseAdvertisementType">
            <summary>
            Class representing the protocol field 'InverseAdvertisement' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.InverseAdvertisementType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NDP.InverseAdvertisementType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP.InverseAdvertisementType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceLinkLayerAddress">
            <summary>
            NDP OptionSourceLinkLayerAddress.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceLinkLayerAddressType">
            <summary>
            Class representing the protocol field 'OptionSourceLinkLayerAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceLinkLayerAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetLinkLayerAddress">
            <summary>
            NDP OptionTargetLinkLayerAddress.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetLinkLayerAddressType">
            <summary>
            Class representing the protocol field 'OptionTargetLinkLayerAddress' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetLinkLayerAddressType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionPrefixInformation">
            <summary>
            NDP OptionPrefixInformation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionPrefixInformationType">
            <summary>
            Class representing the protocol field 'OptionPrefixInformation' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionPrefixInformationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionRedirectedHeader">
            <summary>
            NDP OptionRedirectedHeader.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionRedirectedHeaderType">
            <summary>
            Class representing the protocol field 'OptionRedirectedHeader' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionRedirectedHeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionMTU">
            <summary>
            NDP OptionMTU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionMTUType">
            <summary>
            Class representing the protocol field 'OptionMTU' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionMTUType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionAdvertisementInterval">
            <summary>
            NDP OptionAdvertisementInterval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionAdvertisementIntervalType">
            <summary>
            Class representing the protocol field 'OptionAdvertisementInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionAdvertisementIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionHomeAgentInformation">
            <summary>
            NDP OptionHomeAgentInformation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionHomeAgentInformationType">
            <summary>
            Class representing the protocol field 'OptionHomeAgentInformation' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionHomeAgentInformationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceAddrList">
            <summary>
            NDP OptionSourceAddrList.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceAddrListType">
            <summary>
            Class representing the protocol field 'OptionSourceAddrList' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionSourceAddrListType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetAddrList">
            <summary>
            NDP OptionTargetAddrList.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetAddrListType">
            <summary>
            Class representing the protocol field 'OptionTargetAddrList' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTargetAddrListType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionCGA">
            <summary>
            NDP OptionCGA.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionCGAType">
            <summary>
            Class representing the protocol field 'OptionCGA' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionCGAType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionRSASignature">
            <summary>
            NDP OptionRSASignature.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionRSASignatureType">
            <summary>
            Class representing the protocol field 'OptionRSASignature' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionRSASignatureType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTimestamp">
            <summary>
            NDP OptionTimestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionTimestampType">
            <summary>
            Class representing the protocol field 'OptionTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionNonce">
            <summary>
            NDP OptionNonce.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionNonceType">
            <summary>
            Class representing the protocol field 'OptionNonce' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionNonceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionFlagsExpansion">
            <summary>
            NDP OptionFlagsExpansion.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NDP.OptionFlagsExpansionType">
            <summary>
            Class representing the protocol field 'OptionFlagsExpansion' of <see cref="T:Vector.CANoe.Runtime.Protocols.NDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NDP.OptionFlagsExpansionType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP">
            <summary>
            Class representing the protocol NTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.Header">
            <summary>
            NTP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.LeapInd">
            <summary>
            NTP Leap Indicator.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP.LeapIndType">
            <summary>
            Class representing the protocol field 'LeapInd' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.LeapIndType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.Version">
            <summary>
            NTP Version.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP.VersionType">
            <summary>
            Class representing the protocol field 'Version' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.VersionType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.Mode">
            <summary>
            NTP Mode.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP.ModeType">
            <summary>
            Class representing the protocol field 'Mode' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.ModeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.Control">
            <summary>
            NTP Control.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTP.ControlType">
            <summary>
            Class representing the protocol field 'Control' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTP.ControlType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NTP.ControlType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NTP.ControlType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTSCF">
            <summary>
            Class representing the protocol NTSCF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTSCF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.NTSCF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.NTSCF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTSCF.DataLength">
            <summary>
            NTSCF NTSCF Data Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.NTSCF.DataLengthType">
            <summary>
            Class representing the protocol field 'DataLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.NTSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.NTSCF.DataLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP">
            <summary>
            Class representing the protocol PTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgType">
            <summary>
            PTP Message Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.MsgTypeType">
            <summary>
            Class representing the protocol field 'MsgType' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.TransportSpecific">
            <summary>
            PTP Transport Specific.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.TransportSpecificType">
            <summary>
            Class representing the protocol field 'TransportSpecific' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.TransportSpecificType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.VersionPTP">
            <summary>
            PTP Version PTP.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.VersionPTPType">
            <summary>
            Class representing the protocol field 'VersionPTP' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.VersionPTPType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgLength">
            <summary>
            PTP Message Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.MsgLengthType">
            <summary>
            Class representing the protocol field 'MsgLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.DomainNumber">
            <summary>
            PTP Domain Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.DomainNumberType">
            <summary>
            Class representing the protocol field 'DomainNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.DomainNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Flags">
            <summary>
            PTP Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.CorrectionField">
            <summary>
            PTP Correction Field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.CorrectionFieldType">
            <summary>
            Class representing the protocol field 'CorrectionField' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.CorrectionFieldType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SourceClockIdentity">
            <summary>
            PTP Source Clock Identity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SourceClockIdentityType">
            <summary>
            Class representing the protocol field 'SourceClockIdentity' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SourceClockIdentityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SourcePortNumber">
            <summary>
            PTP Source Port Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SourcePortNumberType">
            <summary>
            Class representing the protocol field 'SourcePortNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SourcePortNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SequenceId">
            <summary>
            PTP Sequence ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SequenceIdType">
            <summary>
            Class representing the protocol field 'SequenceId' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SequenceIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Control">
            <summary>
            PTP Control.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.ControlType">
            <summary>
            Class representing the protocol field 'Control' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.ControlType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgInterval">
            <summary>
            PTP Log Message Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.MsgIntervalType">
            <summary>
            Class representing the protocol field 'MsgInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.MsgIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Sync">
            <summary>
            PTP Sync.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SyncType">
            <summary>
            Class representing the protocol field 'Sync' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SyncType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.SyncType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SyncType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUp">
            <summary>
            PTP FollowUp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType">
            <summary>
            Class representing the protocol field 'FollowUp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.PreciseOriginTimestamp">
            <summary>
            PTP FollowUp Precise Origin Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.PreciseOriginTimestampType">
            <summary>
            Class representing the protocol field 'PreciseOriginTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.PreciseOriginTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoType">
            <summary>
            PTP FollowUp Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoTypeType">
            <summary>
            Class representing the protocol field 'FollowUpInfoType' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoLength">
            <summary>
            PTP FollowUp Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoLengthType">
            <summary>
            Class representing the protocol field 'FollowUpInfoLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpInfoLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgId">
            <summary>
            PTP FollowUp Organization ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgIdType">
            <summary>
            Class representing the protocol field 'FollowUpOrgId' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgSubtype">
            <summary>
            PTP FollowUp FollowUp Organization SubType.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgSubtypeType">
            <summary>
            Class representing the protocol field 'FollowUpOrgSubtype' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.FollowUpOrgSubtypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.CumulativeScaledRatioOffset">
            <summary>
            PTP FollowUp Cumulative Scaled Ratio Offset.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.CumulativeScaledRatioOffsetType">
            <summary>
            Class representing the protocol field 'CumulativeScaledRatioOffset' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.CumulativeScaledRatioOffsetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.GmTimeBaseIndicator">
            <summary>
            PTP FollowUp GM Time Base Indicator.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.GmTimeBaseIndicatorType">
            <summary>
            Class representing the protocol field 'GmTimeBaseIndicator' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.GmTimeBaseIndicatorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.LastGmPhaseChange">
            <summary>
            PTP FollowUp Last GM Phase Change.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.LastGmPhaseChangeType">
            <summary>
            Class representing the protocol field 'LastGmPhaseChange' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.LastGmPhaseChangeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.ScaledLastGmFreqChange">
            <summary>
            PTP FollowUp Scaled Last GM Freq Change.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.ScaledLastGmFreqChangeType">
            <summary>
            Class representing the protocol field 'ScaledLastGmFreqChange' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.FollowUpType.ScaledLastGmFreqChangeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayReq">
            <summary>
            PTP PdelayReq.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType">
            <summary>
            Class representing the protocol field 'PdelayReq' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType.PDelayReqReserved">
            <summary>
            PTP PdelayReq Reserved.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType.PDelayReqReservedType">
            <summary>
            Class representing the protocol field 'PDelayReqReserved' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayReqType.PDelayReqReservedType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayResp">
            <summary>
            PTP PdelayResp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType">
            <summary>
            Class representing the protocol field 'PdelayResp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestReceiptTimestamp">
            <summary>
            PTP PdelayResp Request Receipt Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestReceiptTimestampType">
            <summary>
            Class representing the protocol field 'RequestReceiptTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestReceiptTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingClockIdentity">
            <summary>
            PTP PdelayResp Requesting Clock Identity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingClockIdentityType">
            <summary>
            Class representing the protocol field 'RequestingClockIdentity' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingClockIdentityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingPortNumber">
            <summary>
            PTP PdelayResp Requesting Port Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingPortNumberType">
            <summary>
            Class representing the protocol field 'RequestingPortNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespType.RequestingPortNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUp">
            <summary>
            PTP PdelayRespFollowUp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType">
            <summary>
            Class representing the protocol field 'PdelayRespFollowUp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.ResponseOriginTimestamp">
            <summary>
            PTP PdelayRespFollowUp Response Origin Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.ResponseOriginTimestampType">
            <summary>
            Class representing the protocol field 'ResponseOriginTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.ResponseOriginTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingClockIdentity">
            <summary>
            PTP PdelayRespFollowUp Requesting Clock Identity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingClockIdentityType">
            <summary>
            Class representing the protocol field 'RequestingClockIdentity' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingClockIdentityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingPortNumber">
            <summary>
            PTP PdelayRespFollowUp Requesting Port Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingPortNumberType">
            <summary>
            Class representing the protocol field 'RequestingPortNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.PdelayRespFollowUpType.RequestingPortNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Announce">
            <summary>
            PTP Announce.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType">
            <summary>
            Class representing the protocol field 'Announce' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.CurrentUtcOffset">
            <summary>
            PTP Announce Current UTC Offset.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.CurrentUtcOffsetType">
            <summary>
            Class representing the protocol field 'CurrentUtcOffset' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.CurrentUtcOffsetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority1">
            <summary>
            PTP Announce Grandmaster Priority 1.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority1Type">
            <summary>
            Class representing the protocol field 'GrandmasterPriority1' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority1Type.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockClass">
            <summary>
            PTP Announce Grandmaster Clock Class.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockClassType">
            <summary>
            Class representing the protocol field 'GrandmasterClockClass' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockClassType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockAccuracy">
            <summary>
            PTP Announce Grandmaster Clock Accuracy.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockAccuracyType">
            <summary>
            Class representing the protocol field 'GrandmasterClockAccuracy' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockAccuracyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockVariance">
            <summary>
            PTP Announce Grandmaster Clock Variance.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockVarianceType">
            <summary>
            Class representing the protocol field 'GrandmasterClockVariance' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterClockVarianceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority2">
            <summary>
            PTP Announce Grandmaster Priority 2.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority2Type">
            <summary>
            Class representing the protocol field 'GrandmasterPriority2' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterPriority2Type.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterIdentity">
            <summary>
            PTP Announce Grandmaster Identity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterIdentityType">
            <summary>
            Class representing the protocol field 'GrandmasterIdentity' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.GrandmasterIdentityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.StepsRemoved">
            <summary>
            PTP Announce Steps Removed.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.StepsRemovedType">
            <summary>
            Class representing the protocol field 'StepsRemoved' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.StepsRemovedType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.TimeSource">
            <summary>
            PTP Announce Time Source.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.TimeSourceType">
            <summary>
            Class representing the protocol field 'TimeSource' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.AnnounceType.TimeSourceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.Signaling">
            <summary>
            PTP Signaling.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType">
            <summary>
            Class representing the protocol field 'Signaling' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetClockIdentity">
            <summary>
            PTP Signaling Target Clock Identity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetClockIdentityType">
            <summary>
            Class representing the protocol field 'TargetClockIdentity' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetClockIdentityType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetPortNumber">
            <summary>
            PTP Signaling Target Port Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetPortNumberType">
            <summary>
            Class representing the protocol field 'TargetPortNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TargetPortNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqType">
            <summary>
            PTP Signaling Type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqTypeType">
            <summary>
            Class representing the protocol field 'MsgIntervalReqType' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqTypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqLength">
            <summary>
            PTP Signaling Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqLengthType">
            <summary>
            Class representing the protocol field 'MsgIntervalReqLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.MsgIntervalReqLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgId">
            <summary>
            PTP Signaling Organization ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgIdType">
            <summary>
            Class representing the protocol field 'SignalingOrgId' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgSubtype">
            <summary>
            PTP Signaling Organization Subtype.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgSubtypeType">
            <summary>
            Class representing the protocol field 'SignalingOrgSubtype' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingOrgSubtypeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.LinkDelayInterval">
            <summary>
            PTP Signaling Link Delay Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.LinkDelayIntervalType">
            <summary>
            Class representing the protocol field 'LinkDelayInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.LinkDelayIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TimeSyncInterval">
            <summary>
            PTP Signaling Time Sync Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TimeSyncIntervalType">
            <summary>
            Class representing the protocol field 'TimeSyncInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.TimeSyncIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.AnnounceInterval">
            <summary>
            PTP Signaling Announce Interval.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.AnnounceIntervalType">
            <summary>
            Class representing the protocol field 'AnnounceInterval' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.AnnounceIntervalType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingFlags">
            <summary>
            PTP Signaling Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingFlagsType">
            <summary>
            Class representing the protocol field 'SignalingFlags' of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.PTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingFlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingFlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.PTP.SignalingType.SignalingFlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RTCP">
            <summary>
            Class representing the protocol RTCP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RTCP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RTCP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.RTCP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RTP">
            <summary>
            Class representing the protocol RTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.RTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF">
            <summary>
            Class representing the protocol RVF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.ActivePixels">
            <summary>
            RVF Active Pixels.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.ActivePixelsType">
            <summary>
            Class representing the protocol field 'ActivePixels' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.ActivePixelsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.TotalLines">
            <summary>
            RVF Total Lines.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.TotalLinesType">
            <summary>
            Class representing the protocol field 'TotalLines' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.TotalLinesType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.Ap">
            <summary>
            RVF AP.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.ApType">
            <summary>
            Class representing the protocol field 'Ap' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.ApType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.ApType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF.ApType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.F">
            <summary>
            RVF Field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.FType">
            <summary>
            Class representing the protocol field 'F' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.FType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.FType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF.FType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.Ef">
            <summary>
            RVF End Frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.EfType">
            <summary>
            Class representing the protocol field 'Ef' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.EfType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.EfType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF.EfType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.Evt">
            <summary>
            RVF Evt.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.EvtType">
            <summary>
            Class representing the protocol field 'Evt' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.EvtType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.Pd">
            <summary>
            RVF Pull Down.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.PdType">
            <summary>
            Class representing the protocol field 'Pd' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.PdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.PdType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF.PdType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.I">
            <summary>
            RVF Interlaced.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.IType">
            <summary>
            Class representing the protocol field 'I' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.IType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.RVF.IType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF.IType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.PixelDepth">
            <summary>
            RVF Pixel Depth.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.PixelDepthType">
            <summary>
            Class representing the protocol field 'PixelDepth' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.PixelDepthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.PixelFormat">
            <summary>
            RVF Pixel Format.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.PixelFormatType">
            <summary>
            Class representing the protocol field 'PixelFormat' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.PixelFormatType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.FrameRate">
            <summary>
            RVF Frame Rate.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.FrameRateType">
            <summary>
            Class representing the protocol field 'FrameRate' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.FrameRateType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.ColorSpace">
            <summary>
            RVF Colorspace.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.ColorSpaceType">
            <summary>
            Class representing the protocol field 'ColorSpace' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.ColorSpaceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.NumLines">
            <summary>
            RVF Number of Lines.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.NumLinesType">
            <summary>
            Class representing the protocol field 'NumLines' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.NumLinesType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.SeqNum">
            <summary>
            RVF Intra Line Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.SeqNumType">
            <summary>
            Class representing the protocol field 'SeqNum' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.SeqNumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.LineNumber">
            <summary>
            RVF Line Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.RVF.LineNumberType">
            <summary>
            Class representing the protocol field 'LineNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.RVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.RVF.LineNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SNMP">
            <summary>
            Class representing the protocol SNMP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SNMP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SNMP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.SNMP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SOMEIP">
            <summary>
            Class representing the protocol SOMEIP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SOMEIP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SOMEIP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.SOMEIP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF">
            <summary>
            Class representing the protocol SVF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SVF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Format">
            <summary>
            SVF Format.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.FormatType">
            <summary>
            Class representing the protocol field 'Format' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FormatType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.ISeqNum">
            <summary>
            SVF Intra Line Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.ISeqNumType">
            <summary>
            Class representing the protocol field 'ISeqNum' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.ISeqNumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.LineNumber">
            <summary>
            SVF Line Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.LineNumberType">
            <summary>
            Class representing the protocol field 'LineNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.LineNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Gb">
            <summary>
            SVF Guard Band.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.GbType">
            <summary>
            Class representing the protocol field 'Gb' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.GbType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SVF.GbType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF.GbType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Sp">
            <summary>
            SVF RP168 Switch.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.SpType">
            <summary>
            Class representing the protocol field 'Sp' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.SpType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SVF.SpType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF.SpType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Ef">
            <summary>
            SVF End Frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.EfType">
            <summary>
            Class representing the protocol field 'Ef' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.EfType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.SVF.EfType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF.EfType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Evt">
            <summary>
            SVF Evt.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.EvtType">
            <summary>
            Class representing the protocol field 'Evt' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.EvtType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Map">
            <summary>
            SVF Map.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.MapType">
            <summary>
            Class representing the protocol field 'Map' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.MapType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Sample">
            <summary>
            SVF Sample.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.SampleType">
            <summary>
            Class representing the protocol field 'Sample' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.SampleType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.Frame">
            <summary>
            SVF Frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.FrameType">
            <summary>
            Class representing the protocol field 'Frame' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FrameType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FRate">
            <summary>
            SVF Frame Rate.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.FRateType">
            <summary>
            Class representing the protocol field 'FRate' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FRateType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FrCount">
            <summary>
            SVF Frame Counter.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.SVF.FrCountType">
            <summary>
            Class representing the protocol field 'FrCount' of <see cref="T:Vector.CANoe.Runtime.Protocols.SVF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.SVF.FrCountType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP">
            <summary>
            Class representing the protocol TCP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TCP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Header">
            <summary>
            TCP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Source">
            <summary>
            TCP Source Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.SourceType">
            <summary>
            Class representing the protocol field 'Source' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.SourceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Destination">
            <summary>
            TCP Destination Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.DestinationType">
            <summary>
            Class representing the protocol field 'Destination' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.DestinationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Sequence">
            <summary>
            TCP Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.SequenceType">
            <summary>
            Class representing the protocol field 'Sequence' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.SequenceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.AckNumber">
            <summary>
            TCP Acknowledgement Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.AckNumberType">
            <summary>
            Class representing the protocol field 'AckNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.AckNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Offset">
            <summary>
            TCP Data Offset.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OffsetType">
            <summary>
            Class representing the protocol field 'Offset' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OffsetType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Flags">
            <summary>
            TCP Flags.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.FlagsType">
            <summary>
            Class representing the protocol field 'Flags' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.FlagsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TCP.FlagsType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/> of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP.FlagsType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolFieldValue`1"/>s with generic type <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Window">
            <summary>
            TCP Window.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.WindowType">
            <summary>
            Class representing the protocol field 'Window' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.WindowType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Checksum">
            <summary>
            TCP Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.Pointer">
            <summary>
            TCP Urgent Pointer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.PointerType">
            <summary>
            Class representing the protocol field 'Pointer' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.PointerType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionEOL">
            <summary>
            TCP OptionEOL.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionEOLType">
            <summary>
            Class representing the protocol field 'OptionEOL' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionEOLType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionNOP">
            <summary>
            TCP OptionNOP.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionNOPType">
            <summary>
            Class representing the protocol field 'OptionNOP' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionNOPType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionMMS">
            <summary>
            TCP OptionMMS.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionMMSType">
            <summary>
            Class representing the protocol field 'OptionMMS' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionMMSType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionWS">
            <summary>
            TCP OptionWS.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionWSType">
            <summary>
            Class representing the protocol field 'OptionWS' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionWSType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionSACKPermitted">
            <summary>
            TCP OptionSACKPermitted.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionSACKPermittedType">
            <summary>
            Class representing the protocol field 'OptionSACKPermitted' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionSACKPermittedType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionSACK">
            <summary>
            TCP OptionSACK.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionSACKType">
            <summary>
            Class representing the protocol field 'OptionSACK' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionSACKType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEcho">
            <summary>
            TCP OptionTCPEcho.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEchoType">
            <summary>
            Class representing the protocol field 'OptionTCPEcho' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEchoType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEchoReply">
            <summary>
            TCP OptionTCPEchoReply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEchoReplyType">
            <summary>
            Class representing the protocol field 'OptionTCPEchoReply' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTCPEchoReplyType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTimestamps">
            <summary>
            TCP OptionTimestamps.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionTimestampsType">
            <summary>
            Class representing the protocol field 'OptionTimestamps' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionTimestampsType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionPOCPermitted">
            <summary>
            TCP OptionPOCPermitted.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionPOCPermittedType">
            <summary>
            Class representing the protocol field 'OptionPOCPermitted' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionPOCPermittedType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionServiceProfile">
            <summary>
            TCP OptionServiceProfile.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionServiceProfileType">
            <summary>
            Class representing the protocol field 'OptionServiceProfile' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionServiceProfileType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCC">
            <summary>
            TCP OptionCC.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionCCType">
            <summary>
            Class representing the protocol field 'OptionCC' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCCType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCCNew">
            <summary>
            TCP OptionCCNew.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionCCNewType">
            <summary>
            Class representing the protocol field 'OptionCCNew' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCCNewType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCCEcho">
            <summary>
            TCP OptionCCEcho.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionCCEchoType">
            <summary>
            Class representing the protocol field 'OptionCCEcho' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionCCEchoType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumReq">
            <summary>
            TCP OptionAltChecksumReq.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumReqType">
            <summary>
            Class representing the protocol field 'OptionAltChecksumReq' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumReqType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumData">
            <summary>
            TCP OptionAltChecksumData.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumDataType">
            <summary>
            Class representing the protocol field 'OptionAltChecksumData' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionAltChecksumDataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionMD5Signature">
            <summary>
            TCP OptionMD5Signature.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionMD5SignatureType">
            <summary>
            Class representing the protocol field 'OptionMD5Signature' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionMD5SignatureType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionUserTimeout">
            <summary>
            TCP OptionUserTimeout.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TCP.OptionUserTimeoutType">
            <summary>
            Class representing the protocol field 'OptionUserTimeout' of <see cref="T:Vector.CANoe.Runtime.Protocols.TCP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TCP.OptionUserTimeoutType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP">
            <summary>
            Class representing the protocol TFTP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.Header">
            <summary>
            TFTP Header.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.HeaderType">
            <summary>
            Class representing the protocol field 'Header' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.HeaderType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.Opcode">
            <summary>
            TFTP Opcode.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.OpcodeType">
            <summary>
            Class representing the protocol field 'Opcode' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.OpcodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequest">
            <summary>
            TFTP Read Request.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType">
            <summary>
            Class representing the protocol field 'ReadRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.File">
            <summary>
            TFTP ReadRequest Filename.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.FileType">
            <summary>
            Class representing the protocol field 'File' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.FileType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Mode">
            <summary>
            TFTP ReadRequest Mode.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.ModeType">
            <summary>
            Class representing the protocol field 'Mode' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.ModeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Blksize">
            <summary>
            TFTP ReadRequest BlkSize.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.BlksizeType">
            <summary>
            Class representing the protocol field 'Blksize' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.BlksizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Tsize">
            <summary>
            TFTP ReadRequest TransferSize.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.TsizeType">
            <summary>
            Class representing the protocol field 'Tsize' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.TsizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Timeout">
            <summary>
            TFTP ReadRequest Timeout.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.TimeoutType">
            <summary>
            Class representing the protocol field 'Timeout' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.TimeoutType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.Port">
            <summary>
            TFTP ReadRequest Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.PortType">
            <summary>
            Class representing the protocol field 'Port' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ReadRequestType.PortType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequest">
            <summary>
            TFTP Write Request.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType">
            <summary>
            Class representing the protocol field 'WriteRequest' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Blksize">
            <summary>
            TFTP WriteRequest BlkSize.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.BlksizeType">
            <summary>
            Class representing the protocol field 'Blksize' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.BlksizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.File">
            <summary>
            TFTP WriteRequest Filename.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.FileType">
            <summary>
            Class representing the protocol field 'File' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.FileType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Mode">
            <summary>
            TFTP WriteRequest Mode.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.ModeType">
            <summary>
            Class representing the protocol field 'Mode' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.ModeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Port">
            <summary>
            TFTP WriteRequest Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.PortType">
            <summary>
            Class representing the protocol field 'Port' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.PortType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Timeout">
            <summary>
            TFTP WriteRequest Timeout.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.TimeoutType">
            <summary>
            Class representing the protocol field 'Timeout' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.TimeoutType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.Tsize">
            <summary>
            TFTP WriteRequest TransferSize.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.TsizeType">
            <summary>
            Class representing the protocol field 'Tsize' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.WriteRequestType.TsizeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.FileData">
            <summary>
            TFTP File Data.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType">
            <summary>
            Class representing the protocol field 'FileData' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType.Blockno">
            <summary>
            TFTP FileData Block No..
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType.BlocknoType">
            <summary>
            Class representing the protocol field 'Blockno' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.FileDataType.BlocknoType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.Ack">
            <summary>
            TFTP Acknowledge.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.AckType">
            <summary>
            Class representing the protocol field 'Ack' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.AckType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.AckType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.AckType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.AckType.Blockno">
            <summary>
            TFTP Ack Block No..
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.AckType.BlocknoType">
            <summary>
            Class representing the protocol field 'Blockno' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.AckType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.AckType.BlocknoType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.Error">
            <summary>
            TFTP Error.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType">
            <summary>
            Class representing the protocol field 'Error' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType"/>.
            </summary>
            <returns>An enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.Errcode">
            <summary>
            TFTP Error Error Code.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.ErrcodeType">
            <summary>
            Class representing the protocol field 'Errcode' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.ErrcodeType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.Errmsg">
            <summary>
            TFTP Error Error Msg.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.ErrmsgType">
            <summary>
            Class representing the protocol field 'Errmsg' of <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType"/> of protocol <see cref="T:Vector.CANoe.Runtime.Protocols.TFTP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TFTP.ErrorType.ErrmsgType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TLS">
            <summary>
            Class representing the protocol TLS.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TLS.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TLS.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TLS"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF">
            <summary>
            Class representing the protocol TSCF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.TSCF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamIdValid">
            <summary>
            TSCF Stream ID Valid.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.StreamIdValidType">
            <summary>
            Class representing the protocol field 'StreamIdValid' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamIdValidType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamId">
            <summary>
            TSCF Stream ID.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.StreamIdType">
            <summary>
            Class representing the protocol field 'StreamId' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamIdType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.MediaClockRestart">
            <summary>
            TSCF Media Clock Restart.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.MediaClockRestartType">
            <summary>
            Class representing the protocol field 'MediaClockRestart' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.MediaClockRestartType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.TimestampValid">
            <summary>
            TSCF AVTP Timestamp Valid.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.TimestampValidType">
            <summary>
            Class representing the protocol field 'TimestampValid' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.TimestampValidType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.SequenceNumber">
            <summary>
            TSCF Sequence Number.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.SequenceNumberType">
            <summary>
            Class representing the protocol field 'SequenceNumber' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.SequenceNumberType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.TimestampUncertain">
            <summary>
            TSCF Timestamp Uncertain.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.TimestampUncertainType">
            <summary>
            Class representing the protocol field 'TimestampUncertain' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.TimestampUncertainType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.AvtpTimestamp">
            <summary>
            TSCF AVTP Timestamp.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.AvtpTimestampType">
            <summary>
            Class representing the protocol field 'AvtpTimestamp' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.AvtpTimestampType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamDataLength">
            <summary>
            TSCF Stream Data Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.TSCF.StreamDataLengthType">
            <summary>
            Class representing the protocol field 'StreamDataLength' of <see cref="T:Vector.CANoe.Runtime.Protocols.TSCF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.TSCF.StreamDataLengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDP">
            <summary>
            Class representing the protocol UDP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.UDP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.UDP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.Source">
            <summary>
            UDP Source Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDP.SourceType">
            <summary>
            Class representing the protocol field 'Source' of <see cref="T:Vector.CANoe.Runtime.Protocols.UDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.SourceType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.Destination">
            <summary>
            UDP Destination Port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDP.DestinationType">
            <summary>
            Class representing the protocol field 'Destination' of <see cref="T:Vector.CANoe.Runtime.Protocols.UDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.DestinationType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.Length">
            <summary>
            UDP Length.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDP.LengthType">
            <summary>
            Class representing the protocol field 'Length' of <see cref="T:Vector.CANoe.Runtime.Protocols.UDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.LengthType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.Checksum">
            <summary>
            UDP Checksum.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDP.ChecksumType">
            <summary>
            Class representing the protocol field 'Checksum' of <see cref="T:Vector.CANoe.Runtime.Protocols.UDP"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDP.ChecksumType.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.UDPNM">
            <summary>
            Class representing the protocol UDPNM.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.UDPNM.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.UDPNM.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.UDPNM"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.VSF">
            <summary>
            Class representing the protocol VSF.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.VSF.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.VSF.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.VSF"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.VSF.VendorId1">
            <summary>
            VSF Vendor ID 1.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.VSF.VendorId1Type">
            <summary>
            Class representing the protocol field 'VendorId1' of <see cref="T:Vector.CANoe.Runtime.Protocols.VSF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.VSF.VendorId1Type.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.VSF.VendorId2">
            <summary>
            VSF Vendor ID 2.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.VSF.VendorId2Type">
            <summary>
            Class representing the protocol field 'VendorId2' of <see cref="T:Vector.CANoe.Runtime.Protocols.VSF"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.VSF.VendorId2Type.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Protocols.XCP">
            <summary>
            Class representing the protocol XCP.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Protocols.XCP.Name">
            <summary>
            The name of the <see cref="T:Vector.CANoe.Runtime.IProtocol"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Protocols.XCP.GetEnumerator">
            <summary>
            Returns an enumerator that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s of <see cref="T:Vector.CANoe.Runtime.Protocols.XCP"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates over the <see cref="T:Vector.CANoe.Runtime.IProtocolField"/>s.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.IAbstractConsumedEvent">
            <summary>
            Interface for consumer side service event ports with abstract binding, providing high level event
            subscription methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedEvent.RequestEvent">
            <summary>
            Subscribes to this event with the provider side end point if not yet done.
            </summary>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedEvent.ReleaseEvent">
            <summary>
            Unsubscribes from this event if currently subscribed and removes any subscription request
            from the model state.
            </summary>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedEvent.IsEventRequested">
            <summary>Checks whether there is a current subscription request pending or the consumer is already subscribed
            for this event.</summary>
            <returns>Whether currently subscribed or a request is pending.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.IAbstractConsumedField">
            <summary>
            Interface for consumer side service field ports with abstract binding, providing high level field
            subscription methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedField.RequestField">
            <summary>
            Subscribes to this field with the provider side end point if not yet done.
            </summary>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedField.ReleaseField">
            <summary>
            Unsubscribes from this field if currently subscribed and removes any subscription request
            from the model state.
            </summary>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedField.IsFieldRequested">
            <summary>
            Checks whether there is a current subscription request pending or the consumer is already subscribed
            for this field.
            </summary>
            <returns>Whether currently subscribed or a request is pending.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.IAbstractConsumedPDU">
            <summary>
            Interface for consumer side service PDU ports with abstract binding, providing high level PDU
            subscription methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedPDU.RequestPDU">
            <summary>
            Subscribes to this PDU with the provider side end point if not yet done.
            </summary>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedPDU.ReleasePDU">
            <summary>Unsubscribes from this PDU if currently subscribed and removes any subscription request
            from the model state.</summary>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.IAbstractConsumedPDU.IsPDURequested">
            <summary>
            Checks whether there is a current subscription request pending or the consumer is already subscribed
            for this PDU.
            </summary>
            <returns>Whether currently subscribed or a request is pending.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.ServiceDiscovery">
            <summary>
            Low level Service Discovery API for Abstract Binding.
            </summary>
            <remarks>All low level API functions have a first parameter identifying the object to which
            the functionality shall be applied, i.e. if the first parameter is a service communication
            object, then the function will manipulate or examine that object.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.RequestEvent(Vector.CANoe.Runtime.IConsumedEventRef)">
            <summary>Subscribes to selected event with the provider side end point if not yet done.</summary>
            <param name="evt">The evt.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.ReleaseEvent(Vector.CANoe.Runtime.IConsumedEventRef)">
            <summary>Unsubscribes from selected event if currently subscribed and removes any subscription request
            from the model state.</summary>
            <param name="evt">The evt.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.IsEventRequested(Vector.CANoe.Runtime.IConsumedEventRef)">
            <summary>Checks whether there is a current subscription request pending or the consumer is already subscribed
            for selected event.</summary>
            <param name="evt">The evt.</param>
            <returns>Whether currently subscribed or a request is pending.</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.RequestField(Vector.CANoe.Runtime.IConsumedFieldRef)">
            <summary>Subscribes to selected field with the provider side end point if not yet done.</summary>
            <param name="field">The field.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.ReleaseField(Vector.CANoe.Runtime.IConsumedFieldRef)">
            <summary>Unsubscribes from selected field if currently subscribed and removes any subscription request
            from the model state.</summary>
            <param name="field">The field.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.IsFieldRequested(Vector.CANoe.Runtime.IConsumedFieldRef)">
            <summary>Checks whether there is a current subscription request pending or the consumer is already subscribed
            for selected field.</summary>
            <param name="field">The field.</param>
            <returns>Whether currently subscribed or a request is pending.</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.RequestPDU(Vector.CANoe.Runtime.IConsumedPDURef)">
            <summary>Subscribes to selected PDU with the provider side end point if not yet done.</summary>
            <param name="pdu">The pdu.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible.
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.ReleasePDU(Vector.CANoe.Runtime.IConsumedPDURef)">
            <summary>Unsubscribes from selected PDU if currently subscribed and removes any subscription request
            from the model state.</summary>
            <param name="pdu">The pdu.</param>
            <returns>A binding specific error code, 0 in case of success</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.IsPDURequested(Vector.CANoe.Runtime.IConsumedPDURef)">
            <summary>Checks whether there is a current subscription request pending or the consumer is already subscribed
            for selected PDU.</summary>
            <param name="pdu">The pdu.</param>
            <returns>Whether currently subscribed or a request is pending.</returns>
            <exception cref="T:Vector.CANoe.Runtime.BindingMismatchException"></exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.CreateAddress(Vector.CANoe.Runtime.IServiceCO,System.String)">
            <summary>
            Creates an address for a new service end point.
            </summary>
            <param name="theService">A service instance to which an end point shall be added</param>
            <param name="endPointName">The name of the new end point</param>
            <returns>The handle of the newly created address</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.GetBindingId(Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Returns the binding ID associated with a specific end point address.
            </summary>
            <param name="address">The end point address for which to get the binding ID</param>
            <returns>The binding ID</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.GetDisplayName(Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Provides a human readable name for given address.
            </summary>
            <param name="address">The end point address for which to get the display name</param>
            <returns>The display name of given address</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.SubscribeEvent(Vector.CANoe.Runtime.IConsumedEvent)">
            <summary>
            Subscribes the provider port hosting the given event for notifications with the associated
            provider. If the consumer is already subscribed for the event, the call is ignored.
            </summary>
            <param name="evt">The event to subscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.UnsubscribeEvent(Vector.CANoe.Runtime.IConsumedEvent)">
            <summary>
            Unsubscribes the consumer port hosting the given event from notifications with the associated
            provider. If the consumer is not currently subscribed for the event, the call is ignored.
            </summary>
            <param name="evt">The event to unsubscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.SubscribeField(Vector.CANoe.Runtime.IConsumedField)">
            <summary>
            Subscribes the provider port hosting the given field for notifications with the associated
            provider. If the consumer is already subscribed for the field, the call is ignored.
            </summary>
            <param name="field">The field to subscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.UnsubscribeField(Vector.CANoe.Runtime.IConsumedField)">
            <summary>
            Unsubscribes the consumer port hosting the given field from notifications with the associated
            provider. If the consumer is not currently subscribed for the field, the call is ignored.
            </summary>
            <param name="field">The field to unsubscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.SubscribePDU(Vector.CANoe.Runtime.IConsumedPDU)">
            <summary>
            Subscribes the provider port hosting the given PDU for notifications with the associated
            provider. If the consumer is already subscribed for the PDU, the call is ignored.
            </summary>
            <param name="pdu">The PDU to subscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.ServiceDiscovery.UnsubscribePDU(Vector.CANoe.Runtime.IConsumedPDU)">
            <summary>
            Unsubscribes the consumer port hosting the given PDU from notifications with the associated
            provider. If the consumer is not currently subscribed for the PDU, the call is ignored.
            </summary>
            <param name="pdu">The PDU to unsubscribe for</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnEventSubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has subscribed for an
            event with a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedEvent which passes in the provider side port event identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnEventSubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnEventUnsubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has unsubscribed for an
            event from a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedEvent which passes in the provider side port event identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnEventUnsubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be unregistered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnFieldSubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has subscribed for a
            field with a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedField which passes in the provider side port field identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnFieldSubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnFieldUnsubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has unsubscribed for a
            field from a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedField which passes in the provider side port field identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnFieldUnsubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be unregistered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnPDUSubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has subscribed for a
            PDU with a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedPDU which passes in the provider side port PDU identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnPDUSubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Abstract.OnPDUUnsubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has unsubscribed for a
            PDU from a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedPDU which passes in the provider side port PDU identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Abstract.OnPDUUnsubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider for which the handler shall be unregistered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.CallState">
            <summary>
            State of a remote function call.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallState.Initial">
            <summary>
            The call was not yet issued.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallState.Called">
            <summary>
            The function has been called but no response was yet sent.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallState.Returned">
            <summary>
            A response for the function call has been received.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallState.Discarded">
            <summary>
            The function call has been discarded due to timeout.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.CallSide">
            <summary>
            This enum identifies the network communication side of a function call.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallSide.Consumer">
            <summary>
            Identifies the consumer side (caller) of a function.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CallSide.Provider">
            <summary>
            Identifies the provider side (callee) of a function.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DefaultInOutParamBehavior">
            <summary>
            This enum determines how in/out parameter are initialized in the simulation server.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DefaultInOutParamBehavior.UseDefaultValue">
            <summary>
            In/out parameter are initialized from the configurable simulation server defaults.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DefaultInOutParamBehavior.UseInValue">
            <summary>
            The function call input value is copied to the response for in/out parameters.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.InvalidCallContextStateException">
            <summary>
            Exception which is thrown if a call context property is accessed with the wrong call state.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidCallContextStateException.#ctor(System.String,Vector.CANoe.Runtime.CallState)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="message">For internal use only.</param>
            <param name="state">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidCallContextStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidCallContextStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization support.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.InvalidCallContextStateException.State">
            <summary>
            The current state of the network function call's context.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ICallContext">
            <summary>
            You may use this interface to obtain information about a remote function call.
            There is a transient implementation, which is passed into callbacks and to be
            used only inside the callback. If you need call context information beyond the
            callback duration, you may convert that context into a permanent context which
            should be released at some point in time to free the resources associated with
            the call.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.State">
            <summary>
            The current state of the function call (side dependent).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.Side">
            <summary>
            Whether you interact with the consumer/caller side or the provider/callee side.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.Consumer">
            <summary>
            Provides the path to the consumer side port of the function call.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.Provider">
            <summary>
            Provides the path to the provider side port of the function call.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.CallTime">
            <summary>
            Provides the point in time when the function call was issued.
            </summary>
            If the call state is Initial, access to this property will throw
            an InvalidCallContextState exception.
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.ReturnTime">
            <summary>
            Provides the point in time when the function call returned.
            </summary>
            If the call state is different from Returned, access to this property
            will throw an InvalidCallContextState exception.
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.ReqID">
            <summary>
            Provides the unique identifier for the function call.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ICallContext.SetTimeToAnswer(System.Int32)">
            <summary>
            Specify the relative point in time when a function call response shall be issued.
            </summary>
            <param name="timeMS">time to wait before issueing a response</param>
            This function will throw an InvalidCallContextState exception if invoked on a
            consumer side call context or if the provider side call context is in a state different
            from Called.
        </member>
        <member name="M:Vector.CANoe.Runtime.ICallContext.DeferAnswer">
            <summary>
            Defer the function call response until explicitly triggered or until an explicit
            time to answer is set.
            </summary>
            This function will throw an InvalidCallContextState exception if invoked on a
            consumer side call context or if the provider side call context is in a state different
            from Called.
        </member>
        <member name="M:Vector.CANoe.Runtime.ICallContext.Return">
            <summary>
            Explicitly request a function call response at the current point in time.
            </summary>
            This function will throw an InvalidCallContextState exception if invoked on a
            consumer side call context or if the provider side call context is in a state different
            from Called.
        </member>
        <member name="M:Vector.CANoe.Runtime.ICallContext.SetDefaultAnswer">
            <summary>
            Copies the simulation server default answer for the function call to the call context.
            </summary>
            This function will throw an InvalidCallContextState exception if invoked on a
            consumer side call context or if the provider side call context is in a state different
            from Called.
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.ConsumedMethod">
            <summary>
            Creates a consumer side context selecting the method and port of the call.
            </summary>
            The returned method context selects the method for which this call was invoked and
            the consumer side port on which it was invoked. The object must be disposed after use.
        </member>
        <member name="P:Vector.CANoe.Runtime.ICallContext.ProvidedMethod">
            <summary>
            Creates a provider side context selecting the method and port of the call.
            </summary>
            The returned method context selects the method for which this call was invoked and
            the provider side port on which it is served. The object must be disposed after use.
        </member>
        <member name="T:Vector.CANoe.Runtime.ICallContext`1">
            <summary>
            Function specific generic call context interface.
            </summary>
            <typeparam name="T">The function class for which a call context is expected</typeparam>
            The interface is used to identify a function specific call context. It is implemented
            by the call context passed into the handler for a specific function type. Some generic
            waiting functions use this interface to ensure that they receive a call context object
            matching the generic function type parameter.
        </member>
        <member name="T:Vector.CANoe.Runtime.IProviderCallContextProvider`1">
            <summary>
            Tagging interface which qualifies a function port class as parameter for the provider side wait API.
            </summary>
            <typeparam name="T">The call context type returned when waiting for a function call.</typeparam>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumerCallContextProvider`1">
            <summary>
            Tagging interface which qualifies a function port class as parameter for the consumer side wait API.
            </summary>
            <typeparam name="T">The call context type returned when waiting for a function call response.</typeparam>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProviderBindingCallContextProvider`1">
            <summary>
            Tagging interface which qualifies a method class as parameter for the binding API.
            </summary>
            <typeparam name="T">The call context type returned from Binding>CreateCallContext.</typeparam>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumerBindingCallContextProvider`1">
            <summary>
            Tagging interface which qualifies a method class as parameter for the binding API.
            </summary>
            <typeparam name="T">The call context type returned from Binding>CreateCallContext.</typeparam>
        </member>
        <member name="T:Vector.CANoe.Runtime.CCOWaitResult`1">
            <summary>
            Helper class representing the result of waiting for function calls or responses.
            </summary>
            <typeparam name="T">The type of call context(s) provided by the function call.</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.CCOWaitResult`1.Call">
            <summary>
            The call context(s) associated with the function call(s).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CCOWaitResult`1.WaitResult">
            <summary>
            The wait result as returned by Vector.CANoe.Threading.Execution.Wait functions.
            <br>WAIT_TIMEOUT: if an maxTime was defined and the function call or response did not occur within maxTime milliseconds</br>
            <br>&gt; 0 the waited for event occurred and property Call contains valid data</br>
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CCOWaitResult`1.Dispose">
            <summary>
            Disposes stored call context objects.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnCallingAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the function given
            in the parameter is being called on the provider side (before being processed by the server).
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one transient
            call context parameter and have no return value. You can mark a method with several
            instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCallingAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="functionType">The type of the function for which the "calling"
            method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCallingAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="targetPath">The target Path of the function for which the "calling"
            method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnCalledAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the function given
            in the parameter was called on the provider side (input parameter processing is finished).
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one transient
            call context parameter and have no return value. You can mark a method with several
            instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCalledAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="functionType">The type of the function for which the "called"
            method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCalledAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="targetPath">The target Path of the function for which the "called"
            method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnReturningAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the function given
            in the parameter is returning on the provider side.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one transient
            call context parameter and have no return value. You can mark a method with several
            instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnReturningAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="functionType">The type of the function for which the "returning"
            method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnReturningAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="targetPath">The target Path of the function for which the "returning"
            method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnReturnedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the function given
            in the parameter has returned on the consumer side.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one transient
            call context parameter and have no return value. You can mark a method with several
            instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnReturnedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="functionType">The type of the function for which the "returned"
            method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnReturnedAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target Path to the method for which the "returned"
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnCallAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the function given
            in the parameter should be simulated on the provider side.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take the same
            parameters as the function prototype (output parameters designated as "out" and input/output
            parameters designated as "ref") and have the same return type as the prototype. Function
            return will be deferred until the handler returns and will then return immediately with the
            given return value and output parameters. You can mark a method with several instances of
            this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCallAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="functionType">The type of the function for which the server simulation
            method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCallAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target Path to the method for which the server simulation
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.WaitingHandlerAttribute">
            <summary>
            Mark a method with this attribute, and it will be running in a separate thread, which allows
            it to call the waiting API.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method and must in addition be marked
            with at least one of the OnChange or OnUpdate attributes for value entities or one of the function
            call attributes OnCalling, OnCall, OnReturning or OnCalled.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.WaitingHandlerAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.AnyFunctionCallHandlerAttribute">
            <summary>
            Abstract base class for the OnAny... function call handler attributes. Do not use directly.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.AnyFunctionCallHandlerAttribute.#ctor(Vector.CANoe.Runtime.Internal.RPCEvent,System.String)">
            <summary>
            Internal Constructor. Do not use.
            </summary>
            <param name="eventType">Internal.</param>
            <param name="targetID">Internal.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AnyFunctionCallHandlerAttribute.FindDOOrMember(System.UInt64,System.String)">
            <summary>
            Internal method. Do not call.
            </summary>
            <param name="id">Internal parameter.</param>
            <param name="memberPath">Internal parameter.</param>
            <returns>Internal.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyCallAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a implementation of a 
            function matching the parameter should be simulated.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter of the
            an interface type and then the same
            parameters as the function prototype (output parameters designated as "out" and input/output
            parameters designated as "ref") and have the same return type as the prototype. Function
            return will be deferred until the handler returns and will then return immediately with the
            given return value and output parameters.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyCall" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCallAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The member ID of the interface method for which the "call"
            method shall be called</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCallAttribute.FindDOOrMember(System.UInt64,System.String)">
            <summary>
            Internal method. Do not call.
            </summary>
            <param name="id">Internal parameter.</param>
            <param name="memberPath">Internal parameter.</param>
            <returns>Internal.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyCallingAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a function matching the
            the parameter is about to be called.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter of an
            interface type and one transient call context parameter, and must have no return value. The
            call context and interface type must fit to the member ID given to the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyCalling" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCallingAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The member ID of the interface method for which the "calling"
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyCalledAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a function matching the
            the parameter is called.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter of an
            interface type and one transient call context parameter, and must have no return value. The
            call context and interface type must fit to the member ID given to the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyCalled" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCalledAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The member ID of the interface method for which the "called"
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyReturningAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a function matching the
            the parameter is about to return..
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter of an
            interface type and one transient call context parameter, and must have no return value. The
            call context and interface type must fit to the member ID given to the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyReturning" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyReturningAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The member ID of the interface method for which the "returning"
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyReturnedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a function matching the
            the parameter has returned.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter of an
            interface type and one transient call context parameter, and must have no return value. The
            call context and interface type must fit to the member ID given to the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyReturned" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyReturnedAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The member ID of the interface method for which the "returned"
            method shall be called</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.AttributeAccess">
            <summary>
            Through this class' static methods, the attribute values can be accessed
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.Boolean@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.Int32@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.UInt32@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.Int64@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.UInt64@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.Double@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,System.String,System.String@,System.Boolean)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">out value reference</param>
            <param name="replaced">true if placeholders shall be replaced</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.Boolean@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.Int32@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.UInt32@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.Int64@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.UInt64@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.Double@)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.GetAttributeValue(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.IAttributeDefinition,System.String@,System.Boolean)">
            <summary>
            Get a certain attribute value of a certain Distributed Object Member
            </summary>
            <param name="member">The target member</param>
            <param name="attributeDefinition">The attribute definition</param>
            <param name="value">out value reference</param>
            <param name="replaced">true if placeholders shall be replaced</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.AttributeAccess.AttributeValueException">
            <summary>
            This exception is thrown if a problem occurred while using the C# Attribute Access methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.AttributeValueException.#ctor">
            <summary>
            Internal Constructor. Do not use!
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.AttributeValueException.#ctor(System.String)">
            <summary>
            Internal Constructor. Do not use!
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.AttributeAccess.AttributeValueException.#ctor(System.Exception)">
            <summary>
            Internal Constructor. Do not use!
            </summary>
            <param name="originalException">Internal, do not use</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Binding">
            <summary>
            The Binding class provides services for the distributed object C# Binding
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.Int32)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedInt32" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.UInt32)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedUInt32" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.Int64)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedInt64" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.UInt64)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedUInt64" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.Double)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedDouble" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.String)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedString" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.Enum)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedEnum" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ValueReceived(Vector.CANoe.Runtime.IDOMember,System.Object)">
            <summary>
            Use this method to set a received value, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The value to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ValueReceivedStruct" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.ReturnReceived(Vector.CANoe.Runtime.IConsumedMethodMember,Vector.CANoe.Runtime.ICallContext)">
            <summary>
            Use this method to set a returned value at the consumer side, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The call context with the current call values to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ConsumedMethod" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.CallReceived(Vector.CANoe.Runtime.IProvidedMethodMember,Vector.CANoe.Runtime.ICallContext)">
            <summary>
            Use this method to set a call at the provider side, which usually is read-only
            </summary>
            <param name="member">The member to be set</param>
            <param name="value">The call context with the values for the current call to be received</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ProvidedMethod" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.SubscriptionStateReceived(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.DOSubscriptionState)">
            <summary>
            Use this method to set the subscription state of a consumed member.
            </summary>
            <param name="member">The member of which the state should be set</param>
            <param name="subscriptionState">The new state to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="SubscriptionStateReceived" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.AnnouncementStateReceived(Vector.CANoe.Runtime.IDOMember,Vector.CANoe.Runtime.DOAnnouncementState)">
            <summary>
            Use this method to set the announcement state of a provided member.
            </summary>
            <param name="member">The member of which the state should be set</param>
            <param name="announcementState">The new state to be set</param>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="AnnouncementStateReceived" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.CreateConsumerCallContext``2(``0,System.Int64,``1@)">
            <summary>
            Creates a call context for usage in ReturnReceived.
            </summary>
            <typeparam name="T">the type of the method member for which the return was received</typeparam>
            <typeparam name="U">the type of the new call context; this should be the BindingCallContext type from the interface types.</typeparam>
            <param name="member">the method member for which the return was received</param>
            <param name="requestID">the request ID for the call</param>
            <param name="callContext">the new call context</param>
            <remarks>Create a call context, fill it with the received parameters and then call ReturnReceived.</remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ConsumedMethod" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.Binding.CreateProviderCallContext``2(``0,System.Int64,``1@)">
            <summary>
            Creates a call context for usage in CallReceived.
            </summary>
            <typeparam name="T">the type of the method member for which the return was received</typeparam>
            <typeparam name="U">the type of the new call context; this should be the BindingCallContext type from the interface types.</typeparam>
            <param name="member">the method member for which the return was received</param>
            <param name="requestID">the request ID for the call</param>
            <param name="callContext">the new call context</param>
            <remarks>Create a call context, fill it with the received parameters and then call CallReceived. Note that different to normal call contexts,
            binding call contexts allow to set the in parameters of the call.</remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ProvidedMethod" />
            </example>
        </member>
        <member name="T:Vector.CANoe.Runtime.CSharpBindingException">
            <summary>
            This exception is thrown if a problem occurred while using the C# Binding methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CSharpBindingException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CSharpBindingException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CSharpBindingException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">error message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DOMemberDirection">
            <summary>
            Identifies a DO/Interface member's communication direction.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOMemberDirection.Provided">
            <summary>
            The member is provided by the DO, i.e. the DO hosts the value and implementation.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOMemberDirection.Consumed">
            <summary>
            The member is consumed by the DO, i.e. it accesses the value and implementation over the network.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOMemberDirection.Internal">
            <summary>
            The member is not transmitted over the network but just stored without any binding.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DOSubscriptionState">
            <summary>
            Represents the state of a data, event, or field member with regard to subscription on consumer side.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOSubscriptionState.Unsubscribed">
            <summary>
            Subscribe was not called (after the last Unsubscribe call).
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOSubscriptionState.Requested">
            <summary>
            Subscribe was called but not transmission has happened yet.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOSubscriptionState.Subscribed">
            <summary>
            Member will receive new values.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DOAnnouncementState">
            <summary>
            Represents the state of a data, event, or field member with regard to announcement on provider side.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOAnnouncementState.Unannounced">
            <summary>
            Announce was not called (after the last Unannounce call).
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DOAnnouncementState.Announced">
            <summary>
            Unannounce was not called (after the last Announce call).
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.AttributeValueType">
            <summary>
            Represents the Type of Attribute Value
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.UNDEFINED">
            <summary>
            The type is undefined
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.EString">
            <summary>
            String Type
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.EInt">
            <summary>
            Integer Type
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.EUInt">
            <summary>
            Unsigned Integer Type
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.ELong">
            <summary>
            64bit Integer Type
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueType.EULong">
            <summary>
            Unsigned 64bit Integer Type
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.AttributeValueSetResult">
            <summary>
            Represents the result of an attribute value set operation.
            Note that, this managed representation must be the same as the native side in CANoe_Source at ./CANoe/Source/FunctionBus/FBAttributes.h.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.OK">
            <summary>
            The operation was successful
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.AttributeNotAllowedForObject">
            <summary>
            The attribute value is not allowed at this type of object, maybe it is restricted to an interface or instance only
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.ValueHasWrongDataType">
            <summary>
            The value inserted has the wrong data type for the specified attribute
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.InvalidPlaceholderSyntax">
            <summary>
            The placeholder syntax is invalid
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.ValueMustBePredefined">
            <summary>
            There is no predefined value
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.AttributeNotFound">
            <summary>
            The specified attribute cannot be found
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.AttributeNotRuntimeChangeable">
            <summary>
            During measurement the value of this attribute can not be changed, try to change on initialization
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.InternalError">
            <summary>
            An internal error occurred
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AttributeValueSetResult.AttributeChangesInOfflineModeDisallowed">
            <summary>
            The specified attribute can not be changed in offline mode
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.BlueprintResult">
            <summary>
            Represents the outcome of a blueprint operation
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.OK">
            <summary>
            The action was successful
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.AttributeNotFound">
            <summary>
            The specified attribute was not found
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.NetworkNotFound">
            <summary>
            The specified network was not found
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.MemberNotFound">
            <summary>
            The specified member was not found
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.ValueTypeDoesNotMatch">
            <summary>
            The given type of value does not match with the attributes value type
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BlueprintResult.ObjectOfWrongInterface">
            <summary>
            The object has a different interface than the blueprint
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.INamedObject">
            <summary>
            Base interface for all objects identifiable by name and path.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.INamedObject.Path">
            <summary>
            The path of the object.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.INamedObject.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IAttributeDefinition">
            <summary>
            Base interface for all attribute definitions
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IAttributeDefinition.DefinitionPath">
            <summary>
            The full path reference to the attributes definition
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IVirtualNetwork">
            <summary>
            Base interface for Virtual Networks.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetAttributeValueType(System.String)">
            <summary>
            Determines the value type for a given attribute so the correct get or set function can be chosen
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>An enum indicating the attribute value type</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetStringAttributeValue(System.String)">
            <summary>
            Gets the current value for an attribute of type string
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>The current value as string</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.SetStringAttributeValue(System.String,System.String)">
            <summary>
            Sets a new value for a given attribute of type string
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="attributeValue">The new value to be set</param>
            <returns>An enum indicating whether the operation was successful or, if not, what the problem was</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetIntAttributeValue(System.String)">
            <summary>
            Gets the current value for an attribute of type 32bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>The current value as int</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.SetIntAttributeValue(System.String,System.Int32)">
            <summary>
            Sets a new value for a given attribute of type 32bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="attributeValue">The new value to be set</param>
            <returns>An enum indicating whether the operation was successful or, if not, what the problem was</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetUnsignedIntAttributeValue(System.String)">
            <summary>
            Gets the current value for an attribute of type unsigned 32bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>The current value as uint</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.SetUnsignedIntAttributeValue(System.String,System.UInt32)">
            <summary>
            Sets a new value for a given attribute of type unsigned 32bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="attributeValue">The new value to be set</param>
            <returns>An enum indicating whether the operation was successful or, if not, what the problem was</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetLongAttributeValue(System.String)">
            <summary>
            Gets the current value for an attribute of type 64bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>The current value as long</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.SetLongAttributeValue(System.String,System.Int64)">
            <summary>
            Sets a new value for a given attribute of type 64bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="attributeValue">The new value to be set</param>
            <returns>An enum indicating whether the operation was successful or, if not, what the problem was</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.GetUnsignedLongAttributeValue(System.String)">
            <summary>
            Gets the current value for an attribute of type unsigned 64bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>The current value as ulong</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IVirtualNetwork.SetUnsignedLongAttributeValue(System.String,System.UInt64)">
            <summary>
            Sets a new value for a given attribute of type unsigned 64bit integer
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="attributeValue">The new value to be set</param>
            <returns>An enum indicating whether the operation was successful or, if not, what the problem was</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBlueprintBase">
            <summary>
            Base interface for Distributed Object blueprints.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be set</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.SetAttributeValue(System.String,System.Int32)">
            <summary>
            Sets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be set</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.SetAttributeValue(System.String,System.UInt32)">
            <summary>
            Sets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be set</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.SetAttributeValue(System.String,System.Int64)">
            <summary>
            Sets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be set</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.SetAttributeValue(System.String,System.UInt64)">
            <summary>
            Sets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be set</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.GetAttributeValue(System.String,System.String@)">
            <summary>
            Gets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be retrieved by reference</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.GetAttributeValue(System.String,System.Int32@)">
            <summary>
            Gets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be retrieved by reference</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.GetAttributeValue(System.String,System.UInt32@)">
            <summary>
            Gets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be retrieved by reference</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.GetAttributeValue(System.String,System.Int64@)">
            <summary>
            Gets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be retrieved by reference</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.GetAttributeValue(System.String,System.UInt64@)">
            <summary>
            Gets the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <param name="value">The value to be retrieved by reference</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintBase.RemoveAttributeValue(System.String)">
            <summary>
            Removes the value for a specified attribute
            </summary>
            <param name="attributePath">The path to the attribute definition</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBlueprintMember">
            <summary>
            Interface for object member blueprints
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintMember.AddVirtualNetwork(Vector.CANoe.Runtime.IVirtualNetwork)">
            <summary>
            Adds a virtual network to the blueprint
            </summary>
            <param name="virtualNetwork">The virtual network instance to be added</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintMember.AddVirtualNetwork(System.String)">
            <summary>
            Adds a virtual network to the blueprint
            </summary>
            <param name="virtualNetworkPath">The path of the virtual network to be added</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprintMember.RemoveVirtualNetwork">
            <summary>
            Removes a virtual network from the blueprint member
            </summary>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBlueprint">
            <summary>
            Interface for object blueprints
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprint.AddVirtualNetwork(Vector.CANoe.Runtime.IVirtualNetwork)">
            <summary>
            Adds a virtual network to the blueprint
            </summary>
            <param name="virtualNetwork">The virtual network instance to be added</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprint.AddVirtualNetwork(System.String)">
            <summary>
            Adds a virtual network to the blueprint
            </summary>
            <param name="virtualNetworkPath">The path of the virtual network to be added</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprint.RemoveVirtualNetwork(Vector.CANoe.Runtime.IVirtualNetwork)">
            <summary>
            Removes a virtual network from the blueprint
            </summary>
            <param name="virtualNetwork">The virtual network instance to be removed</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBlueprint.RemoveVirtualNetwork(System.String)">
            <summary>
            Removes a virtual network from the blueprint
            </summary>
            <param name="virtualNetworkPath">The path of the virtual network to be removed</param>
            <returns>An enumeration with either OK for success or an error description</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDistributedObjectReference">
            <summary>
            Base interface for a Distributed Object Reference instance.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IDistributedObjectReference.HasTarget">
            <summary>
            Is true if the reference has a valid target.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDistributedObjectReference.ResetTarget">
            <summary>
            Resets the reference to null.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDistributedObject">
            <summary>
            Base interface for a Distributed Object instance.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDOMember">
            <summary>
            Base interface for all DO interface members.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IDOMember.Direction">
            <summary>
            The direction of this member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDODataMember">
            <summary>
            Base interface for DO interface Data Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedDataMember">
            <summary>
            Tagging interface for consumed Data Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedDataMember">
            <summary>
            Tagging interface for provided Data Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IInternalDataMember">
            <summary>
            Tagging interface for internal Data Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDOMethodMember">
            <summary>
            Base interface for DO interface Method Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedMethodMember">
            <summary>
            Tagging interface for consumed Method Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedMethodMember">
            <summary>
            Tagging interface for provided Method Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IInternalMethodMember">
            <summary>
            Tagging interface for internal Method Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDOEventMember">
            <summary>
            Base interface for DO interface Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedEventMember">
            <summary>
            Tagging interface for consumed Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedEventMember">
            <summary>
            Tagging interface for provided Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IInternalEventMember">
            <summary>
            Tagging interface for internal Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDOFieldMember">
            <summary>
            Base interface for DO interface Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedFieldMember">
            <summary>
            Tagging interface for consumed Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedFieldMember">
            <summary>
            Tagging interface for provided Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IInternalFieldMember">
            <summary>
            Tagging interface for internal Event Members.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPortBase">
            <summary>
            Base interface for all communication object end points and ports.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPortBase.Path">
            <summary>
            The path of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPortBase.Name">
            <summary>
            The name of the end point or port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEndPointBase">
            <summary>
            Base interface for all communication object end points.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IEndPointBase.Index">
            <summary>
            The index of the end point.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ICOBase">
            <summary>
            Base interface for all communication objects.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICOBase.Path">
            <summary>
            The path of the communication object.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICOBase.Name">
            <summary>
            The name of the communication object.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IParticipant">
            <summary>
            Identifies a communication participant.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IParticipant.Name">
            <summary>
            The name of the participant.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IParticipant.Path">
            <summary>
            The fully qualified path of the participant.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalCO">
            <summary>
            Tagging interface for signal communication object classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITxSignal">
            <summary>
            Tagging interface for signal sender ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRxSignal">
            <summary>
            Tagging interface for signal receiver ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredSignal">
            <summary>
            Tagging interface for signal measurement points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalSender">
            <summary>
            Tagging interface for signal sender end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalReceiver">
            <summary>
            Tagging interface for signal receiver end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedSignal">
            <summary>
            Tagging interface for consumed signal ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedSignal">
            <summary>
            Tagging interface for provided signal ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalProvider">
            <summary>
            Tagging interface for signal provider end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalConsumer">
            <summary>
            Tagging interface for signal consumer end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUCO">
            <summary>
            Tagging interface for PDU communication object classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITxPDU">
            <summary>
            Tagging interface for PDU sender ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRxPDU">
            <summary>
            Tagging interface for PDU receiver ports, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredPDU">
            <summary>
            Tagging interface for PDU measurement points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUSender">
            <summary>
            Tagging interface for PDU sender end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUReceiver">
            <summary>
            Tagging interface for PDU receiver end points, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ServiceStateProvider">
            <summary>
            Represents the state of a service at a service provider.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceStateProvider.Unavailable">
            <summary>
            The service is not available at the provider.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceStateProvider.Initializing">
            <summary>
            The service is basically available, but not yet usable (e.g. because not yet published)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceStateProvider.Available">
            <summary>
            The service is available for consumers. The provider will accept requests and connect to consumers.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ConnectionStateConsumer">
            <summary>
            Represents the state of a service connection at a service consumer.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateConsumer.Unavailable">
            <summary>
            No provider address for the service is known so far.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateConsumer.Connectable">
            <summary>
            A provider address is known for the service, but no connection has been established.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateConsumer.Available">
            <summary>
            The connection is established and thus communication with the provider is (theoretically) possible.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ConnectionStateProvider">
            <summary>
            Represents the state of a service for a specific consumer/provider connection.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateProvider.Unavailable">
            <summary>
            The provider is not in state Available or the consumer address is not yet known.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateProvider.Connectable">
            <summary>
            The provider is in state Available and the consumer address is known, but consumer and provider are not yet connected.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ConnectionStateProvider.Connected">
            <summary>
            A connection between consumer and provider has been established.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceCO">
            <summary>
            Tagging interface for service communication object classes. These classes can be used with
            service discovery handler attributes OnServerDiscovered and OnClientDiscovered. Instances
            of service classes can further be used in the low level API to add or remove end points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceConsumerBase">
            <summary>
            Tagging interface for consumer side end point classes. It identifies all end points,
            no matter whether simulated or real. The derived interface IServiceConsumer is only implemented
            by simulated end points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceConsumer">
            <summary>
            Interface for consumer side end point classes. These classes can be used with service discovery
            handler attributes OnServerDiscovered and OnServiceDiscovery. Instances of consumer
            classes can further be used in the low level API to trigger service discovery (for that consumer)
            and for associating consumers with an address.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceConsumer.Id">
            <summary>
            The consumer's binding specific identifier. This identifier can be used to get access to service
            ports through GetPort functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceProviderBase">
            <summary>
            Tagging interface for provider side end point classes. It identifies all end points,
            no matter whether simulated or real. The derived interface IServiceProvider is only implemented
            by simulated end points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceProvider">
            <summary>
            Interface for provider side end point classes. Besides the provided high level interface, these
            classes can be used with service discovery handler attribute OnClientDiscovered. Instances of
            provider classes can further be used in the low level API for provider announcement and
            associating providers with an address.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceProvider.Id">
            <summary>
            The provider's binding specific identifier. This identifier can be used to get access to service
            ports through GetPort functions.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceProvider.ProvideService">
            <summary>
            Switches the internal provider model into state Provided which initiates transitions to
            public transient state Initializing and if no errors occur into state Available.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceProvider.ReleaseService">
            <summary>
            Switches the internal provider model into state NotProvided which initiates transition to
            public state Unavailable.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceProvider.IsServiceProvided">
            <summary>
            Returns whether the internal provider model is in state Provided.
            </summary>
            <returns>true if the service is currently provided</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceProvider.ServiceState">
            <summary>
            Provides access to the current service state of the provider.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceProviderMeasured">
            <summary>
            Interface for provider side measurement end point classes. A measurement point
            provides read-only access to the provider state, it is similar to a provider
            side end-point but doesn't allow to initiate or revoke service discovery.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceProviderMeasured.Id">
            <summary>
            The provider's binding specific identifier. This identifier can be used to get access to service
            ports through GetPort functions.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceProviderMeasured.ServiceState">
            <summary>
            Provides access to the current service state of the provider.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedServiceShortcut">
            <summary>
            Interface for service port shortcut classes. Defines the high level API for consumer side
            service requests and allows to pass consumer side service port classes and their shortcut
            implementations into low level service discovery methods.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceShortcut.RequestService">
            <summary>
            Switches the internal consumer model into state Requested, which initiates the connection to
            the provider.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceShortcut.ReleaseService">
            <summary>
            Switches the internal consumer model into state Released, which releases the connection to
            the provider.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceShortcut.IsServiceRequested">
            <summary>
            Returns whether the internal consumer model is in state Requested.
            </summary>
            <returns>true if the service is currently requested</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedService">
            <summary>
            Interface for consumer side service port classes.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IConsumedService.ConnectionState">
            <summary>
            Provides access to the current connection state of the consumer side port.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedServiceShortcut">
            <summary>
            Tagging interface allows to pass provider side service port classes and their shortcut
            implementations into low level service discovery methods.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedService">
            <summary>
            Interface for provider side service port classes.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IProvidedService.ConnectionState">
            <summary>
            Provides access to the current connection state of the consumer/provider connection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredService">
            <summary>
            Interface for service measurement point classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SubscriptionState">
            <summary>
            Represents the state of an event, PDU or field with regard to subscription on provider or consumer side ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.SubscriptionState.Unavailable">
            <summary>
            The provider is not in state Available.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.SubscriptionState.Available">
            <summary>
            The provider is in state Available, but the consumer has not yet subscribed.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.SubscriptionState.Subscribed">
            <summary>
            The provider is in state Available and the consumer has subscribed.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventCO">
            <summary>
            Tagging interface for event communication object classes. Any event
            communication object implementation can be used with the associated
            event reference classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceEventPort">
            <summary>
            Base interface for service port events providing the event state at the port. Instances of
            these classes can be used in the low level API function for setting subscription state.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceEventPort.SubscriptionState">
            <summary>
            Provides access to the subscription state of the event.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceEventPort.Consumer">
            <summary>
            Provides access to the consumer of the event.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceEventPort.Provider">
            <summary>
            Provides access to the provider of the event.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedEvent">
            <summary>
            Tagging interface for consumer port events, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedEvent">
            <summary>
            Tagging interface for provider port events, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredEvent">
            <summary>
            Tagging interface for event measurement points.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredEvent.SubscriptionState">
            <summary>
            Provides access to the subscription state of the event.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredEvent.Consumer">
            <summary>
            Provides access to the consumer of the event.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredEvent.Provider">
            <summary>
            Provides access to the provider of the event.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventProvider">
            <summary>
            Interface of a provider side event end point, representing the subscription model value entity.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventProvider.GetNrOfSubscribedConsumers">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider side event.
            </summary>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventProvider.GetSubscribedConsumers">
            <summary>
            Lists the currently subscribed consumers of a provider side event.
            </summary>
            <returns>Enumeration of consumer side end points</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventProviderMeasured">
            <summary>
            Tagging interface for a provider side event measurement point.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventConsumer">
            <summary>
            Interface of a consumer side event end point, identifying the consumer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFieldCO">
            <summary>
            Tagging interface for field communication object classes. Any field
            communication object implementation can be used with the associated
            field reference classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceFieldPort">
            <summary>
            Base interface for service port fields providing the field state at the port. Instances of
            these classes can be used in the low level API function for setting subscription state.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceFieldPort.Consumer">
            <summary>
            Provides access to the consumer of the field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServiceFieldPort.Provider">
            <summary>
            Provides access to the provider of the field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISubscribableField">
            <summary>
            Additional interface implemented by field ports with notification.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ISubscribableField.SubscriptionState">
            <summary>
            Provides access to the current subscription state of the field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedField">
            <summary>
            Tagging interface for consumer port fields, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedField">
            <summary>
            Tagging interface for provider port fields, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredField">
            <summary>
            Tagging interface for field measurement points.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredField.Consumer">
            <summary>
            Provides access to the consumer of the field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredField.Provider">
            <summary>
            Provides access to the provider of the field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFieldProvider">
            <summary>
            Interface of a provider side field end point, representing the subscription model value entity.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISubscribableFieldProvider">
            <summary>
            Additional interface implemented by provider fields with notification
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISubscribableFieldProvider.GetNrOfSubscribedConsumers">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider side field.
            </summary>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISubscribableFieldProvider.GetSubscribedConsumers">
            <summary>
            Lists the currently subscribed consumers of a provider side field.
            </summary>
            <returns>Enumeration of consumer side end points</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFieldConsumer">
            <summary>
            Interface of a consumer side field end point, identifying the consumer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServicePDUCO">
            <summary>
            Tagging interface for Service PDU communication object classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServicePDUPort">
            <summary>
            Base interface for service port PDUs providing the PDU state at the port. Instances of
            these classes can be used in the low level API function for setting subscription state.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServicePDUPort.SubscriptionState">
            <summary>
            Provides access to the subscription state of the PDU.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServicePDUPort.Consumer">
            <summary>
            Provides access to the consumer of the PDU.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IServicePDUPort.Provider">
            <summary>
            Provides access to the provider of the PDU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedPDU">
            <summary>
            Tagging interface for consumer port PDUs, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedPDU">
            <summary>
            Tagging interface for provider port PDUs, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredServicePDU">
            <summary>
            Tagging interface for PDU measurement points.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredServicePDU.SubscriptionState">
            <summary>
            Provides access to the subscription state of the PDU.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredServicePDU.Consumer">
            <summary>
            Provides access to the consumer of the PDU.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMeasuredServicePDU.Provider">
            <summary>
            Provides access to the provider of the PDU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUProvider">
            <summary>
            Interface of a provider side PDU end point, representing the subscription model value entity.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUProvider.GetNrOfSubscribedConsumers">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider side PDU.
            </summary>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUProvider.GetSubscribedConsumers">
            <summary>
            Lists the currently subscribed consumers of a provider side PDU.
            </summary>
            <returns>Enumeration of consumer side end points</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUProviderMeasured">
            <summary>
            Tagging interface for a provider side PDU measurement point.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUConsumer">
            <summary>
            Interface of a consumer side PDU end point, identifying the consumer.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMethodCO">
            <summary>
            Tagging interface for method communication object classes. Any method
            communication object implementation can be used with the associated
            method reference classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedMethod">
            <summary>
            Tagging interface for consumer port methods, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedMethod">
            <summary>
            Tagging interface for provider port methods, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredMethod">
            <summary>
            Tagging interface for method measurement points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMethodConsumer">
            <summary>
            Tagging interface for consumer end point methods, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMethodProvider">
            <summary>
            Tagging interface for provider end point methods, used in context selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicServiceProvider">
            <summary>
            Internal class. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProvider.#ctor(Vector.CANoe.Runtime.Internal.IServiceProviderProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="providerProxy">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.Path">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.Name">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.Index">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.Id">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProvider.ProvideService">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProvider.ReleaseService">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProvider.IsServiceProvided">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.ServiceState">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProvider.ProviderProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicServiceConsumer">
            <summary>
            Internal class. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumer.#ctor(Vector.CANoe.Runtime.Internal.IServiceConsumerProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="consumerProxy">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumer.Path">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumer.Name">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumer.Index">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumer.Id">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumer.ConsumerProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicConsumedService">
            <summary>
            Internal class. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedService.#ctor(Vector.CANoe.Runtime.Internal.IConsumedServiceProxy)">
            <summary>
            Internal Constructor. You should never use this type.
            </summary>
            <param name="consumedServiceProxy">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedService.Path">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedService.Name">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedService.RequestService">
            <summary>
            Internal Method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedService.ReleaseService">
            <summary>
            Internal Method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedService.IsServiceRequested">
            <summary>
            Internal Method. You should never use this type.
            </summary>
            <returns>For internal use only.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedService.ConnectionState">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedService.ConsumedServiceProxy">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicProvidedService">
            <summary>
            Internal class. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedService.#ctor(Vector.CANoe.Runtime.Internal.IProvidedServiceProxy)">
            <summary>
            Internal Constructor. You should never use this type.
            </summary>
            <param name="providedServiceProxy">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedService.Path">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedService.Name">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedService.ConnectionState">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedService.ProvidedServiceProxy">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueSizeViolationException">
            <summary>
            Exception which is thrown if values exceeding maximum data size are set.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueSizeViolationException.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="coPath">For internal use only.</param>
            <param name="actual">For internal use only.</param>
            <param name="maximum">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueSizeViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueEntityReadOnlyException">
            <summary>
            Exception which is thrown upon write access to read only value entities (e.g. writing a consumer side field value)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityReadOnlyException.#ctor(System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="vePath">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityReadOnlyException.Register">
            <summary>
            Callback registration. For internal use only.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ServiceSide">
            <summary>
            Identifies access to consumer or provider side service oriented end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceSide.Consumer">
            <summary>
            Identifies consumer side end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceSide.Provider">
            <summary>
            Identifies provider side end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ServiceSide.Measure">
            <summary>
            Identifies measurement points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.TransmissionSide">
            <summary>
            Identifies access to sender or receiver side classical end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.TransmissionSide.Sender">
            <summary>
            Identifies sender side end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.TransmissionSide.Receiver">
            <summary>
            Identifies receiver side end-points or ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.TransmissionSide.Measure">
            <summary>
            Identifies measurement points.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueRepresentation">
            <summary>
            Used to specify which value representation shall be used in numerical encoded data types.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueRepresentation.Default">
            <summary>
            Identifies default value representation.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueRepresentation.Impl">
            <summary>
            Identifies implementation value representation.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueRepresentation.Raw">
            <summary>
            Identifies raw value representation.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueRepresentation.Phys">
            <summary>
            Identifies physical value representation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ICOReferenceBase">
            <summary>
            Base interface for all communication object references.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICOReferenceBase.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies an end-point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ICOReferenceBase.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to end-point or port is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ICOReferenceBase.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ICOReferenceEncoded">
            <summary>
            Base interface for communication object references with encoded primitive data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ICOReferenceEncoded.GetValueRepresentation">
            <summary>
            Returns the currently selected value representation.
            </summary>
            <returns>value representation (Impl, Raw, Phys)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumerReferenceBase">
            <summary>
            Base interface for all communication object references providing service oriented consumer side access.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceBase.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceBase.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceBase.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceBase.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceBase.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumerReferenceEncoded">
            <summary>
            Base interface for all communication object references providing service oriented consumer side access with encoded data types.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumerReferenceEncoded.SetConsumer(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected consumer and value representation.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProviderReferenceBase">
            <summary>
            Base interface for all communication object references providing service oriented provider side access.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceBase.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceBase.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceBase.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceBase.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceBase.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProviderReferenceEncoded">
            <summary>
            Base interface for all communication object references providing service oriented provider side access with encoded data types.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProviderReferenceEncoded.SetProvider(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected provider and value representation.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISenderReferenceBase">
            <summary>
            Base interface for all communication object references providing classical sender side access.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceBase.SetSender(System.String)">
            <summary>
            Switches the currently selected sender.
            </summary>
            <param name="senderPath">fully qualified path of a sender side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceBase.SetSender(System.UInt32)">
            <summary>
            Switches the currently selected sender.
            </summary>
            <param name="senderIndex">index of a sender side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceBase.SetSender(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected sender.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceBase.GetSender">
            <summary>
            Returns the currently selected sender side participant.
            </summary>
            <returns>currently selected sender side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceBase.GetSenderIndex">
            <summary>
            Returns the currently selected sender side end-point's index.
            </summary>
            <returns>index of currently selected sender side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISenderReferenceEncoded">
            <summary>
            Base interface for all communication object references providing classical sender side access with encoded data types.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISenderReferenceEncoded.SetSender(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected sender and value representation.
            </summary>
            <param name="senderPath">fully qualified path of a sender side participant or end-point</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IReceiverReferenceBase">
            <summary>
            Base interface for all communication object references providing classical receiver side access.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceBase.SetReceiver(System.String)">
            <summary>
            Switches the currently selected receiver.
            </summary>
            <param name="receiverPath">fully qualified path of a receiver side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceBase.SetReceiver(System.UInt32)">
            <summary>
            Switches the currently selected receiver.
            </summary>
            <param name="receiverIndex">index of a receiver side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceBase.SetReceiver(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected receiver.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceBase.GetReceiver">
            <summary>
            Returns the currently selected receiver side participant.
            </summary>
            <returns>currently selected receiver side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceBase.GetReceiverIndex">
            <summary>
            Returns the currently selected receiver side end-point's index.
            </summary>
            <returns>index of currently selected receiver side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IReceiverReferenceEncoded">
            <summary>
            Base interface for all communication object references providing classical receiver side access with encoded data types.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IReceiverReferenceEncoded.SetReceiver(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected receiver and value representation.
            </summary>
            <param name="receiverPath">fully qualified path of a receiver side participant or end-point</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedServiceRef">
            <summary>
            A reference to a consumer side service port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedServiceRef">
            <summary>
            A reference to a provider side service port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredServiceRef">
            <summary>
            A reference to a service measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceConsumerRef">
            <summary>
            A reference to a consumer side service end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceConsumerRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IServiceProviderRef">
            <summary>
            A reference to a provider side service end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IServiceProviderRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedMethodRef">
            <summary>
            A reference to a consumer side method port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.SetMethod(System.String)">
            <summary>
            Switches the currently selected method.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected method.
            </remarks>
            <param name="methodPath">fully qualified path of a method CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.GetMethodConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.GetMethodProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.GetConsumedServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced method.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedMethodRef.GetConsumedFieldRef">
            <summary>
            Creates a reference to the consumer side port of the field containing the currently referenced setter or getter.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side field port reference (may be null if the currently selected method is no field setter or getter)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedMethodRef">
            <summary>
            A reference to a provider side method port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.SetMethod(System.String)">
            <summary>
            Switches the currently selected method.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected method.
            </remarks>
            <param name="methodPath">fully qualified path of a method CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.GetMethodConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.GetMethodProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.GetProvidedServiceRef">
            <summary>
            Creates a reference to the provider side port of the service containing the currently referenced method.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side service port reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedMethodRef.GetProvidedFieldRef">
            <summary>
            Creates a reference to the provider side port of the field containing the currently referenced setter or getter.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side field port reference (may be null if the currently selected method is no field setter or getter)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredMethodRef">
            <summary>
            A reference to a method measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.SetMethod(System.String)">
            <summary>
            Switches the currently selected method.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected method.
            </remarks>
            <param name="methodPath">fully qualified path of a method CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.GetMethodConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.GetMethodProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.GetMeasuredServiceRef">
            <summary>
            Creates a reference to the measurement point of the service containing the currently referenced method.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>service measurement point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredMethodRef.GetMeasuredFieldRef">
            <summary>
            Creates a reference to the measurement point of the field containing the currently referenced setter or getter.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>field measurement point reference (may be null if the currently selected method is no field setter or getter)</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMethodConsumerRef">
            <summary>
            A reference to a consumer side method end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMethodConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMethodConsumerRef.SetMethod(System.String)">
            <summary>
            Switches the currently selected method.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected method.
            </remarks>
            <param name="methodPath">fully qualified path of a method CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMethodProviderRef">
            <summary>
            A reference to a provider side method end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMethodProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMethodProviderRef.SetMethod(System.String)">
            <summary>
            Switches the currently selected method.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected method.
            </remarks>
            <param name="methodPath">fully qualified path of a method CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedEventRef">
            <summary>
            A reference to a consumer side event port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedEventRef.SetEvent(System.String)">
            <summary>
            Switches the currently selected event.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedEventRef.GetEventConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedEventRef.GetEventProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedEventRef.GetConsumedServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced event.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedConsumedEventRef">
            <summary>
            A reference to a consumer side event port with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedEventRef.SetEvent(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected event and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedEventRef">
            <summary>
            A reference to a provider side event port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedEventRef.SetEvent(System.String)">
            <summary>
            Switches the currently selected event.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedEventRef.GetEventConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedEventRef.GetEventProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedEventRef.GetProvidedServiceRef">
            <summary>
            Creates a reference to the provider side port of the service containing the currently referenced event.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedProvidedEventRef">
            <summary>
            A reference to a provider side event port with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedEventRef.SetEvent(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected event and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredEventRef">
            <summary>
            A reference to an event measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredEventRef.SetEvent(System.String)">
            <summary>
            Switches the currently selected event.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredEventRef.GetEventConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredEventRef.GetEventProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredEventRef.GetMeasuredServiceRef">
            <summary>
            Creates a reference to the measurement point of the service containing the currently referenced event.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>service measurement point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedMeasuredEventRef">
            <summary>
            A reference to an event measurement point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredEventRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredEventRef.SetEvent(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected event and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventConsumerRef">
            <summary>
            A reference to a consumer side event end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventConsumerRef.SetEvent(System.String)">
            <summary>
            Switches the currently selected event.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedEventConsumerRef">
            <summary>
            A reference to a consumer side event end-point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedEventConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedEventConsumerRef.SetEvent(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected event and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEventProviderRef">
            <summary>
            A reference to a provider side event end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEventProviderRef.SetEvent(System.String)">
            <summary>
            Switches the currently selected event.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedEventProviderRef">
            <summary>
            A reference to a provider side event end-point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedEventProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedEventProviderRef.SetEvent(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected event and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected event.
            </remarks>
            <param name="eventPath">fully qualified path of a event CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedFieldRef">
            <summary>
            A reference to a consumer side field port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedFieldRef.GetConsumedServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedConsumedFieldRef">
            <summary>
            A reference to a consumer side field port with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedFieldRef">
            <summary>
            A reference to a provider side field port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedFieldRef.GetProvidedServiceRef">
            <summary>
            Creates a reference to the provider side port of the service containing the currently referenced field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedProvidedFieldRef">
            <summary>
            A reference to a provider side field port with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredFieldRef">
            <summary>
            A reference to a field measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredFieldRef.GetMeasuredServiceRef">
            <summary>
            Creates a reference to the measurement point of the service containing the currently referenced field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>service measurement point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedMeasuredFieldRef">
            <summary>
            A reference to a field measurement point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredFieldRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFieldConsumerRef">
            <summary>
            A reference to a consumer side field end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IFieldConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IFieldConsumerRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedFieldConsumerRef">
            <summary>
            A reference to a consumer side field end-point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedFieldConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedFieldConsumerRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFieldProviderRef">
            <summary>
            A reference to a provider side field end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IFieldProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IFieldProviderRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedFieldProviderRef">
            <summary>
            A reference to a provider side field end-point with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedFieldProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedFieldProviderRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedPDURef">
            <summary>
            A reference to a consumer side service PDU port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedPDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedPDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected service PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a service PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedPDURef.GetPDUConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedPDURef.GetPDUProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedPDURef.GetConsumedServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced service PDU.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedPDURef">
            <summary>
            A reference to a provider side service PDU port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedPDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedPDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected service PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a service PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedPDURef.GetPDUConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedPDURef.GetPDUProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedPDURef.GetProvidedServiceRef">
            <summary>
            Creates a reference to the provider side port of the service containing the currently referenced PDU.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side service port reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredServicePDURef">
            <summary>
            A reference to a service PDU measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServicePDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServicePDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected service PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a service PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServicePDURef.GetPDUConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServicePDURef.GetPDUProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredServicePDURef.GetMeasuredServiceRef">
            <summary>
            Creates a reference to the measurement point of the service containing the currently referenced service PDU.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>service measurement point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUConsumerRef">
            <summary>
            A reference to a consumer side service PDU end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUConsumerRef.SetPDU(System.String)">
            <summary>
            Switches the currently selected service PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected service PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a service PDU CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUProviderRef">
            <summary>
            A reference to a provider side service PDU end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUProviderRef.SetPDU(System.String)">
            <summary>
            Switches the currently selected service PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected service PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a service PDU CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IConsumedSignalRef">
            <summary>
            A reference to a consumer side port of a semantic service signal.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedSignalRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected semantic service signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected semantic service signal.
            </remarks>
            <param name="signalPath">fully qualified path of a semantic service signal CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedSignalRef.GetSignalConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IConsumedSignalRef.GetSignalProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedConsumedSignalRef">
            <summary>
            A reference to a consumer side port of a semantic service signal with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedConsumedSignalRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected semantic service signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected semantic service signal.
            </remarks>
            <param name="signalPath">fully qualified path of a semantic service signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IProvidedSignalRef">
            <summary>
            A reference to a provider side port of a semantic service signal.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedSignalRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected semantic service signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected semantic service signal.
            </remarks>
            <param name="signalPath">fully qualified path of a semantic service signal CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedSignalRef.GetSignalConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IProvidedSignalRef.GetSignalProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedProvidedSignalRef">
            <summary>
            A reference to a provider side port of a semantic service signal with encoded data type representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedProvidedSignalRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected semantic service signal and encoding.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected semantic service signal.
            </remarks>
            <param name="signalPath">fully qualified path of a semantic service signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalConsumerRef">
            <summary>
            A reference to a consumer side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalConsumerRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedSignalConsumerRef">
            <summary>
            A reference to a consumer side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same consumer.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalConsumerRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalProviderRef">
            <summary>
            A reference to a provider side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalProviderRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedSignalProviderRef">
            <summary>
            A reference to a provider side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same provider.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalProviderRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRxSignalRef">
            <summary>
            A reference to a receiver side signal port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxSignalRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxSignalRef.GetSignalReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxSignalRef.GetSignalSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedRxSignalRef">
            <summary>
            A reference to a receiver side signal port with encoded data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedRxSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedRxSignalRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITxSignalRef">
            <summary>
            A reference to a sender side signal port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxSignalRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxSignalRef.GetSignalReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxSignalRef.GetSignalSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedTxSignalRef">
            <summary>
            A reference to a sender side signal port with encoded data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedTxSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedTxSignalRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredSignalRef">
            <summary>
            A reference to a signal measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredSignalRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredSignalRef.GetSignalReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredSignalRef.GetSignalSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedMeasuredSignalRef">
            <summary>
            A reference to a signal measurement point with encoded data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredSignalRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedMeasuredSignalRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalReceiverRef">
            <summary>
            A reference to a receiver side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalReceiverRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same receiver.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalReceiverRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedSignalReceiverRef">
            <summary>
            A reference to a receiver side signal end-point with encoded data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalReceiverRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same receiver.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalReceiverRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ISignalSenderRef">
            <summary>
            A reference to a sender side signal end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalSenderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same sender.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ISignalSenderRef.SetSignal(System.String)">
            <summary>
            Switches the currently selected signal.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IEncodedSignalSenderRef">
            <summary>
            A reference to a sender side signal end-point with encoded data type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalSenderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same sender.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IEncodedSignalSenderRef.SetSignal(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected signal and representation.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected sender doesn't
            match the newly selected signal.
            </remarks>
            <param name="signalPath">fully qualified path of a signal CO</param>
            <param name="representation">value representation to select</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRxPDURef">
            <summary>
            A reference to a receiver side PDU port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxPDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxPDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxPDURef.GetPDUReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRxPDURef.GetPDUSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITxPDURef">
            <summary>
            A reference to a sender side PDU port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxPDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxPDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxPDURef.GetPDUReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITxPDURef.GetPDUSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMeasuredPDURef">
            <summary>
            A reference to a PDU measurement point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredPDURef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredPDURef.SetPDU(System.String)">
            <summary>
            Switches the currently selected PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver or sender doesn't
            match the newly selected PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a PDU CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredPDURef.GetPDUReceiver">
            <summary>
            Creates a copy of the currently selected receiver end-point reference.
            </summary>
            <returns>receiver side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IMeasuredPDURef.GetPDUSender">
            <summary>
            Creates a copy of the currently selected sender end-point reference.
            </summary>
            <returns>sender side end-point reference</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUReceiverRef">
            <summary>
            A reference to a receiver side PDU end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUReceiverRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same receiver.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUReceiverRef.SetPDU(System.String)">
            <summary>
            Switches the currently selected PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected receiver doesn't
            match the newly selected PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a PDU CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPDUSenderRef">
            <summary>
            A reference to a sender side PDU end-point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUSenderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same sender.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPDUSenderRef.SetPDU(System.String)">
            <summary>
            Switches the currently selected PDU.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected sender doesn't
            match the newly selected PDU.
            </remarks>
            <param name="pduPath">fully qualified path of a PDU CO</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicConsumedServiceRef">
            <summary>
            Dynamic consumed service reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.#ctor(Vector.CANoe.Runtime.Internal.IConsumedServiceContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to port is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.SetService(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            The specified service must match the interface type associated with the
            reference. Selecting a service may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected service.
            </remarks>
            <param name="service">service object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.Path">
            <summary>
            The path of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.Name">
            <summary>
            The name of the end point or port.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.RequestService">
            <summary>
            Switches the internal consumer model into state Requested, which initiates the connection to
            the provider.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.ReleaseService">
            <summary>
            Switches the internal consumer model into state Released, which releases the connection to
            the provider.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedServiceRef.IsServiceRequested">
            <summary>
            Returns whether the internal consumer model is in state Requested.
            </summary>
            <returns>true if the service is currently requested</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.ConnectionState">
            <summary>
            Provides access to the current connection state of the consumer side port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedServiceRef.ConsumedServiceProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicProvidedServiceRef">
            <summary>
            Dynamic provided service reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.#ctor(Vector.CANoe.Runtime.Internal.IProvidedServiceContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to port is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.SetService(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            The specified service must match the interface type associated with the
            reference. Selecting a service may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected service.
            </remarks>
            <param name="service">service object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.Path">
            <summary>
            The path of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.Name">
            <summary>
            The name of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.ConnectionState">
            <summary>
            Provides access to the current connection state of the consumer side port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedServiceRef.ProvidedServiceProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicMeasuredServiceRef">
            <summary>
            Dynamic measured service reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.#ctor(Vector.CANoe.Runtime.Internal.IMeasuredServiceContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to measurement point is valid.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.SetService(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            The specified service must match the interface type associated with the
            reference. Selecting a service may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected service.
            </remarks>
            <param name="service">service object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetServiceConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.GetServiceProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.Path">
            <summary>
            The path of the measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.Name">
            <summary>
            The name of the measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredServiceRef.MeasuredServiceProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicServiceConsumerRef">
            <summary>
            Dynamic service consumer reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.#ctor(Vector.CANoe.Runtime.Internal.IServiceConsumerContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same end-point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies an end-point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to end-point is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceConsumerRef.SetService(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            The specified service must match the interface type associated with the
            reference. Selecting a service may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected service.
            </remarks>
            <param name="service">service object to be selected</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Id">
            <summary>
            The binding identifier of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Path">
            <summary>
            The path of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Name">
            <summary>
            The name of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.Index">
            <summary>
            The index of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceConsumerRef.ConsumerProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicServiceProviderRef">
            <summary>
            Dynamic service provider reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.#ctor(Vector.CANoe.Runtime.Internal.IServiceProviderContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies an end-point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to end-point is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.GetProviderIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.SetService(System.String)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected service.
            </remarks>
            <param name="servicePath">fully qualified path of a service CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.SetService(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Switches the currently selected service.
            </summary>
            <remarks>
            The specified service must match the interface type associated with the
            reference. Selecting a service may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected service.
            </remarks>
            <param name="service">service object to be selected</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.Id">
            <summary>
            The binding identifier of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.Path">
            <summary>
            The path of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.Name">
            <summary>
            The name of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.Index">
            <summary>
            The index of the end point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.ProvideService">
            <summary>
            Switches the internal provider model into state Provided which initiates transitions to
            public transient state Initializing and if no errors occur into state Available.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.ReleaseService">
            <summary>
            Switches the internal provider model into state NotProvided which initiates transition to
            public state Unavailable.
            </summary>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicServiceProviderRef.IsServiceProvided">
            <summary>
            Returns whether the internal provider model is in state Provided.
            </summary>
            <returns>true if the service is currently provided</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.ServiceState">
            <summary>
            Provides access to the current service state of the provider.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicServiceProviderRef.ProviderProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicConsumedFieldRef">
            <summary>
            Dynamic consumed field reference obtained from corresponding method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.#ctor(Vector.CANoe.Runtime.Internal.IConsumedFieldContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Vector#CANoe#Runtime#IConsumedFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Vector#CANoe#Runtime#IEncodedConsumedFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to port is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetConsumer(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected consumer and value representation.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetProvider(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected provider and value representation.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicConsumedFieldRef.GetConsumedServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced service field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Consumer">
            <summary>
            Provides access to the consumer of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Provider">
            <summary>
            Provides access to the provider of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Path">
            <summary>
            The path of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Name">
            <summary>
            The name of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.SubscriptionState">
            <summary>
            Provides access to the current connection state of the consumer side port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Vector#CANoe#Runtime#Internal#IConsumedServiceField#ConsumedFieldProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicConsumedFieldRef.Vector#CANoe#Runtime#Internal#IServiceFieldPort#FieldProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicProvidedFieldRef">
            <summary>
            Dynamic provided field reference obtained from corresponding method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.#ctor(Vector.CANoe.Runtime.Internal.IProvidedFieldContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Vector#CANoe#Runtime#IProvidedFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Vector#CANoe#Runtime#IEncodedProvidedFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same port.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to port is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetConsumer(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected consumer and value representation.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetProvider(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected provider and value representation.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicProvidedFieldRef.GetProvidedServiceRef">
            <summary>
            Creates a reference to the provider side port of the service containing the currently referenced service field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>provider side service port reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Consumer">
            <summary>
            Provides access to the consumer of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Provider">
            <summary>
            Provides access to the provider of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Path">
            <summary>
            The path of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Name">
            <summary>
            The name of the end point or port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.SubscriptionState">
            <summary>
            Provides access to the current connection state of the consumer side port.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Vector#CANoe#Runtime#Internal#IProvidedServiceField#ProvidedFieldProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicProvidedFieldRef.Vector#CANoe#Runtime#Internal#IServiceFieldPort#FieldProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicMeasuredFieldRef">
            <summary>
            Dynamic measured field reference obtained from corresponding method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.#ctor(Vector.CANoe.Runtime.Internal.IMeasuredFieldContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Vector#CANoe#Runtime#IMeasuredFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Vector#CANoe#Runtime#IEncodedMeasuredFieldRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same measurement point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies a measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to measurement point is valid.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetConsumer(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected consumer and value representation.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetProvider(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected provider and value representation.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SetField(Vector.CANoe.Runtime.IFieldCO,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
            <param name="representation">value representation of selected field port</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetFieldConsumer">
            <summary>
            Creates a copy of the currently selected consumer end-point reference.
            </summary>
            <returns>consumer side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetFieldProvider">
            <summary>
            Creates a copy of the currently selected provider end-point reference.
            </summary>
            <returns>provider side end-point reference</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.GetMeasuredServiceRef">
            <summary>
            Creates a reference to the consumer side port of the service containing the currently referenced service field.
            The returned object selects the same consumer and provider as this object.
            </summary>
            <returns>consumer side service port reference</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Consumer">
            <summary>
            Provides access to the consumer of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Provider">
            <summary>
            Provides access to the provider of the selected field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Path">
            <summary>
            The path of the measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Name">
            <summary>
            The name of the measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.SubscriptionState">
            <summary>
            Provides access to the current subscription state of the measurement point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicMeasuredFieldRef.Vector#CANoe#Runtime#Internal#IMeasuredServiceField#MeasuredFieldProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicFieldConsumerRef">
            <summary>
            Dynamic field consumer reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.#ctor(Vector.CANoe.Runtime.Internal.IFieldConsumerContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Vector#CANoe#Runtime#IFieldConsumerRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same end-point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Vector#CANoe#Runtime#IEncodedFieldConsumerRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same end-point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies an end-point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to end-point is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetConsumer(System.String)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetConsumer(System.UInt32)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerIndex">index of a consumer side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetConsumer(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetConsumer(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected consumer.
            </summary>
            <param name="consumerPath">fully qualified path of a consumer side participant or end-point</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.GetConsumer">
            <summary>
            Returns the currently selected consumer side participant.
            </summary>
            <returns>currently selected consumer side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.GetConsumerIndex">
            <summary>
            Returns the currently selected consumer side end-point's index.
            </summary>
            <returns>index of currently selected consumer side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected consumer or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetField(Vector.CANoe.Runtime.IFieldCO)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldConsumerRef.SetField(Vector.CANoe.Runtime.IFieldCO,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected consumer or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Path">
            <summary>
            The path of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Name">
            <summary>
            The name of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.Index">
            <summary>
            The index of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldConsumerRef.FieldConsumerProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicFieldProviderRef">
            <summary>
            Dynamic field provider reference obtained from corresponding field or method sub-CO reference.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.#ctor(Vector.CANoe.Runtime.Internal.IFieldProviderContextProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.Vector#CANoe#Runtime#IFieldProviderRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same end-point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.Vector#CANoe#Runtime#IEncodedFieldProviderRef#Clone">
            <summary>
            Creates a copy of this object, which then selects the same end-point.
            </summary>
            <returns>a clone of this object</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.Dispose">
            <summary>
            Release all resources associated with the object. You must not use the object afterwards.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.IsConsistent">
            <summary>
            Whether the current selection uniquely identifies an end-point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.IsValid">
            <summary>
            Whether the current selection is consistent and the referred to end-point is simulated.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.Clear">
            <summary>
            Resets the selection to defaults.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetProvider(System.String)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetProvider(System.UInt32)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerIndex">index of a provider side end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetProvider(Vector.CANoe.Runtime.IParticipant)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="participant">instance of a participant class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetProvider(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected provider.
            </summary>
            <param name="providerPath">fully qualified path of a provider side participant or end-point</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.GetProvider">
            <summary>
            Returns the currently selected provider side participant.
            </summary>
            <returns>currently selected provider side participant (may be null if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.GetProviderIndex">
            <summary>
            Returns the currently selected provider side end-point's index.
            </summary>
            <returns>index of currently selected provider side end-point (may return EndPoints.InvalidEndPoint if selection is inconsistent)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetField(System.String)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetField(System.String,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            This may yield an inconsistent selection if the currently selected provider or provider doesn't
            match the newly selected field.
            </remarks>
            <param name="fieldPath">fully qualified path of a field CO</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetField(Vector.CANoe.Runtime.IFieldCO)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected provider or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.SetField(Vector.CANoe.Runtime.IFieldCO,Vector.CANoe.Runtime.ValueRepresentation)">
            <summary>
            Switches the currently selected field.
            </summary>
            <remarks>
            The specified field must match the interface type associated with the
            reference. Selecting a field may yield inconsistent selection if the currently
            selected provider or provider doesn't match the newly selected field.
            </remarks>
            <param name="field">field object to be selected</param>
            <param name="representation">value representation of selected field end-point</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.Path">
            <summary>
            The path of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.Name">
            <summary>
            The name of the end point.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.Index">
            <summary>
            The index of the end point.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.GetNrOfSubscribedConsumers">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider side field.
            </summary>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicFieldProviderRef.GetSubscribedConsumers">
            <summary>
            Lists the currently subscribed consumers of a provider side field.
            </summary>
            <returns>Enumeration of consumer side end points</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicFieldProviderRef.FieldProviderProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicParticipant">
            <summary>
            Dynamic object representing a participant. You obtain dynamic participant objects when querying
            current selection from communication object reference classes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicParticipant.#ctor(Vector.CANoe.Runtime.Internal.IParticipantProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="proxy">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicParticipant.Name">
            <summary>
            The participant name.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicParticipant.Path">
            <summary>
            The participant path.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicParticipant.ObjectId">
            <summary>
            A unique identifier of the participant within the loaded configuration.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicParticipant.ParticipantProxy">
            <summary>
            Internal Property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ContextSelectionFailedException">
            <summary>
            Exception which is thrown if end-point selection fails.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextSelectionFailedException.#ctor(System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="coPath">For internal use only.</param>
            <param name="method">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextSelectionFailedException.#ctor(System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="method">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextSelectionFailedException.#ctor(System.String,Vector.CANoe.Runtime.Internal.ICallContextProxy,System.Boolean)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="method">For internal use only.</param>
            <param name="ccProxy">For internal use only.</param>
            <param name="consumerSide">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextSelectionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.InvalidContextSideException">
            <summary>
            Exception which is thrown if the called API doesn't match the currently selected side.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidContextSideException.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="coPath">For internal use only.</param>
            <param name="method">For internal use only.</param>
            <param name="side">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidContextSideException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.InvalidContextSelectionException">
            <summary>
            Exception which is thrown if the called CO currently has no valid participant or end-point selection.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidContextSelectionException.#ctor(System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="coPath">For internal use only.</param>
            <param name="method">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.InvalidContextSelectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.ContextNotSimulatedException">
            <summary>
            Exception which is thrown if the called API doesn't match the currently selected side.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextNotSimulatedException.#ctor(System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="contextPath">For internal use only.</param>
            <param name="method">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ContextNotSimulatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.BindingMismatchException">
            <summary>
            Exception which is thrown if a CO is passed into the <see cref="T:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery"/> API
            which has a binding different from SOME/IP binding.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.BindingMismatchException.#ctor(System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="portPath">For internal use only.</param>
            <param name="expectedBinding">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.BindingMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.FieldFeatureMissingException">
            <summary>
            Exception which is thrown if the selected Field is missing a setter, getter or notification which would be
            required for the accessed functionality.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.FieldFeatureMissingException.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="fieldPath">For internal use only.</param>
            <param name="feature">For internal use only.</param>
            <param name="method">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.FieldFeatureMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DataTypeMismatchException">
            <summary>
            Exception thrown if the value of a selected communication object of numeric data type is accessed through
            a context object and the data type of the context object doesn't match the data type of the communication
            object in the selected value representation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DataTypeMismatchException.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="dataType">For internal use only.</param>
            <param name="coPath">For internal use only.</param>
            <param name="valueRepresentation">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DataTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IAddressHandle">
            <summary>
            Tagging interface carrying binding specific address information.
            </summary>
            Address handles obtained through API calls or cloned from handler parameters should be disposed as soon as
            they are not used anymore.
        </member>
        <member name="M:Vector.CANoe.Runtime.IAddressHandle.Clone">
            <summary>
            Clones the address handle to a long living instance, which may be used beyond
            the scope of a handler which got the original address handle passed as a
            parameter.
            </summary>
            <returns>The cloned handle, remember to dispose when no longer needed</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicAddressHandle">
            <summary>
            Internal class. You should never use this type.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicAddressHandle.#ctor(Vector.CANoe.Runtime.Internal.IAddressHandleProxy)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="addressProxy">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicAddressHandle.Dispose">
            <summary>
            Disposes the object, thus freeing system resources.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicAddressHandle.Clone">
            <summary>
            Clones the address handle for use beyond the scope of a handler which got the original address handle
            passed in as a parameter. You should always make sure to dispose cloned handles when you no longer
            need them.
            </summary>
            <returns>The cloned address handle</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicAddressHandle.AddressProxy">
            <summary>
            Internal property. You should never use this type.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ServiceDiscovery">
            <summary>
            Low level Service Discovery API.
            </summary>
            <remarks>All low level API functions have a first parameter identifying the object to which
            the functionality shall be applied, i.e. if the first parameter is a service communication
            object, then the function will manipulate or examine that object.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AddProvider(Vector.CANoe.Runtime.IServiceCO,System.String,System.Boolean,Vector.CANoe.Runtime.IServiceProvider@)">
            <summary>
            Dynamically adds a provider end point to a service.
            </summary>
            <param name="theService">A service instance to which a provider shall be added</param>
            <param name="name">The name of the new provider</param>
            <param name="isSimulated">Whether the new provider should be simulated by the tool</param>
            <param name="provider">Returns a reference to the new provider (null in case of failure)</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
            <remarks>The binding properties of the new provider are set to defaults.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AddProvider(Vector.CANoe.Runtime.IServiceCO,Vector.CANoe.Runtime.IAddressHandle,Vector.CANoe.Runtime.IServiceProvider@)">
            <summary>
            Dynamically adds a provider end point with a known address to a service.
            </summary>
            <param name="theService">A service instance to which a provider shall be added</param>
            <param name="address">The (binding specific) address information of the new provider</param>
            <param name="provider">Returns a reference to the new provider (null in case of failure)</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
            <remarks>This function is typically used in service discovery from a OnProviderDiscovered handler.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.RemoveProvider(Vector.CANoe.Runtime.IServiceCO,Vector.CANoe.Runtime.IServiceProvider)">
            <summary>
            Dynamically removes a provider end point from a service. The given provider must previously have been added
            to the service by one of the AddProvider functions.
            </summary>
            <param name="theService">A service instance from which a provider shall be removed</param>
            <param name="provider">Identifies the provider to be removed</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetProvider(Vector.CANoe.Runtime.IServiceCO,System.Int64)">
            <summary>
            Returns a reference to a dynamically added provider end point of given service.
            </summary>
            <param name="theService">A service instance which hosts the provider</param>
            <param name="providerId">The identifier of the provider as returned by IServiceProvider.Id property</param>
            <returns>The found provider (null in case there is no provider with given identifier)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetProviders(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Returns an enumerable collection of all providers of given service.
            </summary>
            <param name="theService">A service instance which hosts the providers</param>
            <returns>All static and dynamic providers for iteration</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AddConsumer(Vector.CANoe.Runtime.IServiceCO,System.String,System.Boolean,Vector.CANoe.Runtime.IServiceConsumer@)">
            <summary>
            Dynamically adds a consumer end point to a service.
            </summary>
            <param name="theService">A service instance to which a consumer shall be added</param>
            <param name="name">The name of the new consumer</param>
            <param name="isSimulated">Whether the new consumer should be simulated by the tool</param>
            <param name="consumer">Returns a reference to the new consumer (null in case of failure)</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
            <remarks>The binding properties of the new end point are set to defaults.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AddConsumer(Vector.CANoe.Runtime.IServiceCO,Vector.CANoe.Runtime.IAddressHandle,Vector.CANoe.Runtime.IServiceConsumer@)">
            <summary>
            Dynamically adds a consumer end point with a known address to a service.
            </summary>
            <param name="theService">A service instance to which a consumer shall be added</param>
            <param name="address">The (binding specific) address information of the new consumer</param>
            <param name="consumer">Returns a reference to the new consumer (null in case of failure)</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
            <remarks>This function is typically used in service discovery from a OnConsumerDiscovered handler.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.RemoveConsumer(Vector.CANoe.Runtime.IServiceCO,Vector.CANoe.Runtime.IServiceConsumer)">
            <summary>
            Dynamically removes a consumer end point from a service. The given consumer must previously have been added
            to the service by one of the AddConsumer functions.
            </summary>
            <param name="theService">A service instance from which a consumer shall be removed</param>
            <param name="consumer">Identifies the consumer to be removed</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetConsumer(Vector.CANoe.Runtime.IServiceCO,System.Int64)">
            <summary>
            Returns a reference to a dynamically added consumer end point of given service.
            </summary>
            <param name="theService">A service instance which hosts the consumer</param>
            <param name="consumerId">The identifier of the consumer as returned by IServiceConsumer.Id property</param>
            <returns>The found consumer (null in case there is no consumer with given identifier)</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetConsumers(Vector.CANoe.Runtime.IServiceCO)">
            <summary>
            Returns an enumerable collection of all consumers of given service.
            </summary>
            <param name="theService">A service instance which hosts the consumers</param>
            <returns>All static and dynamic consumers for iteration</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.DiscoverProviders(Vector.CANoe.Runtime.IServiceConsumer)">
            <summary>
            Triggers logical service discovery for the given consumer end point of a service.
            </summary>
            <param name="consumer">The consumer for which to discover providers</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetAddress(Vector.CANoe.Runtime.IServiceConsumerBase,Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Associates given consumer end point with given (binding specific) address.
            </summary>
            <param name="consumer">The consumer to be associated with given address</param>
            <param name="address">The address to associate with given consumer</param>
            <remarks>This function is used by consumer side service discovery models to associate a
            consumer with an address (as opposed to a provider model associating a known consumer with
            an address).</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetAddress(Vector.CANoe.Runtime.IServiceConsumerBase,Vector.CANoe.Runtime.IAddressHandle,Vector.CANoe.Runtime.IServiceProviderBase)">
            <summary>
            Associates given consumer end point with given (binding specific) address at a simulated provider.
            </summary>
            <param name="consumer">The consumer to be associated with given address</param>
            <param name="address">The address to associate with given consumer</param>
            <param name="provider">The provider which will be connectable to the given consumer</param>
            <remarks>This function is used by provider side service discovery models to associate a
            discovered consumer with an address within the consumer address table of the
            provider model (as opposed to a consumer side model storing the address of its own consumer).</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetAddress(Vector.CANoe.Runtime.IServiceConsumerBase)">
            <summary>
            Returns the binding specific address handle currently associated with given consumer.
            </summary>
            <param name="consumer">The consumer for which to get the associated address</param>
            <returns>An address handle which can be used in binding specific API</returns>
            <remarks>If the consumer is not associated with a valid address, the method returns null.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AnnounceProvider(Vector.CANoe.Runtime.IServiceProvider)">
            <summary>
            Initiates unspecific announcement for given provider.
            </summary>
            <param name="provider">The provider for which to announce the service</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.UnannounceProvider(Vector.CANoe.Runtime.IServiceProvider)">
            <summary>
            Stops unspecific announcement for given provider and makes the provider
            switch into state Unavailable.
            </summary>
            <param name="provider">The provider for which to unannounce the service</param>
            <returns>An error code (0 in case of success)</returns>
            <remarks>Error codes may be binding specific, refer to the user documentation for more information.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetAddress(Vector.CANoe.Runtime.IServiceProviderBase,Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Associates given provider with given (binding specific) address.
            </summary>
            <param name="provider">The provider to be associated with given address</param>
            <param name="address">The address to associate with given provider</param>
            <remarks>This function is used by provider side service discovery models to associate a
            provider with an address (as opposed to a consumer model associating a known server with
            an address).</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetAddress(Vector.CANoe.Runtime.IServiceProviderBase,Vector.CANoe.Runtime.IAddressHandle,Vector.CANoe.Runtime.IServiceConsumerBase)">
            <summary>
            Associates given provider with given (binding specific) address at a simulated consumer.
            </summary>
            <param name="provider">The provider to be associated with given address</param>
            <param name="address">The address to associate with given client side end point</param>
            <param name="consumer">The consumer which will be connectable to the given provider</param>
            <remarks>This function is used by consumer side service discovery models to associate a
            discovered provider with an address within the provider address table of the
            consumer model (as opposed to a provider model storing the address of its own end point).</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.GetAddress(Vector.CANoe.Runtime.IServiceProviderBase)">
            <summary>
            Returns the binding specific address handle currently associated with given provider.
            </summary>
            <param name="provider">The provider for which to get the associated address</param>
            <returns>An address handle which can be used in binding specific API</returns>
            <remarks>If the provider is not associated with a valid address, the method returns null.</remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.ServiceDiscovery.ConnectionEstablishedCallback">
            <summary>
            Continuation delegate for ConnectAsync function, which is called in case of successful connection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ServiceDiscovery.ConnectionFailedCallback">
            <summary>
            Continuation delegate for ConnectAsync function, which is called in case of connection failure.
            </summary>
            <param name="error">A human readable string describing the reason for connection failure.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.ConnectAsync(Vector.CANoe.Runtime.IConsumedServiceShortcut,Vector.CANoe.Runtime.ServiceDiscovery.ConnectionEstablishedCallback,Vector.CANoe.Runtime.ServiceDiscovery.ConnectionFailedCallback)">
            <summary>
            Tries to establish a connection from a consumer side port.
            </summary>
            <param name="consumer">The consumer side port to connect</param>
            <param name="success">Continuation callback for successful connection (may be null)</param>
            <param name="failure">Continuation callback for connection failure (may be null)</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.Disconnect(Vector.CANoe.Runtime.IConsumedServiceShortcut)">
            <summary>
            Tears down a consumer side port connection.
            </summary>
            <param name="consumer">The consumer side port to disconnect</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.ConnectAsync(Vector.CANoe.Runtime.IProvidedServiceShortcut,Vector.CANoe.Runtime.ServiceDiscovery.ConnectionEstablishedCallback,Vector.CANoe.Runtime.ServiceDiscovery.ConnectionFailedCallback)">
            <summary>
            Tries to establish a connection from a provider side port.
            </summary>
            <param name="provider">The provider side port to connect</param>
            <param name="success">Continuation callback for successful connection (may be null)</param>
            <param name="failure">Continuation callback for connection failure (may be null)</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.Disconnect(Vector.CANoe.Runtime.IProvidedServiceShortcut)">
            <summary>
            Tears down a provider side port connection.
            </summary>
            <param name="provider">The provider side port to disconnect</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.AnnounceProvider(Vector.CANoe.Runtime.IProvidedServiceShortcut)">
            <summary>
            Responds with a service announcement for a specific request from a consumer.
            </summary>
            <param name="provider">The provider side port to announce</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetSubscriptionStateIsolated(Vector.CANoe.Runtime.IServiceEventPort,System.Boolean)">
            <summary>
            Manipulates the given event's state without actually invoking subscription.
            </summary>
            <param name="theEvent">The event which should change state</param>
            <param name="subscribed">Whether the event should be in state Subscribed (true) or Available (false)</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetSubscriptionStateIsolated(Vector.CANoe.Runtime.IServiceFieldPort,System.Boolean)">
            <summary>
            Manipulates the given field's state without actually invoking subscription.
            </summary>
            <param name="theField">The field which should change state</param>
            <param name="subscribed">Whether the field should be in state Subscribed (true) or Available (false)</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ServiceDiscovery.SetSubscriptionStateIsolated(Vector.CANoe.Runtime.IServicePDUPort,System.Boolean)">
            <summary>
            Manipulates the given PDU's state without actually invoking subscription.
            </summary>
            <param name="thePDU">The PDU which should change state</param>
            <param name="subscribed">Whether the PDU should be in state Subscribed (true) or Available (false)</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnProviderDiscoveredAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a new provider has first announced
            itself globally or to a specific consumer.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IAddressHandle which passes in the (binding specific) address information of the new provider.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnProviderDiscoveredAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the service or consumer for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnConsumerDiscoveredAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a new consumer has first contacted the tool
            or a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IAddressHandle which passes in the (binding specific) address information of the new consumer.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnConsumerDiscoveredAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the service or provider for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnServiceDiscoveryAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has started service discovery.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IServiceConsumer which passes in the consumer initiating service discovery.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnServiceDiscoveryAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the service for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnConnectionRequestedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a provider receives a connection request
            from a consumer.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IServiceConsumer which passes in the consumer trying to connect.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnConnectionRequestedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the server end point for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.IServiceEventGroupPort">
            <summary>
            Base interface for service port event groups providing access to the subscribed end points and the
            event group ID. Instances of implementing classes identify an event group at a specific service port
            and are passed into subscription methods.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IServiceEventGroupPort.Consumer">
            <summary>
            Provides access to the consumer of the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IServiceEventGroupPort.Provider">
            <summary>
            Provides access to the provider of the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IServiceEventGroupPort.Id">
            <summary>
            Returns the event group's numerical identifier.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup">
            <summary>
            Interface implemented by consumer port event groups, used in binding block specific low level API functions.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.Events">
            <summary>
            Lists the events belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.Fields">
            <summary>
            Lists the fields belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.PDUs">
            <summary>
            Lists the PDUs belonging to the event group.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.RequestEventGroup">
            <summary>
            Subscribes to this event group with the provider if not yet done.
            </summary>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible. The passed event group object must be a child of the service consumer
            being addressed.
            <returns>A binding specifc error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.ReleaseEventGroup">
            <summary>
            Unsubscribes from this event group if currently subscribed and removes any subscription request
            from the model state. The passed event group object must be a child of the service consumer
            being addressed.
            </summary>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup.IsEventGroupRequested">
            <summary>
            Checks whether there is a current subscription request pending or the consumer is already subscribed
            for this event group. The passed event group object must be a child of the service consumer
            being addressed.
            </summary>
            <returns>Whether currently subscribed or a request is pending.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.IProvidedEventGroup">
            <summary>
            Interface implemented by server port event groups, used in event group subscription handlers.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IProvidedEventGroup.Events">
            <summary>
            Lists the events belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IProvidedEventGroup.Fields">
            <summary>
            Lists the fields belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IProvidedEventGroup.PDUs">
            <summary>
            Lists the PDUs belonging to the event group.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider">
            <summary>
            Interface implemented by provider event group classes, representing the subscription model
            value entity. The interface is used for registration of subscription handlers.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.Id">
            <summary>
            returns the event group's numerical identifier.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.GetNrOfSubscribedConsumers">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider event group.
            </summary>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.GetSubscribedConsumers">
            <summary>
            Lists the currently subscribed consumers of a provider event group.
            </summary>
            <returns>Enumeration of consumers</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.Events">
            <summary>
            Lists the events belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.Fields">
            <summary>
            Lists the fields belonging to the event group.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SomeIP.IEventGroupProvider.PDUs">
            <summary>
            Lists the PDUs belonging to the event group.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery">
            <summary>
            Low level Service Discovery API for SOME/IP Binding.
            </summary>
            <remarks>All low level API functions have a first parameter identifying the object to which
            the functionality shall be applied, i.e. if the first parameter is a service communication
            object, then the function will manipulate or examine that object.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.CreateAddress(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Creates an address for a new service end point.
            </summary>
            <param name="udpEndPoint">Network end point (IP address and port) for UDP communication</param>
            <param name="tcpEndPoint">Network end point (IP address and port) for TCP communication</param>
            <returns>The handle of the newly created address</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.GetBindingId(Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Returns the binding ID associated with a specific end point address.
            </summary>
            <param name="address">The end point address for which to get the binding ID</param>
            <returns>The binding ID</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.GetDisplayName(Vector.CANoe.Runtime.IAddressHandle)">
            <summary>
            Provides a human readable name for given address.
            </summary>
            <param name="address">The end point address for which to get the display name</param>
            <returns>The display name of given address</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.SubscribeEventGroup(Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup)">
            <summary>
            Subscribes the consumer side port for given event group notifications with the associated
            provider. If the consumer is already subscribed for the event group, the call is ignored.
            </summary>
            <param name="eventGroup">The event group to subscribe for (specific to a service consumer port)</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.UnsubscribeEventGroup(Vector.CANoe.Runtime.SomeIP.IConsumedEventGroup)">
            <summary>
            Unsubscribes the consumer side port from given event group notifications with the associated
            provider. If the consumer is not currently subscribed for the event group, the call is ignored.
            </summary>
            <param name="eventGroup">The event group to unsubscribe from (specific to a service consumer port)</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.SubscribeEventGroup(Vector.CANoe.Runtime.IConsumedServiceRef,System.UInt32)">
            <summary>
            Subscribes the consumer side port for given event group notifications with the associated
            provider. If the consumer is already subscribed for the event group, the call is ignored.
            </summary>
            <param name="consumedService">Consumer side service port to check</param>
            <param name="eventGroupId">Identifies the event group to check</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.UnsubscribeEventGroup(Vector.CANoe.Runtime.IConsumedServiceRef,System.UInt32)">
            <summary>
            Unsubscribes the consumer side port from given event group notifications with the associated
            provider. If the consumer is not currently subscribed for the event group, the call is ignored.
            </summary>
            <param name="consumedService">Consumer side service port to check</param>
            <param name="eventGroupId">Identifies the event group to check</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.RequestEventGroup(Vector.CANoe.Runtime.IConsumedServiceRef,System.UInt32)">
            <summary>
            Subscribes selected consumer to specified event group with selected provider if not yet done.
            </summary>
            In case the service is not yet connected the request is remembered and subscription happens
            as soon as possible. The passed event group object must be a child of the service consumer
            being addressed.
            <param name="consumedService">Consumer side service port to connect</param>
            <param name="eventGroupId">Identifies the event group to request</param>
            <returns>A binding specifc error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.ReleaseEventGroup(Vector.CANoe.Runtime.IConsumedServiceRef,System.UInt32)">
            <summary>
            Unsubscribes selected consumer from specified event group if currently subscribed and removes
            any subscription request from the model state.
            </summary>
            <param name="consumedService">Consumer side service port to release</param>
            <param name="eventGroupId">Identifies the event group to release</param>
            <returns>A binding specific error code, 0 in case of success</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.IsEventGroupRequested(Vector.CANoe.Runtime.IConsumedServiceRef,System.UInt32)">
            <summary>
            Checks whether there is a current subscription request pending or the consumer is already subscribed
            for specified event group.
            </summary>
            <param name="consumedService">Consumer side service port to check</param>
            <param name="eventGroupId">Identifies the event group to check</param>
            <returns>Whether currently subscribed or a request is pending.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.GetNrOfSubscribedConsumers(Vector.CANoe.Runtime.IServiceProviderRef,System.UInt32)">
            <summary>
            Provides information about how many consumers are currently subscribed for a provider event group.
            </summary>
            <param name="provider">Provider side service end-point</param>
            <param name="eventGroupId">Identifies the event group for which to get number of consumers</param>
            <returns>Number of subscribed consumers</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.GetSubscribedConsumers(Vector.CANoe.Runtime.IServiceProviderRef,System.UInt32)">
            <summary>
            Lists the currently subscribed consumers of a provider event group.
            </summary>
            <param name="provider">Provider side service end-point</param>
            <param name="eventGroupId">Identifies the event group for which to get subscribed consumers</param>
            <returns>Enumeration of consumers</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.OnEventGroupSubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has subscribed for an
            event group with a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedEventGroup which passes in the provider side port event group identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.OnEventGroupSubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider event group for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.SomeIP.OnEventGroupUnsubscribedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when a consumer has unsubscribed for an
            event group from a specific provider.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method with a single parameter of type
            IProvidedEventGroup which passes in the provider side port event group identifying the consumer
            and provider between which a subscription was created.
            You can mark a method with several instances of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.SomeIP.OnEventGroupUnsubscribedAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the provider event group for which the handler shall be registered.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPNetworkAddress">
            <summary>
            Provides an Internet Protocol (IP) address within a subnet.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPNetworkAddress.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> class with the specified <paramref name="address"/> and specified <paramref name="prefix"/>.
            </summary>
            <param name="address">The IP address.</param>
            <param name="prefix">The prefix as <see cref="T:System.Int32"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="address"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="prefix"/> &lt; 0 or <paramref name="prefix"/> &gt; bit length of the address.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPNetworkAddress.ToString">
            <summary>
            Converts an Internet network address to its standard notation.
            </summary>
            <returns>A string that contains the IP network address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation, with the prefix in CIDR notation.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPNetworkAddress.Equals(System.Object)">
            <summary>
            Determines whether the specified IP network address is equal to the current <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/>.
            </summary>
            <param name="comparand">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IPNetworkAddress.GetHashCode">
            <summary>
            Returns a hash value for an IP network address.
            </summary>
            <returns>An integer hash value.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPNetworkAddress.Address">
            <summary>
            The IP address of this instance.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IPNetworkAddress.Prefix">
            <summary>
            The number of bits that make up the <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/>' subnet.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.INetwork">
            <summary>
            Interface for Networks. Allows for comparison of equality.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.INetwork.Name">
            <summary>
            The name of this network.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.INetwork.Channel">
            <summary>
            The application channel number of this network.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.INetwork.BusType">
            <summary>
            The <see cref="T:Vector.CANoe.Runtime.BusType"/> of this network.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Network`1">
            <summary>
            Generic base class for network types.
            </summary>
            <typeparam name="T">The network type.</typeparam>
        </member>
        <member name="M:Vector.CANoe.Runtime.Network`1.#ctor(System.String)">
            <summary>
            Internal constructor. You should never use this type.
            </summary>
            <param name="name">Internal.</param>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.Network`1.BusType">
            <summary>
            The <see cref="T:Vector.CANoe.Runtime.BusType"/> of this network.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Network`1.BusTypeAsInt">
            <summary>
            Internal property. You should never use this type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.Runtime.Network`1.Equals(Vector.CANoe.Runtime.INetwork)">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANNetwork">
            <summary>
            Class representing a CAN network.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANNetwork.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANNetwork.CreateNewInstance(System.String)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="name">Internal method. You should never use this type.</param>
            <returns>Internal method. You should never use this type.</returns>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANNetwork.BusType">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.LINNetwork">
            <summary>
            Class representing a LIN network.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.LINNetwork.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.LINNetwork.CreateNewInstance(System.String)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="name">Internal method. You should never use this type.</param>
            <returns>Internal method. You should never use this type.</returns>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.LINNetwork.BusType">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.FlexRayNetwork">
            <summary>
            Class representing a FlexRay network.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.FlexRayNetwork.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.FlexRayNetwork.CreateNewInstance(System.String)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="name">Internal method. You should never use this type.</param>
            <returns>Internal method. You should never use this type.</returns>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.FlexRayNetwork.BusType">
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetNetwork">
            <summary>
            Class representing an Ethernet network.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetNetwork.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetNetwork.CreateNewInstance(System.String)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="name">Internal method. You should never use this type.</param>
            <returns>Internal method. You should never use this type.</returns>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetNetwork.BusType">
            <inheritdoc/>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetNetwork.IsPortbased">
            <summary>
            Indicates whether the <see cref="T:Vector.CANoe.Runtime.EthernetNetwork"/> is using ports, i.e., is a switched network.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetNetwork.HardwarePorts">
            <summary>
            Returns a collection of all <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>s within this <see cref="T:Vector.CANoe.Runtime.EthernetNetwork"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.NetworkAccessor`2">
            <summary>
            Base class for static access to networks
            </summary>
            <typeparam name="N">The generated network accessor type.</typeparam>
            <typeparam name="T">The network type.</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.NetworkAccessor`2.BusType">
            <summary>
            Returns the bus type of the qualified network type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPortAccessor`2">
            <summary>
            Base class for static access to ethernet ports
            </summary>
            <typeparam name="P">The generated ethernet port accessor type.</typeparam>
            <typeparam name="N">The generated ethernet network accessor type.</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPortAccessor`2.Instance">
            <summary>
            Returns the instance of the qualified <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Networks">
            <summary>
            Provides access to the networks of all bus types in the CANoe configuration.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Networks.#ctor">
            <summary>
            Protected constructor. You should use the static members <see cref="P:Vector.CANoe.Runtime.Networks.AllNetworks"/>, <see cref="M:Vector.CANoe.Runtime.Networks.LookupNetwork(System.String)"/> or <see cref="M:Vector.CANoe.Runtime.Networks.GetNetwork(Vector.CANoe.Runtime.BusType,System.Byte)"/> to access networks.
            </summary>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.Networks.AllNetworks">
            <summary>
            Returns a collection of all networks in the current CANoe configuration.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of all current networks.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Networks.LookupNetwork(System.String)">
            <summary>
            Returns a <see cref="T:Vector.CANoe.Runtime.INetwork"/> representing the network which was qualified by <paramref name="name"/>.
            </summary>
            <param name="name">Name of the network.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.INetwork"/>, or null if it was not found.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.Networks.GetNetwork(Vector.CANoe.Runtime.BusType,System.Byte)">
            <summary>
            Returns the <see cref="T:Vector.CANoe.Runtime.INetwork"/> which is assigned to <paramref name="channel"/> of the specified <paramref name="busType"/>.
            </summary>
            <param name="busType">The <see cref="T:Vector.CANoe.Runtime.BusType"/> of the network</param>
            <param name="channel">The application channel number.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.INetwork"/>, or null if it was not found.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.NetworkStack">
            <summary>
            This class provides access to the TCP/IP stack of the current node.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.NetworkStack.Instance">
            <summary>
            The current node's TCP/IP stack.
            </summary>
            <returns>The network stack instance of the current node.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.NetworkStack.IPv4DefaultGateway">
            <summary>
            The default IPv4 gateway address associated with the current node.
            </summary>
            <returns>The <see cref="T:System.Net.IPAddress"/> of the default gateway for IPv4.</returns>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            The function sets the default gateway address.
            There can only be one default gateway per node. An old default gateway address will be overwritten. 
            The default gateway has to be in one of the subnets configured in the network stack, otherwise the network stack will not be able to find a route to the gateway.
            To remove the gateway, set the address to <see langword="null"/> or 0.0.0.0 (<see cref="F:System.Net.IPAddress.Any"/>).
            <para/>
            The function is dependent on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.NetworkStack.IPv6DefaultGateway">
            <summary>
            The default IPv6 gateway address associated with the current node.
            </summary>
            <returns>The <see cref="T:System.Net.IPAddress"/> of the default gateway for IPv6.</returns>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            The function sets the default gateway address.
            There can only be one default gateway per node. An old default gateway address will be overwritten. 
            The default gateway has to be in one of the subnets configured in the network stack, otherwise the network stack will not be able to find a route to the gateway.
            To remove the gateway, set the address to <see langword="null"/> or :: (<see cref="F:System.Net.IPAddress.IPv6Any"/>).
            <para/>
            The function is dependent on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.AddGatewayRoute(Vector.CANoe.Runtime.IPNetworkAddress,System.Net.IPAddress)">
            <summary>
            Add a static gateway route to the routing table in the TCP/IP stack.
            When such a route is installed the TCP/IP stack will send packets destined to this destination address or network via the given gateway.
            </summary>
            <param name="destinationSubnet">The destination subnet of the route.</param>
            <param name="gateway">The <see cref="T:System.Net.IPAddress"/> of the gateway.</param>
            <exception cref="T:System.ArgumentNullException">One of the arguments <paramref name="destinationSubnet"/> or <paramref name="gateway"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            Depending on the <see cref="P:Vector.CANoe.Runtime.IPNetworkAddress.Prefix"/> of the given <paramref name="destinationSubnet"/>, a route to a single host or to a network is added.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.RemoveGatewayRoute(Vector.CANoe.Runtime.IPNetworkAddress)">
            <summary>
            Delete a gateway route from the routing table in the TCP/IP stack.
            </summary>
            <param name="destinationSubnet">The destination subnet of the route.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="destinationSubnet"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            Depending on the <see cref="P:Vector.CANoe.Runtime.IPNetworkAddress.Prefix"/> of the given <paramref name="destinationSubnet"/>, a route to a single host or to a network is deleted.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.AddHostRoute(System.Net.IPAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Add a static host route to the routing table of an interface in the TCP/IP stack.
            When such a route is installed the TCP/IP stack will no longer perform a ARP request or neighbor solicitation when a message is sent to this destination.
            </summary>
            <param name="hostAddress">The destination <see cref="T:System.Net.IPAddress"/> of the route.</param>
            <param name="hostMac">The MAC address of the host route.</param>
            <exception cref="T:System.ArgumentNullException">One of the arguments <paramref name="hostAddress"/> or <paramref name="hostMac"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            It is necessary that an interface or network route already exists so the dedicated interface for this route can be found.
            When there is no interface route found it is possible to add one with the function <see cref="M:Vector.CANoe.Runtime.NetworkStack.AddInterfaceRoute(Vector.CANoe.Runtime.IPNetworkAddress,System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.RemoveHostRoute(System.Net.IPAddress)">
            <summary>
            Delete a host route from the routing table of an interface in the TCP/IP stack.
            </summary>
            <param name="hostAddress">The destination <see cref="T:System.Net.IPAddress"/> of the route.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="hostAddress"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            It is necessary that an interface or network route already exists so the dedicated interface for this route can be found.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.AddInterfaceRoute(Vector.CANoe.Runtime.IPNetworkAddress,System.Int32)">
            <summary>
            Add a static route to an interface to the routing table in the TCP/IP stack.
            When such a route is installed the TCP/IP stack will send packets destined to this destination on the given interface.
            </summary>
            <param name="destinationSubnet">The destination subnet of the route.</param>
            <param name="interfaceIndex">The index of the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> to use for this route.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="destinationSubnet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The argument <paramref name="interfaceIndex"/> is out of range.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            Depending on the <see cref="P:Vector.CANoe.Runtime.IPNetworkAddress.Prefix"/> of the given <paramref name="destinationSubnet"/> a route to a single host or to a network is added.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.RemoveInterfaceRoute(Vector.CANoe.Runtime.IPNetworkAddress)">
            <summary>
            Delete a route to an interface from the routing table in the TCP/IP stack.
            </summary>
            <param name="destinationSubnet">The destination subnet of the route.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="destinationSubnet"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
        </member>
        <member name="P:Vector.CANoe.Runtime.NetworkStack.Parameters">
            <summary>
            Provides access to the stack parameters of this <see cref="T:Vector.CANoe.Runtime.NetworkStack"/>.
            </summary>
            <returns>A <see cref="T:Vector.CANoe.Runtime.NetworkStack.ParameterAccessor"/> for this <see cref="T:Vector.CANoe.Runtime.NetworkStack"/> instance.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.NetworkStack.ParameterAccessor">
            <summary>
            Provides access to the stack parameters of a node stack.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.ParameterAccessor.GetStackParameter(System.String)">
            <summary>Gets the value of the given parameter of the TCP/IP stack of the node.</summary>
            <param name="parameterName">A string representing the path to the parameter which should be retrieved, separated by dots (e.g. "net.inet.tcp.delayed_ack").</param>
            <returns>The value of the parameter.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterName"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            The function depends on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStack.ParameterAccessor.SetStackParameter(System.String,System.Int32)">
            <summary>Sets the value of the given parameter of the TCP/IP stack of the node.</summary>
            <param name="parameterName">A string representing the path to the parameter which should be set (e.g. "net.inet.tcp.delayed_ack").</param>
            <param name="value">The value that should be set.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterName"/> is <see langword="null"/>.</exception>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">An error is encountered when attempting to access the TCP/IP stack.</exception>
            <remarks>
            The function depends on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.NetworkStackException">
            <summary>Represents errors that occur when accessing the network stack configuration.</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStackException.CreateExceptionWithInnerWin32Exception(System.String,System.Int32)">
            <summary>
            Creates a new <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/> with an inner <see cref="T:System.ComponentModel.Win32Exception"/>.
            </summary>
            <param name="message">The message of the <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/>.</param>
            <param name="errorCode">The Win23 error code associated with the inner <see cref="T:System.ComponentModel.Win32Exception"/>.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/> with inner <see cref="T:System.ComponentModel.Win32Exception"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStackException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/> class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStackException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/> class with a specified error message.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.NetworkStackException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.NetworkStackException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.Script">
            <summary>
            The main communication interface between your .NET class and
            CANoe. Your class must derive from this class. Each assembly
            should contain exactly one class derived from this class, from 
            MeasurementScript or from TestScript (in Vector.CANoe.TFS).
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MeasurementScript">
            <summary>
            If you'd like to be notified of measurement events, derive from this 
            class instead of from Script.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MeasurementScript.Initialize">
            <summary>
            Called before measurement start to perform necessary initializations,
            e.g. to create objects. During measurement, no additional objects 
            should be created to prevent garbage collection runs.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MeasurementScript.Start">
            <summary>
            Notification that the measurement starts.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MeasurementScript.Stop">
            <summary>
            Notification that the measurement ends.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MeasurementScript.Shutdown">
            <summary>
            Cleanup after the measurement. Complement to Initialize. This is not
            a "Dispose" method; your object should still be usable afterwards.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ExecutionUnit">
            <summary>
            Provides information about the current Execution Unit.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ExecutionUnit.Title">
            <summary>
            Retrieves the title of the current Execution Unit.
            </summary>
            <returns>Title of the current Execution Unit.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.ExecutionUnit.Name">
            <summary>
            Retrieves the name of the current Execution Unit.
            </summary>
            <returns>Name of the current Execution Unit.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRuntimeValue">
            <summary>
            Tagging interface which shows that a certain class represents a value in 
            the CANoe runtime. Runtime values are signals, environment variables and
            system variables.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITypedRuntimeValue`1">
            <summary>
            Typed interface for a value in the CANoe runtime. Runtime values are signals,
            environment variables and system variables. This interface allows typesafe
            generic access to the value. It is implemented by the concrete generated
            classes.
            </summary>
            <typeparam name="T">type of the value</typeparam>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="TypedRuntimeValue" />
            </example>
        </member>
        <member name="P:Vector.CANoe.Runtime.ITypedRuntimeValue`1.TypedValue">
            <summary>
            The concrete value in the CANoe runtime.
            </summary>
            <remarks>
            For signals, the value is the physical value and T is double. For 
            environment variables, T is Double, Int64, String or Byte[]. For 
            system variables, T is Double, Int32, UInt32, Int64, UInt64, String, Int32[] or Double[].
            <br />
            Note that a copy of the value
            is returned by the getter, which is important in the case that T is
            an array type.
            </remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueState">
            <summary>
            Indicates whether a value has been measured.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueState.OfflineValue">
            <summary>
            The value still has its default value or value state has been reset.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.ValueState.MeasurementValue">
            <summary>
            The value was measured from the network.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IValueEntityStatus">
            <summary>
            Interface providing status information for a value entity.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityStatus.UpdateTimeNS">
            <summary>
            The timestamp when the value entity was last updated.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityStatus.ChangeTimeNS">
            <summary>
            The timestamp when the value entity was last changed.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityStatus.UpdateCount">
            <summary>
            The number of updates since measurement start or last call to ResetValueState().
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityStatus.ChangeCount">
            <summary>
            The number of changes since measurement start or last call to ResetValueState().
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IValueEntityStatus.ClearUpdateFlag">
            <summary>
            Clears the update flag of the value entity which can be used to wait for updates.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IValueEntityStatus.ClearChangeFlag">
            <summary>
            Clears the change flag of the value entity which can be used to wait for changes.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityStatus.ValueState">
            <summary>
            Whether the value entity has an offline value or was already measured.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IValueEntityBase">
            <summary>
            Tagging interface implemented by all value entities and complex value entity
            members, providing individual status information and allowing to wait for
            values and status changes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IValueEntityContainer">
            <summary>
            Interface implemented by system context classes of signal, PDU, event and field COs.
            Allows to pass their instance into Vector.CANoe.Runtime.Runtime.GetStatus() method
            and waiting for value entity criteria.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IValueEntityContainer.ValueEntity">
            <summary>
            Provides access to the underlying value entity of the system context.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IValueEntity">
            <summary>
            Base interface for value entities represented in the CANoe runtime. Value entities
            are runtime values associated with the access ports of communication objects and
            thus provide features for tracking updates and changes of the value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IValueEntity.ResetValueState">
            <summary>
            Resets the state of the value entity to OfflineValue, resetting as well
            the change counters, timestamps and flags. The reset applies to the value entity as
            a whole.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITypedValueEntityReadOnly`1">
            <summary>
            Typed interface for a value entity in the CANoe runtime. The interface provides type
            safe read-only access to the value. It is implemented by the concrete generated classes.
            </summary>
            <typeparam name="T">type of the implementation value</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.ITypedValueEntityReadOnly`1.Value">
            <summary>
            The concrete implementation value in the CANoe runtime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IScalarValueEntityReadOnly`2">
            <summary>
            Typed interface for a scalar value entity in the CANoe runtime. The interface provides
            type safe read-only access to the value. It is implemented by the concrete generated classes.
            </summary>
            <typeparam name="T">type of the implementation value</typeparam>
            <typeparam name="P">type of the physical value</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.IScalarValueEntityReadOnly`2.ImplValue">
            <summary>
            The concrete implementation value in the CANoe runtime.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IScalarValueEntityReadOnly`2.PhysValue">
            <summary>
            The concrete physical value in the CANoe runtime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITypedValueEntityReadWrite`1">
            <summary>
            Typed interface for a value entity in the CANoe runtime. The interface provides type safe
            read/write access to the value. It is implemented by the concrete generated classes.
            </summary>
            <typeparam name="T">type of the implementation value</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.ITypedValueEntityReadWrite`1.Value">
            <summary>
            The concrete implementation value in the CANoe runtime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IScalarValueEntityReadWrite`2">
            <summary>
            Typed interface for a scalar value entity in the CANoe runtime. The interface provides type
            safe read/write access to the value. It is implemented by the concrete generated classes.
            </summary>
            <typeparam name="T">type of the implementation value</typeparam>
            <typeparam name="P">type of the physical value</typeparam>
        </member>
        <member name="P:Vector.CANoe.Runtime.IScalarValueEntityReadWrite`2.ImplValue">
            <summary>
            The concrete implementation value in the CANoe runtime.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IScalarValueEntityReadWrite`2.PhysValue">
            <summary>
            The concrete physical value in the CANoe runtime.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBinaryAccessibleReadOnly">
            <summary>
            Interface for value entities providing byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBinaryAccessibleReadOnly.GetBytes">
            <summary>
            Returns the current value as a byte array.
            </summary>
            <returns>Value entity value as bytes</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IBinaryAccessibleReadWrite">
            <summary>
            Interface for value entities providing byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IBinaryAccessibleReadWrite.SetBytes(System.Byte[])">
            <summary>
            Sets the value from given byte array.
            </summary>
            <param name="bytes">New value entity value as bytes</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRawBinaryAccessibleReadOnly">
            <summary>
            Interface for value entities providing raw byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRawBinaryAccessibleReadOnly.GetRawBytes">
            <summary>
            Returns the current raw value as a byte array.
            </summary>
            <returns>Value entity raw value as bytes</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRawBinaryAccessibleReadWrite">
            <summary>
            Interface for value entities providing raw byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRawBinaryAccessibleReadWrite.SetRawBytes(System.Byte[])">
            <summary>
            Sets the value from given raw byte array.
            </summary>
            <param name="bytes">New value entity raw value as bytes</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IImplBinaryAccessibleReadOnly">
            <summary>
            Interface for value entities providing impl byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IImplBinaryAccessibleReadOnly.GetImplBytes">
            <summary>
            Returns the current impl value as a byte array.
            </summary>
            <returns>Value entity impl value as bytes</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IImplBinaryAccessibleReadWrite">
            <summary>
            Interface for value entities providing impl byte array access (if the data type has binary layout).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IImplBinaryAccessibleReadWrite.SetImplBytes(System.Byte[])">
            <summary>
            Sets the value from given impl byte array.
            </summary>
            <param name="bytes">New value entity impl value as bytes</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Signal">
            <summary>
            Base class for bus signal objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Signal.#ctor(System.String,System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="signalID">ID of the signal.</param>
            <param name="name">Name of the signal.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.Signal.#ctor">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.Signal.Timestamp">
            <summary>
            Gets the timestamp of the last update.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">
            <summary>
            Exception which is thrown if a dynamic runtime variable is not found.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicTypeNotFoundException.#ctor(Vector.CANoe.Runtime.Internal.DBTypeNotFoundException)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="inner">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicTypeNotFoundException.#ctor(Vector.CANoe.Runtime.Internal.DBTypeNotFoundException,System.String)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="inner">For internal use only.</param>
            <param name="typeNameString">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicTypeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. For internal use only.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicTypeNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization support.
            </summary>
            <param name="info">For internal use only.</param>
            <param name="context">For internal use only.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicTypeNotFoundException.MissingTypeName">
            <summary>
            The name of the type which was not found.
            </summary>
            <returns>the name</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.BusType">
            <summary>
            Type of a bus in CANoe.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BusType.CAN">
            <summary>
            CAN bus
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BusType.LIN">
            <summary>
            LIN bus
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BusType.FlexRay">
            <summary>
            FlexRay bus
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.BusType.Ethernet">
            <summary>
            Ethernet network
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicSignal">
            <summary>
            Allows access to signals dynamically identified by their names.
            </summary>
            <remarks>Be sure to dispose the object when it is not needed any more.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.#ctor(Vector.CANoe.Runtime.Signal)">
            <summary>
            Initializes the signal.
            This initializer uses an existing Signal to work on.
            </summary>
            <param name="signal">Signal</param>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="DynamicSignal3" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.#ctor(System.String)">
            <summary>
            Initializes the signal. See remarks for the syntax of the name. The signal must be defined in 
            a database attached to CAN 1.
            </summary>
            <param name="fullyQualifiedSignalName">Fully qualified name of the signal.</param>
            <exception cref="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">Thrown if the signal is not found.</exception>
            <remarks>The signal name must include database name (as seen in the Simulation Setup), name of the
            sending node, name of the message and signal name. The parts must be separated by '::'.</remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="DynamicSignal1" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes the signal by its path components using a network based addressing.</summary>
            <param name="networkName">Network name (as seen in Simulation Setup)</param>
            <param name="sendNode">Sending node</param>
            <param name="messageName">Frame or PDU containing the signal</param>
            <param name="signalName">Signal name</param>
            <exception cref="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">Thrown if the signal is not found.</exception>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="DynamicSignal4" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.#ctor(System.String,Vector.CANoe.Runtime.BusType,System.Int16)">
            <summary>
            Initializes the signal. See remarks for the syntax of the name. The signal must be defined in 
            a database attached to the given bus.
            </summary>
            <param name="fullyQualifiedSignalName">Fully qualified name of the signal.</param>
            <param name="busType">Type of the bus of the signal.</param>
            <param name="channel">Channel of the bus of the signal.</param>
            <exception cref="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">Thrown if the signal is not found.</exception>
            <remarks>The signal name must include database name (as seen in the Simulation Setup), name of the
            sending node, name of the message and signal name. The parts must be separated by '::'.</remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="DynamicSignal2" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.Dispose">
            <summary>
            Disposes the signal, freeing resources.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSignal.Value">
            <summary>
            Gets or sets the physical value of the signal.
            </summary>
            <remarks>There is no possibility yet to directly access the raw value of dynamic signals.</remarks>
        </member>
        <member name="E:Vector.CANoe.Runtime.DynamicSignal.ValueChanged">
            <summary>
            Event which is triggered when the signal value changes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.RegisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.UnregisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.ExtractSimpleSignalName(System.String)">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.GetIdentifier(System.String,Vector.CANoe.Runtime.BusType,System.Int16)">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.GetIdentifier(System.String,System.String,System.String,System.String)">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSignal.SignalValueChanged(Vector.CANoe.Runtime.Internal.ISignal)">
            <summary>
            Called by the framework when the signal value changes. Do not call yourself.
            </summary>
            <param name="signal">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.VariableType">
            <summary>
            Type of an environment variable, system variable, a variant property or parameter.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.Integer">
            <summary>
            Integer (32 / 64 bit signed / unsigned)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.Float">
            <summary>
            Float (IEEE double)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ByteArray">
            <summary>
            Data (only environment variables)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.IntegerArray">
            <summary>
            Integer array (only system variables)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.FloatArray">
            <summary>
            Float array (only system variables)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSignal">
            <summary>
            A DynamicSignal (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamEnvvarInt">
            <summary>
            A DynamicEnvironmentVariable of type int32 (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamEnvvarFloat">
            <summary>
            A DynamicEnvironmentVariable of type double (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamEnvvarString">
            <summary>
            A DynamicEnvironmentVariable of type string (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamEnvvarData">
            <summary>
            A DynamicEnvironmentVariable of type data (byte[], only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarInt">
            <summary>
            A DynamicSystemVariable of type int32 (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarLongLong">
            <summary>
            A DynamicSystemVariable of type int64 (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarFloat">
            <summary>
            A DynamicSystemVariable of type double (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarString">
            <summary>
            A DynamicSystemVariable of type string (only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarData">
            <summary>
            A DynamicSystemVariable of type data (byte[], only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarIntArray">
            <summary>
            A DynamicSystemVariable of type int array (int[], only parameters)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VariableType.ParamSysvarFloatArray">
            <summary>
            A DynamicSystemVariable of type float array (double[], only parameters)
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.EnvironmentVariable">
            <summary>
            Base class for environment variable objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EnvironmentVariable.#ctor(System.String,System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="environmentVariableID">ID of the environment variable.</param>
            <param name="name">Name of the environment variable.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.EnvironmentVariable.#ctor">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EnvironmentVariable.VariableType">
            <summary>
            Returns the type of the environment variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EnvironmentVariable.Timestamp">
            <summary>
            Gets the timestamp of the last update.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicEnvironmentVariable">
            <summary>
            Allows access to environment variables dynamically identified by their names.
            </summary>
            <remarks>Be sure to dispose the object when it is not needed any more.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.#ctor(Vector.CANoe.Runtime.EnvironmentVariable)">
            <summary>
            Initializes a dynamic environment variable referencing an environment variable.
            </summary>
            <param name="envVar">EnvironmentVariable</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.#ctor(System.String)">
            <summary>
            Initializes the environment variable object.
            </summary>
            <param name="name">Name of the variable.</param>
            <exception cref="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">Thrown if the environment variable is not found.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.Dispose">
            <summary>
            Disposes the object, freeing resources.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicEnvironmentVariable.Value">
            <summary>
            The value of the environment variable.
            </summary>
            <remarks>This property is valid for Integer and Float variables.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicEnvironmentVariable.StringValue">
            <summary>
            The value of the environment variable.
            </summary>
            <remarks>This property is valid for String variables.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicEnvironmentVariable.ByteArrayValue">
            <summary>
            The value of the environment variable.
            </summary>
            <remarks>This property is valid for Data variables. It returns a copy of the data array 
            in the actual environment variable.</remarks>
        </member>
        <member name="E:Vector.CANoe.Runtime.DynamicEnvironmentVariable.ValueChanged">
            <summary>
            Event which is triggered when the value of the environment variable changes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.RegisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.UnregisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.GetIdentifier(System.String)">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicEnvironmentVariable.SignalValueChanged(Vector.CANoe.Runtime.Internal.ISignal)">
            <summary>
            Called by the framework when the variable value changes. Do not call yourself.
            </summary>
            <param name="signal">For internal use only.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPort">
            <summary>
            Represents an EthernetPort
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.LookupEthernetPort(System.String,System.String)">
            <summary>
            Returns an <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> representing the ethernet port which was qualified by <paramref name="networkName"/> and <paramref name="portName"/>.
            </summary>
            <param name="networkName">Name of the network in which to look for the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.</param>
            <param name="portName">Name of the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> within its network.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>, or null if it was not found.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.#ctor(System.UInt32,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.EthernetPort" /> class.</summary>
            <param name="portNumber">The port number.</param>
            <param name="networkName">Name of the network.</param>
            <param name="portName">Name of the port.</param>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.CreateNewInstance(System.UInt32)">
            <summary>Creates the new EthernetPort instance.</summary>
            <param name="portNumber">The port number.</param>
            <returns>The EthernetPort</returns>
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPort.IsSimActivated">
            <summary>
            Indicates whether a simulation port is currently activated in the simulation setup.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPort.PortId">
            <summary>
            Unique internal ID of the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            A value of -1 indicates an invalid port.
            </summary>
            <remarks>A value of -1 indicates an invalid port.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPort.PortType">
            <summary>
            The type of the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> (from the CANoe viewpoint).
            </summary>
            <remarks>This property represents the CANoe viewpoint of <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>s (simulated- and measurement-ports), not the hardware viewpoint (physical ports and virtual ports).</remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPort.PortFlags">
            <summary>
            Flags defining the type of an <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPort.PortFlags.Valid">
            <summary><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> is valid.</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPort.PortFlags.Active">
            <summary><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> is active.</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPort.PortFlags.MeasPort">
            <summary><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> is measurement port.</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPort.PortFlags.SimPort">
            <summary><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> is simulation port.</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPort.PortFlags.ActiveSimPort">
            <summary><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> is an active simulation port.</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.GetPHYState">
            <summary>
            Get the PHY state of this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            This has only an effect on physical ports in real mode.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <returns>The PHY state of this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.SetPHYState(Vector.CANoe.Runtime.PHYState)">
            <summary>
            Set the PHY state of this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            This has only an effect on physical ports in real mode.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <param name="state">The state to be set.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.GetLinkStatus">
            <summary>
            Gets the Ethernet link status of this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <returns>Link status of this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPort.SetLinkStatus(Vector.CANoe.Runtime.Internal.EthernetStatus.LinkStatus)">
            <summary>
            Set the Ethernet link status to this <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <param name="linkStatus">Status to be set for the link.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.PHYState">
            <summary>
            Describes the state of a PHY.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.PHYState.Invalid">
            <summary>
            The PHY state is unknown or cannot be determined.
            This value will occur for virtual ports or in simulated mode.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.PHYState.Normal">
            <summary>
            PHY is active.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.PHYState.Sleep">
            <summary>
            PHY is in sleep state.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.PHYState.PowerOff">
            <summary>
            PHY is powered off.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.PHYState.SleepRequest">
            <summary>
            Internal. You should never use this value.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SystemVariableBase">
            <summary>
            Base class for system variable objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SystemVariableBase.#ctor(System.String,System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="systemVariableID">ID of the system variable.</param>
            <param name="name">Name of the system variable.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.SystemVariableBase.#ctor">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SystemVariableBase.VariableType">
            <summary>
            Returns the type of the system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SystemVariableBase.IsSigned">
            <summary>
            For integer variables: returns whether the variable type is signed.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SystemVariableBase.Is64BitInteger">
            <summary>
            For integer variables: returns whether the variable type is 64bit 
            (else it is 32bit).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SystemVariableBase.Timestamp">
            <summary>
            Gets the timestamp of the last update.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SystemVariableBase.TimestampOriginal">
            <summary>
            Gets the timestamp of the last update before synchronization may have changed it.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SystemVariableBase.DoBeginStructUpdate">
            <summary>
            Internal helper function called by BeginStructUpdate of generated classes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SystemVariableBase.DoEndStructUpdate">
            <summary>
            Internal helper function called by EndStructUpdate of generated classes.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueEntityBase">
            <summary>
            Base class for value entity objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityBase.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Internal constructor.
            </summary>
            <param name="valueEntityID">ID of the value entity.</param>
            <param name="name">Name of the value entity.</param>
            <param name="registered">Whether to register the value entity class type.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityBase.#ctor(System.UInt64,Vector.CANoe.Runtime.Internal.MemberType,System.String,Vector.CANoe.Runtime.Internal.ValueEntityType,System.String,System.String,System.Boolean)">
            <summary>
            Internal constructor.
            </summary>
            <param name="objectId">Unique ID of the object containing the VE</param>
            <param name="memberType">Type of the member hosting the VE</param>
            <param name="memberName">Name of the member hosting the VE</param>
            <param name="veType">Identifies one of potentially multiple VEs hosted</param>
            <param name="memberPath">Potentially empty path to a complex data type VE member</param>
            <param name="name">Name of the value entity.</param>
            <param name="registered">Whether to register the value entity class type.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ValueEntityBase.Timestamp">
            <summary>
            Gets the timestamp of the last update.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ValueEntityBase.TimestampOriginal">
            <summary>
            Gets the timestamp of the last update before synchronization may have changed it.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityBase.DoBeginStructUpdate">
            <summary>
            Internal helper function called by BeginStructUpdate of generated classes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityBase.DoEndStructUpdate">
            <summary>
            Internal helper function called by EndStructUpdate of generated classes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntityBase.ResetValueState">
            <summary>
            Resets the state of the value entity to OfflineValue, resetting as well
            the change counters, timestamps and flags. The reset applies to the value entity as
            a whole.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.Ports">
            <summary>
            The class provides constant definitions for communication object ports.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.Ports.All">
            <summary>
            Port index constant for accessing collection port of a point to point communication.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.EndPoints">
            <summary>
            The class provides constant definitions for communication object end-points.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EndPoints.InvalidEndPoint">
            <summary>
            End-point index identifying an invalid selection.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.AnswerMode">
            <summary>
            Enumeration for specifying the default answer mode of simulated functions.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AnswerMode.Auto">
            <summary>
            Asynchronous function calls get an automatic response. Output
            parameters, result and delay can be configured.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AnswerMode.Suspended">
            <summary>
            Switches automatic answers off, but still allows handlers to respond
            to asynchronous function calls.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AnswerMode.Discard">
            <summary>
            All asynchronous calls to the function are discarded so that these
            will not get a response (even if a handler is defined).
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AnswerMode.AutoField">
            <summary>
            Field getter/setter only: the getter responds with the latest known
            received value, the setter updates the received value and after any
            configured delay responds with the latest known received value (if
            not void).
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ValueEntitiesInternal.MemberAccessor">
            <summary>
            Internal struct/array/union value entity member accessor for primitive types.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntitiesInternal.MemberAccessor.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Internal constructor.
            </summary>
            <param name="vePath">Value entity access path</param>
            <param name="veName">Value entity name</param>
            <param name="registered">Whether to register the value entity class</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntitiesInternal.MemberAccessor.#ctor(System.UInt64,Vector.CANoe.Runtime.Internal.MemberType,System.String,Vector.CANoe.Runtime.Internal.ValueEntityType,System.String,System.String,System.Boolean)">
            <summary>
            Internal constructor.
            </summary>
            <param name="objectId">Unique ID of the object containing the VE</param>
            <param name="memberType">Type of the member hosting the VE</param>
            <param name="memberName">Name of the member hosting the VE</param>
            <param name="veType">Identifies one of potentially multiple VEs hosted</param>
            <param name="memberPath">Potentially empty path to a complex VE member</param>
            <param name="name">Name of the value entity.</param>
            <param name="registered">Whether to register the value entity class type.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ValueEntitiesInternal.MemberAccessor.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IStructMember">
            <summary>
            Additional interface for a member of a system variable struct.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IStructMember.IsValid">
            <summary>
            Whether the member is valid. In most cases, all members are
            always valid, but for some variables, members can be optional.
            If the struct represents a union, only one member of the struct
            is valid for each value of the struct.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDynamicArray">
            <summary>
            Additional interface for a system variable generic array [member].
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IDynamicArray.CurrentArrayLength">
            <summary>
            The current array length.
            </summary>
            <remarks>A new length can only be set for special generic arrays the struct doesn't
            have a defined binary layout. The new length must be between 0 and the maximum length for the array.
            In case of errors, a InvalidOperationException is thrown.
            </remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.StructMember">
            <summary>
            Internal base class for struct members / generic array elements.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.StructMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.StructMember.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.StructMember.ValueChanged">
            <summary>
            Internal delegate type.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.StructMember.IsValid">
            <summary>
            Implements the IsValid property of IStructMember.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.IntMember">
            <summary>
            Internal base class for members of type int.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.IntMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntMember.PhysValue">
            <summary>
            The physical value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.LongLongMember">
            <summary>
            Internal base class for members of type long long.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.LongLongMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.LongLongMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.LongLongMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.LongLongMember.PhysValue">
            <summary>
            The physical value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.UIntMember">
            <summary>
            Internal base class for members of type unsigned int.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.UIntMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntMember.PhysValue">
            <summary>
            The physical value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.ULongLongMember">
            <summary>
            Internal base class for members of type unsigned long long.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.ULongLongMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.ULongLongMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.ULongLongMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.ULongLongMember.PhysValue">
            <summary>
            The physical value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.DoubleMember">
            <summary>
            Internal base class for members of type double.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.DoubleMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DoubleMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DoubleMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.IntArrayMember">
            <summary>
            Internal base class for members of type int array.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.IntArrayMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntArrayMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntArrayMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.IntArrayMember.PhysValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.UIntArrayMember">
            <summary>
            Internal base class for members of type unsigned int array.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.UIntArrayMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntArrayMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntArrayMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.UIntArrayMember.PhysValue">
            <summary>
            The physical value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.DoubleArrayMember">
            <summary>
            Internal base class for members of type double array.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.DoubleArrayMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DoubleArrayMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DoubleArrayMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.StringMember">
            <summary>
            Internal base class for members of type string.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.StringMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.StringMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.StringMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.DataMember">
            <summary>
            Internal base class for members of type data.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.DataMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DataMember.Value">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.DataMember.TypedValue">
            <summary>
            The value of the member.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.SVStructsInternal.StructOrArrayMember">
            <summary>
            Internal base class for members of type struct or generic array.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.SVStructsInternal.StructOrArrayMember.#ctor(System.String,System.String)">
            <summary>
            Internal constructor, called by generated classes.
            </summary>
            <param name="systemVariableMemberId">Internal, do not use</param>
            <param name="name">Internal, do not use</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.StructOrArrayMember.Value">
            <summary>
            The value of the struct / array as a raw byte sequence.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.SVStructsInternal.StructOrArrayMember.TypedValue">
            <summary>
            The value of the struct / array as a raw byte sequence.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicSystemVariable">
            <summary>
            Allows access to system variables dynamically identified by their names.
            </summary>
            <remarks>Be sure to dispose the object when it is not needed any more.</remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.#ctor(Vector.CANoe.Runtime.SystemVariableBase)">
            <summary>
            Initializes the system variable object using an existing system variable
            </summary>
            <param name="sysVar">SystemVariable</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.#ctor(System.String,System.String)">
            <summary>
            Initializes the system variable object.
            </summary>
            <param name="nameSpace">Full namespace of the variable. Separate namespaces with "::".</param>
            <param name="name">Name of the variable. May include a member designation.</param>
            <exception cref="T:Vector.CANoe.Runtime.DynamicTypeNotFoundException">Thrown if the system variable is not found.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.Dispose">
            <summary>
            Disposes the object, freeing resources.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.Value">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for Integer and Float variables.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.StringValue">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for String variables.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.IntegerArrayValue">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for Integer array variables. It returns a copy of the array 
            in the actual system variable.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.DoubleArrayValue">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for Float array variables. It returns a copy of the array 
            in the actual system variable.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.ByteArrayValue">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for Data variables. It returns a copy of the data array 
            in the actual system variable.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.Int64Value">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for 64bit signed Integer variables.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.UInt64Value">
            <summary>
            The value of the system variable.
            </summary>
            <remarks>This property is valid for 64bit unsigned Integer variables.</remarks>
        </member>
        <member name="E:Vector.CANoe.Runtime.DynamicSystemVariable.ValueChanged">
            <summary>
            Event which is triggered when the value of the system variable changes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.RegisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.UnregisterHandler">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.SignalValueChanged(Vector.CANoe.Runtime.Internal.ISignal)">
            <summary>
            Called by the framework when the variable value changes. Do not call yourself.
            </summary>
            <param name="signal">For internal use only.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.BeginStructUpdate">
            <summary>
            Starts an update of a system variable of type struct or generic array.
            </summary>
            <remarks>
            The usage of BeginStructUpdate / EndStructUpdate is only necessary in the 
            measurement setup. Between these two calls, the variable value will not be
            changed; all changes to struct members or array elements will be cached. 
            When EndStructUpdate is called, the variable value will be updated once.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.EndStructUpdate">
            <summary>
            Ends an update of a system variable of type struct or generic array.
            </summary>
            <remarks>
            The usage of BeginStructUpdate / EndStructUpdate is only necessary in the 
            measurement setup. Between these two calls, the variable value will not be
            changed; all changes to struct members or array elements will be cached. 
            When EndStructUpdate is called, the variable value will be updated once.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.PhysValue">
            <summary>
            The physical value of the system variable member.
            </summary>
            <remarks>This property is valid for Integer members with a linear encoding.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.PhysValueArray">
            <summary>
            The physical value of the system variable member.
            </summary>
            <remarks>This property is valid for Integer array members with a linear encoding.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.IsValid">
            <summary>
            Whether the value of a struct member is currently valid.
            </summary>
            <remarks>This property is valid for optional struct members and members of unions. Reading the 
            property for other members or variables returns true. Writing the property for other members or
            variables will throw a InvalidOperationException.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.DynamicSystemVariable.CurrentArrayLength">
            <summary>
            The current array length.
            </summary>
            <remarks>A new length can only be set for special generic arrays the struct doesn't
            have a defined binary layout. The new length must be between 0 and the maximum length for the array.
            In case of errors, a InvalidOperationException is thrown.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicSystemVariable.CreateFromFullPath(System.String)">
            <summary>
            Internal, do not use.
            </summary>
            <param name="fullPath">Full path to system variable</param>
            <returns>DynamicSystemVariable</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IRuntimeValueBuffer">
            <summary>
            Interface for a temporary buffer for a value stored in the CANoe
            Runtime. The buffered value can be stored or retrieved explicitly.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IRuntimeValueBuffer.Value">
            <summary>
            The current buffered value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRuntimeValueBuffer.Store">
            <summary>
            Stores the value in the CANoe runtime -- generates a value change in CANoe,
            e.g. transmits the signal with the new value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IRuntimeValueBuffer.Retrieve">
            <summary>
            Retrieves the current value from the CANoe runtime. After that, it can
            be read through the Value property.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IRuntimeValueBuffer.Name">
            <summary>
            A short descriptive name of the object, e.g. the signal name.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IRuntimeValueBuffer.Handle">
            <summary>
            Internal property. Do not use.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ITypedRuntimeValueBuffer`1">
            <summary>
            As RuntimeValueBuffer, but with a given type of the object which can 
            be different from double.
            </summary>
            <typeparam name="T">Type of the runtime value</typeparam>
            <seealso cref="T:Vector.CANoe.Runtime.IRuntimeValueBuffer"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.ITypedRuntimeValueBuffer`1.Value">
            <summary>
            The current buffered value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITypedRuntimeValueBuffer`1.Store">
            <summary>
            Stores the value in the CANoe runtime -- generates a value change in CANoe,
            e.g. transmits the signal with the new value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ITypedRuntimeValueBuffer`1.Retrieve">
            <summary>
            Retrieves the current value from the CANoe runtime. After that, it can
            be read through the Value property.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ITypedRuntimeValueBuffer`1.Name">
            <summary>
            A short descriptive name of the object, e.g. the signal name.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.RuntimeValueBuffer`1">
            <summary>
            Generic class which implements a buffer for a value in the runtime.
            </summary>
            <remarks>
            Use instances
            of this class to temporarily buffer values for a signal / environment variable / ...,
            which you wish to store in the CANoe runtime at a later point of time.
            In effect, this class just holds a buffered value (of type double) and a 
            connection to the CANoe runtime.
            
            If you wish to use an instance of this class in a generic class or method
            with a type parameter T, the method should be declared with the constraints
            that T is a class implementing IRuntimeValue.
            </remarks>
            <typeparam name="T">The concrete CANoe runtime object class</typeparam>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="RuntimeValueBuffer" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.IRuntimeValue"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeValueBuffer`1.Value">
            <summary>
            The current buffered value.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeValueBuffer`1.Handle">
            <summary>
            Internal property. Do not use.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.RuntimeValueBuffer`1.Store">
            <summary>
            Stores the value in the CANoe runtime -- generates a value change in CANoe,
            e.g. transmits the signal with the new value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.RuntimeValueBuffer`1.Retrieve">
            <summary>
            Retrieves the current value from the CANoe runtime. After that, it can
            be read through the Value property.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeValueBuffer`1.Name">
            <summary>
            A short descriptive name of the object, e.g. the signal name.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.RuntimeValueBuffer`1.#ctor">
            <summary>
            The default constructor sets the value of the buffer initially to the 
            value in the CANoe runtime.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.RuntimeValueBuffer`1.#ctor(System.Double)">
            <summary>
            Constructor setting a value explicitly.
            </summary>
            <param name="value">The value to which the buffer shall be set.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2">
            <summary>
            Generic class which implements a buffer for a value in the runtime.
            </summary>
            <remarks>
            Use instances
            of this class to temporarily buffer values for a signal / environment variable / ...,
            which you wish to store in the CANoe runtime at a later point of time.
            In effect, this class just holds a buffered value (of the specified type) and a 
            connection to the CANoe runtime.
            
            If you wish to use an instance of this class in a generic class or method
            with a type parameter T, the method should be declared with the constraints
            that T is a class implementing ITypedRuntimeValue.
            </remarks>
            <typeparam name="T">The concrete CANoe runtime object class</typeparam>
            <typeparam name="U">The value type of the runtime object</typeparam>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="TypedRuntimeValueBuffer" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.ITypedRuntimeValue`1"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.Value">
            <summary>
            The current buffered value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.Store">
            <summary>
            Stores the value in the CANoe runtime -- generates a value change in CANoe,
            e.g. transmits the signal with the new value.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.Retrieve">
            <summary>
            Retrieves the current value from the CANoe runtime. After that, it can
            be read through the Value property.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.Name">
            <summary>
            A short descriptive name of the object, e.g. the signal name.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.#ctor">
            <summary>
            The default constructor sets the value of the buffer initially to the 
            value in the CANoe runtime.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypedRuntimeValueBuffer`2.#ctor(`1)">
            <summary>
            Constructor setting a value explicitly.
            </summary>
            <param name="value">The value to which the buffer shall be set.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.RuntimeObject`1">
            <summary>
            You may use this class in generic code to retrieve or change runtime values of type double.
            </summary>
            <example>
            A generic method which sets a runtime value to 0:
            <code source="..\Build Documentation\RuntimeExamples.cs" region="ZeroInitialize1" />
            The method can then be called like this:
            <code source="..\Build Documentation\RuntimeExamples.cs" region="ZeroInitialize2" />
            </example>
            <typeparam name="T">The concrete CANoe runtime object class</typeparam>
            <seealso cref="T:Vector.CANoe.Runtime.Runtime"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeObject`1.Value">
            <summary>
            The current value in the CANoe runtime. 
            </summary>
            <remarks>
            Note that setting the value
            usually doesn't change the value directly; in case of signals, e.g., 
            the current value is only changed after a message which contains the
            signal has been transmitted on the bus and received again.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeObject`1.Name">
            <summary>
            The name in the CANoe runtime. 
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.RuntimeObject`1.Instance">
            <summary>
            The property could be used to create DynamicSignal, DynamicEnvironmentVariable or DynamicSystemVariable objects.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ParameterBase">
            <summary>
            Base class for parameter and control variable objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterBase.#ctor(System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="fullyQualifiedName">complete parameter path</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterBase.GetName">
            <summary>Gets the parameter full name.</summary>
            <returns>The name</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ControlVariableBase">
            <summary>
            Base class for control variable objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.#ctor(System.String,Vector.CANoe.Runtime.VariableType)">
            <summary>
            Internal constructor.
            </summary>
            <param name="fullyQualifiedName">complete control variable path</param>
            <param name="varType">Type of the variable.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ControlVariableBase.VariableType">
            <summary>Gets the type of the variable.</summary>
            <value>The type of the variable.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.GetValueString">
            <summary>Gets the value as string.</summary>
            <returns>the parameter value</returns>
            <exception cref="T:System.Exception">is thrown if internal parameter path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.GetValueInt32">
            <summary>Gets the value as Int32.</summary>
            <returns>the parameter value</returns>
            <exception cref="T:System.Exception">is thrown if internal parameter path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.GetValueDouble">
            <summary>Gets the value as double.</summary>
            <returns>the parameter value</returns>
            <exception cref="T:System.Exception">is thrown if internal parameter path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.GetValueByteArray">
            <summary>Gets the value as byte array.</summary>
            <returns>the parameter value</returns>
            <exception cref="T:System.Exception">is thrown if internal parameter path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ControlVariableBase.GetValueTypedByteArray">
            <summary>Gets the value as byte array.</summary>
            <returns>The parameter value byte[]</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ParameterScalarListBase">
            <summary>
            Base class for scalar parameter lists. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterScalarListBase.VariableType">
            <summary>Gets the type of the variable.</summary>
            <value>The type of the variable.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.#ctor(System.String,Vector.CANoe.Runtime.VariableType)">
            <summary>Internal list constructor.</summary>
            <param name="fullyQualifiedName">complete parameter path</param>
            <param name="varType">variable type</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.#ctor(System.String,Vector.CANoe.Runtime.VariableType,System.Int32,System.String)">
            <summary>Internal list item constructor for iteration.</summary>
            <param name="fullyQualifiedName">complete parameter path of struct, not of a struct member</param>
            <param name="varType">Type of the parameter variable.</param>
            <param name="listIndex">Index of the list item.</param>
            <param name="selector">The selector.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterScalarListBase.Selector">
            <summary>Gets or sets the selector for MultiScalarLists.</summary>
            <value>The selector string.</value>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterScalarListBase.Index">
            <summary>Gets the index.</summary>
            <value>The index.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetCount(System.String)">
            <summary>Gets the number of item in the list.</summary>
            <param name="selectorPath">The selector path for a scalar multi list, otherwise empty.</param>
            <returns>number of items</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListString(System.String)">
            <summary>Gets the scalar value as list of strings.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListAsObject(System.String)">
            <summary>Gets the scalar value as list of Objects. Only for ParameterServer Integer types.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListInt32(System.String)">
            <summary>Gets the scalar value as list of Int32.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListInt64(System.String)">
            <summary>Gets the scalar value as list of Int64.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListUInt32(System.String)">
            <summary>Gets the scalar value as list of UInt32.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListUInt64(System.String)">
            <summary>Gets the scalar value as list of UInt64.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListDouble(System.String)">
            <summary>Gets the scalar value as list of double.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListTypedByteArray(System.String)">
            <summary>Gets the scalar value as list of byte array.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListDynamicSignal(System.String)">
            <summary>Gets the scalar value as list of dynamic signals.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListDynamicEnvironmentVariable(System.String)">
            <summary>Gets the scalar value as list of dynamic environment variables.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetScalarValueListDynamicSystemVariable(System.String)">
            <summary>Gets the scalar value as list of dynamic system variables.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>A ReadOnlyCollection containing the values</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueString(System.String,System.Int32)">
            <summary>Gets one parameter list item value as string.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueAsObject(System.String,System.Int32)">
            <summary>Gets one parameter list item value as Object.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value as Object. Conversions to Int32, UInt32, Int64, UInt64 are possible, depending on the parameter type.</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueInt32(System.String,System.Int32)">
            <summary>Gets one parameter list item value as Int32.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueUInt32(System.String,System.Int32)">
            <summary>Gets one parameter list item value as UInt32.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueInt64(System.String,System.Int32)">
            <summary>Gets one parameter list item value as Int64.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueUInt64(System.String,System.Int32)">
            <summary>Gets one parameter list item value as UInt64.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueDouble(System.String,System.Int32)">
            <summary>Gets one parameter list item value as double.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueByteArray(System.String,System.Int32)">
            <summary>Gets one parameter list item value as byte array.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueTypedByteArray(System.String,System.Int32)">
            <summary>Gets one parameter list item value as byte array.</summary>
            <param name="selectorPath">The selector path.</param>
            <param name="listIndex">Index of the list item.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">Internal error: Parameter variable path not found or listIndex invalid.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueDynamicSignal(System.String,System.Int32)">
            <summary>Returns a DynamicSignal based on a parameter path address.\nThrows an exception, if the path is invalid.</summary>
            <param name="selectorPath">Parameter path to signal</param>
            <param name="listIndex">index</param>
            <returns>The DynamicSignal</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueDynamicEnvironmentVariable(System.String,System.Int32)">
            <summary>Returns a DynamicEnvironmentVariable based on a parameter path address.\nThrows an exception, if the path is invalid.</summary>
            <param name="selectorPath">Parameter path to environment variable</param>
            <param name="listIndex">index</param>
            <returns>The DynamicEnvironmentVariable</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarListBase.GetValueDynamicSystemVariable(System.String,System.Int32)">
            <summary>Returns a DynamicSystemVariable based on a parameter path address.\nThrows an exception, if the path is invalid.</summary>
            <param name="selectorPath">Parameter path to system variable</param>
            <param name="listIndex">index</param>
            <returns>The DynamicSystemVariable</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ParameterStructListBase">
            <summary>
            Base class for parameter struct lists (one struct list type)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructListBase.#ctor(System.String)">
            <summary>Internal struct list constructor.</summary>
            <param name="fullyQualifiedName">complete parameter path of the struct</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructListBase.#ctor(System.String,System.Int32)">
            <summary>Internal list iteration constructor.</summary>
            <param name="fullyQualifiedName">complete parameter path of struct, not of a struct member</param>
            <param name="listIndex">Index of the list item.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructListBase.#ctor(System.String,System.Int32,System.String)">
            <summary>Internal list iteration constructor for multi structs.</summary>
            <param name="fullyQualifiedName">complete parameter path of struct, not of a struct member</param>
            <param name="listIndex">Index of the list item.</param>
            <param name="selector">The selector.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterStructListBase.Selector">
            <summary>Gets or sets the selector.</summary>
            <value>The selector path string.</value>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterStructListBase.Index">
            <summary>Gets or sets the index.</summary>
            <value>The index.</value>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterStructListBase.Count">
            <summary>Gets the number of list items.</summary>
            <value>The number of list items.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructListBase.GetCount(System.String,System.String)">
            <summary>Gets the number of list items.</summary>
            <summary>Gets the count.</summary>
            <param name="fullyQualifiedName">full path to parameter.</param>
            <param name="selector">The selector path as string.</param>
            <returns>The number of list items.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.ParameterStructBase">
            <summary>
            Base class for parameter struct objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructBase.#ctor(System.String,System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="fullyQualifiedName">complete parameter path</param>
            <param name="selector">Selector for MultiStructs</param>      
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterStructBase.#ctor(System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="fullyQualifiedName">complete parameter path</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterStructBase.Selector">
            <summary>Selector for MultiStructs.</summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.ParameterScalarBase">
            <summary>
            Base class for parameter variable objects. You will only deal with concrete subclasses
            of this class.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterScalarBase.VariableType">
            <summary>Variable type information.</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.#ctor(System.String,Vector.CANoe.Runtime.VariableType)">
            <summary>Internal constructor.</summary>
            <param name="fullyQualifiedName">complete parameter path</param>
            <param name="varType">variable type</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.#ctor(System.String,Vector.CANoe.Runtime.VariableType,System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="fullyQualifiedName">complete parameter path</param>
            <param name="varType">variable type</param>
            <param name="selector">Selector for MultiStructs</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.ParameterScalarBase.Selector">
            <summary>
            Selector for MultiStructs.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueString">
            <summary>Gets the value as string.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueInt32">
            <summary>Gets the value as Int32.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueUInt32">
            <summary>Gets the value as UInt32.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueInt64">
            <summary>Gets the value as Int64.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueUInt64">
            <summary>Gets the value as UInt64.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueObject">
            <summary>Gets the value as Object.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDouble">
            <summary>Gets the value as double.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueByteArray">
            <summary>Gets the value as byte array.</summary>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicSignal">
            <summary>Returns a DynamicSignal based on a parameter path address.</summary>
            <returns>The DynamicSignal</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicSystemVariable">
            <summary>Returns a DynamicSystemVariable based on a parameter path address.</summary>
            <returns>The DynamicSystemVariable</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicEnvironmentVariable">
            <summary>Returns a DynamicEnvironmentVariable based on a parameter path address.</summary>
            <returns>The DynamicEnvironmentVariable</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueString(System.String)">
            <summary>Gets the value as string.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueObject(System.String)">
            <summary>Gets the value as Object.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value as Object. Conversions to Int32, UInt32, Int64, UInt64 are possible, depending on the parameter type.</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueInt32(System.String)">
            <summary>Gets the value as Int32.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value as Int32.</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueUInt32(System.String)">
            <summary>Gets the value as UInt32.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value as UInt32.</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueInt64(System.String)">
            <summary>Gets the value as Int64.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value as Int64.</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueUInt64(System.String)">
            <summary>Gets the value as UInt64.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value as UInt64.</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDouble(System.String)">
            <summary>Gets the value as double.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueByteArray(System.String)">
            <summary>Gets the value as byte array.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value</returns>
            <exception cref="T:System.Exception">thrown if selector path is invalid</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueTypedByteArray">
            <summary>Gets the value as byte array.</summary>
            <returns>The parameter value byte[]</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueTypedByteArray(System.String)">
            <summary>Gets the value as byte array.</summary>
            <param name="selectorPath">The selector path.</param>
            <returns>The parameter value</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicSignal(System.String)">
            <summary>Returns a DynamicSignal based on a parameter path address.</summary>
            <exception cref="T:System.ArgumentException">thrown if selector path is invalid, or value type incompatible</exception>
            <exception cref="T:System.ArgumentException">thrown if selector path is not well formed</exception>
            <param name="selectorPath">Parameter path to signal</param>
            <returns>The DynamicSignal</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicEnvironmentVariable(System.String)">
            <summary>Returns a DynamicEnvironmentVariable based on a parameter path address.</summary>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
            <exception cref="T:System.ArgumentException">thrown if selector path is not well formed</exception>
            <param name="selectorPath">Parameter path to environment variable</param>
            <returns>The DynamicEnvironmentVariable</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.ParameterScalarBase.GetValueDynamicSystemVariable(System.String)">
            <summary>Returns a DynamicSystemVariable based on a parameter path address.</summary>
            <exception cref="T:System.Exception">thrown if selector path is invalid, or value type incompatible</exception>
            <exception cref="T:System.ArgumentException">thrown if selector path is not well formed</exception>
            <param name="selectorPath">Parameter path to system variable</param>
            <returns>The DynamicSystemVariable</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.Logging">
            <summary>
            Contains functions controlling the CANoe logging blocks in measurement setup.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Logging.SetLoggingFile(System.String,System.String)">
            <summary>
            Defines the target filename for a CANoe logging block.
            </summary>
            <param name="loggingBlock">Name of the logging block in measurement setup</param>
            <param name="filename">Name of the output file of the logging block</param>
            <remarks>See CAPL function <a href="\Help01\CAPLfunctions.chm::/Topics/Other/Functions/CAPLfunctionSetLogFileName.htm">SetLogFileName</a> for usage details</remarks>
            To get the link target: in .chm-help viewer: open target page, right click on window title: select menu entry "Jump to url" 
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitValueAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            a value for the data, event or field member needs to be transmitted
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitValue" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitValueAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which shall be transmitted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitCallAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            a call for the method is made
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take a TransientCallContext parameter of the
            according method type and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ConsumedMethod" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitCallAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitReturnAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            a return for the method is made
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take a TransientCallContext parameter of the
            according method type and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="ProvidedMethod" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitReturnAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitSubscribeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            a subscription for the member is made.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitSubscribe" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitSubscribeAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitUnsubscribeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            an unsubscription for the member is made.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitUnsubscribe" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitUnsubscribeAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnnounceAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            an announce for the member is made.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnnounce" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnnounceAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitUnannounceAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when C# binding is configured and
            an unannounce for the member is made.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitUnannounce" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitUnannounceAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="targetPath">The target path, usually the MemberID, of the 
            member which is targeted</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyValueAttributeBase">
            <summary>
            Base class for the OnTransmitAny... attributes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyValueAttributeBase.#ctor(System.String,Vector.CANoe.Runtime.Internal.CustomBindingOnTransmitAnyValueAttribute.RegistrationType)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The ID of the member which is targeted</param>
            <param name="registrationType">The concrete handler type</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyValueAttributeBase.FindDOOrMember(System.UInt64,System.String)">
            <summary>
            Internal method, do not call yourself.
            </summary>
            <param name="id">for internal use only</param>
            <param name="memberPath">for internal use only</param>
            <returns>for internal use only</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyFunctionAttributeBase">
            <summary>
            Base class for the OnTransmitAnyCall/Return attributes.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyFunctionAttributeBase.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="targetID">The ID of the member which is targeted</param>
            <param name="isCall">The concrete handler type</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyFunctionAttributeBase.FindDOOrMember(System.UInt64,System.String)">
            <summary>
            Internal method, do not call yourself.
            </summary>
            <param name="id">for internal use only</param>
            <param name="memberPath">for internal use only</param>
            <returns>for internal use only</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyValueAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a corresponding 
            value of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyValue" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyValueAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyAnnounceAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the announcement for 
            a corresponding value of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyAnnounce" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyAnnounceAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyUnannounceAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the unannouncement for 
            a corresponding value of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyUnannounce" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyUnannounceAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnySubscribeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the subscription for 
            a corresponding value of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnySubscribe" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnySubscribeAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyUnsubscribeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the unsubscription for 
            a corresponding value of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyUnsubscribe" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyUnsubscribeAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyCallAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the call of 
            a corresponding method of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyCall" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and one parameter of the fitting TransientCallContext 
            and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyCallAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTransmitAnyReturnAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the return of 
            a corresponding method of a distributed object with the specified interface which has C# binding
            configured shall be transmitted.
            </summary>
            <example>
            <code source="..\Build Documentation\BindingExamples.cs" region="OnTransmitAnyReturn" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and one parameter of the fitting TransientCallContext 
            and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTransmitAnyReturnAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the handler shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnChangeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the bus
            signal, environment variable, system variable or value entity given in the parameter 
            changes its value.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnChange" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnChangeAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="valueType">The type of the object for which the value
            change method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnChangeAttribute.#ctor(System.String)">
            <summary>
            Overloaded Constructor for Distributed Object use.
            </summary>
            <param name="targetPath">The target path of the object for which the value
            change method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.TypeHandlerAttribute">
            <summary>
            Base class for the OnAnyUpdate and OnAnyChange attributes
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypeHandlerAttribute.#ctor(Vector.CANoe.Runtime.Internal.TypeHandlerAttribute.TypeHandlerType,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="handlerType">only for subclass use</param>
            <param name="memberID">only for subclass use</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.TypeHandlerAttribute.FindDOOrMember(System.UInt64,System.String)">
            <summary>
            Internal method, do not call yourself.
            </summary>
            <param name="id">for internal use only</param>
            <param name="memberPath">for internal use only</param>
            <returns>for internal use only</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyChangeAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a corresponding 
            value of a distributed object with the specified interface changes.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyChange" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyChangeAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the value
            change method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyUpdateAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever a corresponding 
            value of a distributed object with the specified interface is updated.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnAnyUpdate" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take one parameter
            of the interface type and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyUpdateAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="memberID">The ID of the DO interface member for which the value
            update method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnKeyAttribute">
            <summary>
            Mark a method with this attribute, and it will be called when the specified
            key is pressed.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnKey" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take exactly one parameter of type char
            and have no return value. You can mark a method with several instances of 
            this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnKeyAttribute.#ctor(System.Char)">
            <summary>
            Constructor.
            </summary>
            <param name="key">The key for which the method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnUpdateAttribute">
            <summary>
            Mark a method with this attribute, and it will be called whenever the value
            entity given in the parameter is updated.
            </summary>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameters
            itself and have no return value. You can mark a method with several instances
            of this attribute.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnUpdateAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="valueType">The type of the object for which the value
            change method shall be called.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnUpdateAttribute.#ctor(System.String)">
            <summary>
            Overloaded Constructor for Distributed Object use.
            </summary>
            <param name="targetPath">The target path of the object for which the value
            change method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnTimerAttribute">
            <summary>
            Mark a method with this attribute, and it will be called periodically 
            with the specified interval.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnTimer" />
            </example>
            <remarks>
            The method marked in this way must be a non-static public method, take no parameter
            and have no return value.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnTimerAttribute.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="milliSeconds">Interval with which the method shall be called.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.Runtime">
            <summary>
            Provides access to CANoe runtime facilities.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.RegisterHandlers(System.Object)">
            <summary>
            Registers the handlers of an object. After this call, the handlers 
            of the object are called whenever an appropriate event occurs.
            </summary>
            <param name="handlerParent">Object which contains the handlers.</param>
            <remarks>
            It is not necessary to explicitly register the main object (which
            is derived e.g. from Script or TestModule).
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.UnregisterHandlers(System.Object)">
            <summary>
            Unregisters the handlers of an object again. After this call, the handlers
            of the object are not called anymore.
            </summary>
            <param name="handlerParent">Object which contains the handlers.</param>
            <remarks>
            Should not be called in Finalizer.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.GetValue``2">
            <summary>
            Returns a value in the CANoe runtime. Use in generic code.
            </summary>
            <typeparam name="T">class of the runtime value</typeparam>
            <typeparam name="U">value type of the runtime value</typeparam>
            <returns>a copy of the value in the CANoe runtime</returns>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="GetGenericValue" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.ITypedRuntimeValue`1"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.SetValue``2(``1)">
            <summary>
            Sets a value in the CANoe runtime. Use in generic code.
            </summary>
            <typeparam name="T">class of the runtime value</typeparam>
            <typeparam name="U">value type of the runtime value</typeparam>
            <param name="value">new value</param>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="SetGenericValue" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.ITypedRuntimeValue`1"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.GetUserFilePath(System.String)">
            <summary>
            Returns the path to a user file in a distributed environment.  
            </summary>
            <param name="userFileName">The name of the file (path component is ignored)</param>
            <returns>The complete path to the file</returns>
            <remarks>
            In a distributed environment (CANoe RT or VN8900), if you wish to read a custom file, you must
            configure it in the options dialog of CANoe (Configuration Settings / User Files). Then, it 
            will be transferred to a special directory on the other PC. With this method, you can find the
            path of the transferred file so you can access it through the usual classes in System.IO 
            namespace. The method also works in the non-distributed case. It will then return the predefined 
            absolute file path if you configured the file in the options dialog. Otherwise it will convert 
            a path relative to the configuration directory to an absolute path. 
            </remarks>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the file wasn't found, e.g. if it
            wasn't configured in the dialog.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.RegisterUserFile(System.String,System.Boolean)">
            <summary>
            Registers a user file in a distributed environment during measurement.
            </summary>
            <param name="userFileName">The name and path of the file (absolute or relative to the configuration file)</param>
            <param name="isTemporaryRegistration">Add user file to options dialog after measurement</param>
            <returns>File registered successfully</returns>
            <remarks>
            If you want to read a custom file in a distributed environment (CANoe RT or VN8900) which is not
            configured in the options dialog of CANoe (Configuration Settings / User Files), you can register it during measurement with this method.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown if no file name was entered.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.Runtime.GetStatus(Vector.CANoe.Runtime.IValueEntityBase)">
            <summary>
            Returns the status object for a value entity or its complex data type member.
            </summary>
            <param name="valueEntity">The value entity instance for which to get or manipulate status information</param>
            <returns>The status object associated with given value entity</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.DynamicHandlers">
            <summary>
            Abstract base class for a class which contains handlers, but which is not
            the main class of the module.
            </summary>
            <remarks>
            If you derive a class from this class, its handlers will be automatically
            registered on instantiation. Also, it will be IDisposable, and its handlers
            will be unregistered on disposal. Handlers can be OnChange, OnTimer and
            OnKey.
            </remarks>
            <see cref="T:Vector.CANoe.Runtime.Runtime"/>
            <see cref="T:Vector.CANoe.Runtime.OnChangeAttribute"/>
            <see cref="T:Vector.CANoe.Runtime.OnKeyAttribute"/>
            <see cref="T:Vector.CANoe.Runtime.OnTimerAttribute"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicHandlers.#ctor">
            <summary>
            Constructor. Registers the handlers.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicHandlers.Dispose">
            <summary>
            Calls Dispose(true).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DynamicHandlers.Dispose(System.Boolean)">
            <summary>
            Unregisters the handlers if the parameter is true.
            </summary>
            <param name="disposing">Whether dispose shall unregister the handlers.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.IFrame">
            <summary>
            General interface for frame types of all bus systems.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IFrame.TimeNS">
            <summary>Returns the time stamp of the frame, in nanoseconds as int64.</summary>
            <value>The time NS.</value>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetAdapter">
            <summary>
            Class that represents an Ethernet adapter.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="EthernetAdapter" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.InterfaceIndex">
            <summary>
            The interface index of the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.MacAddress">
            <summary>
            MAC address of the Ethernet adapter.
            </summary>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/> could not be set.</exception>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.IpAddresses">
            <summary>
            IP addresses of the Ethernet adapter.
            </summary>
            <remarks>This property has been deprecated. Please use <see cref="P:Vector.CANoe.Runtime.EthernetAdapter.IpNetworkAddresses"/> instead.</remarks>
            <seealso cref="P:Vector.CANoe.Runtime.EthernetAdapter.IpNetworkAddresses"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.IpNetworkAddresses">
            <summary>
            IP network addresses of the Ethernet adapter.
            </summary>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="EthernetAdapter" />
            </example>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.VlanId">
            <summary>
            VLAN identifier of the Ethernet adapter.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.VlanDefaultPriority">
            <summary>
            The VLAN priority of the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.HardwarePort">
            <summary>
            The hardware port of the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.Description">
            <summary>
            The description of the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.AddAddress(Vector.CANoe.Runtime.IPNetworkAddress)">
            <summary>
            Adds an <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> to the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
            <param name="ipAddress">The IPAddress to be added.</param>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> could not be added.</exception>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.RemoveAddress(Vector.CANoe.Runtime.IPNetworkAddress)">
            <summary>
            Removes an <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
            <param name="ipAddress">The IPAddress to be removed.</param>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> could not be removed.</exception>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.Active">
            <summary>
            Set the <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> of the TCP/IP stack up or down.
            </summary>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the activation status could not be set.</exception>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetAdapter.StackParameters">
            <summary>
            Provides access to the stack parameters of this <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>.
            </summary>
            <returns>A <see cref="T:Vector.CANoe.Runtime.EthernetAdapter.StackParameterAccessor"/> for this <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> instance.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetAdapter.StackParameterAccessor">
            <summary>
            Provides access to the stack parameters of an adapter stack.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.StackParameterAccessor.GetStackParameter(System.String)">
            <summary>
            Gets the value of the given parameter of the TCP/IP Stack.
            </summary>
            <param name="parameterName">The name of the stack parameter.</param>
            <returns>The current value of the requested stack parameter.</returns>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the specified stack parameter could not be retrieved.</exception>
            <remarks>
            The function depends on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.StackParameterAccessor.SetStackParameter(System.String,System.Int32)">
            <summary>
            Sets the value of the given parameter of the TCP/IP Stack.
            </summary>
            <param name="parameterName">The name of the stack parameter.</param>
            <param name="value">The value of the stack parameter to be set.</param>
            <exception cref="T:Vector.CANoe.Runtime.NetworkStackException">Thrown if the specified stack parameter could not be set.</exception>
            <remarks>
            The function depends on the selected stack.
            This functionality cannot be used in connection with the operating system TCP/IP stack.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.GetCurrentAdapters">
            <summary>
            Method to return the Ethernet adapters of the current node.
            </summary> 
            <returns>List of <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>s that the current ECU uses</returns>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="EthernetAdapter" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.GetAdapter(Vector.CANoe.Runtime.EthernetPort)">
            <summary>
            Query an <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> for a specified <see cref="T:Vector.CANoe.Runtime.EthernetPort"/>.
            </summary>
            <param name="port">The ethernet port of the adapter.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> for the specified <paramref name="port"/>, or null if none exists.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetAdapter.GetAdapter(Vector.CANoe.Runtime.EthernetPort,System.UInt16)">
            <summary>
            Query an <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> for a specified <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> and VlanId.
            </summary>
            <param name="port">The ethernet port of the adapter.</param>
            <param name="vlanId">The VlanId of the adapter.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> for the specified <paramref name="port"/> and <paramref name="vlanId"/>, or null if none exists.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacketException">
            <summary>Represents errors that occur when accessing contents of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.EthernetPacketException"/> class.</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.EthernetPacketException"/> class with a specified error message.</summary>
            <inheritdoc/>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketException.#ctor(System.String,System.Exception)">
            <summary> Initializes a new instance of the <see cref="T:Vector.CANoe.Runtime.EthernetPacketException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <inheritdoc/>
        </member>
        <member name="T:Vector.CANoe.Runtime.IPayloadAccessor`1">
            <summary>
            Provides access to the payload of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> in which to access the payload.</typeparam>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacketError">
            <summary>
            Class which represents a corrupt ethernet frame. 
            </summary>
            <remarks>
            nothing to remark yet
            </remarks>
            
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketError.#ctor">
            <summary>
            Default constructor. This constructor is included for internal purposes.
            You should use the other constructors, giving channel, source, destination, ethertype and payload, 
            if you create an instance of EthernetPacket.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketError.#ctor(System.Byte,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="channel">The CANoe channel number.</param>
            <param name="errorCode">The error code of the packet</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetPacketError.TimeNS">
            <summary>Returns the time stamp of the frame, in nanoseconds as int64.</summary>
            <value>The time stamp.</value>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacketError.EthernetRxErrorType">
            <summary>
            EthernetRxErrorType enum
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.EthernetRxErrorType.ethRxErrorInvalidLength">
            <summary>An eth rx error invalid length</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.EthernetRxErrorType.ethRxErrorInvalidCrc">
            <summary>An eth rx error invalid CRC</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.EthernetRxErrorType.ethRxErrorPhyError">
            <summary>An eth rx error phy error</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.EthernetRxErrorType.ethRxErrorCollison">
            <summary>An eth rx error collison</summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacketError.VTxErrorType">
            <summary>
            VTxErrorType enum
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.VTxErrorType.ethTxErrorNoLink">
            <summary>Eth tx error: no link</summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.EthernetPacketError.VTxErrorType.ethTxErrorBypassEnabled">
            <summary>Eth tx error: bypass enabled</summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketError.CreateNewInstance(System.Int64)">
            <summary>
            Internal method. You should never need to call or override this method.
            </summary>
            <param name="time">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketError.Block">
            <summary>
            For nodes in the measurement setup, specifies that the received frame
            shall not be transmitted further through the current measurement 
            setup branch. Thus, the node can be used as a frame filter.
            </summary>
            <remarks>Has no effect on frames which were not received or if called
            on a node which is not in the measurement setup.</remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetStatus">
            <summary>
            Class which represents an Ethernet status notification. 
            </summary>
            <remarks>
            The class furthermore provides static methods in order to get the Ethernet link status
            and bit rate of a specific channel as well as to set the Ethernet link status of a specific (hardware) channel.
            </remarks>
            
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.#ctor">
            <summary>
            Internal constructor. You should never use this type. 
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.EthernetStatus.TimeNS">
            <summary>Returns the time stamp of the status event, in nanoseconds as <see cref="T:System.Int64"/>.</summary>
            <value>The time stamp.</value>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.GetLinkStatus(System.Byte,System.Byte)">
            <summary>
            Get the Ethernet link status of the channel specified as parameter.
            </summary>
            <param name="channel">Channel to get the Ethernet link status from.</param>
            <param name="hardwareChannel">Hardware channel to get the Link Status for</param>
            <returns>Link status of the Ethernet channel specified as parameter.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.GetLinkStatus(Vector.CANoe.Runtime.EthernetPort)">
            <summary>
            Get the Ethernet link status of the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> specified as parameter.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <param name="ethernetPort"><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> to get the Ethernet link status from.</param>
            <returns>Link status of the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> specified as parameter.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.GetLinkBitrate(System.Byte,System.Byte)">
            <summary>
            Get the Ethernet link bit rate of the channel specified as parameter.
            </summary>
            <param name="channel">Channel to get the Ethernet link bit rate from.</param>
            <param name="hardwareChannel">Hardware channel to get the link bit rate for</param>
            <returns>Link bit rate of the Ethernet channel specified as parameter.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.SetLinkStatus(System.Byte,Vector.CANoe.Runtime.Internal.EthernetStatus.LinkStatus,System.Byte)">
            <summary>
            Set the Ethernet link status to the channel specified as parameter.
            </summary>
            <remarks>This function does only work for channels of the Vector Hardware</remarks>
            <param name="channel">Channel to set the Ethernet link status to.</param>
            <param name="linkStatus">Status to be set for the link.</param>
            <param name="hardwareChannel">Hardware channel for which the Link Status shall be set.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetStatus.SetLinkStatus(Vector.CANoe.Runtime.EthernetPort,Vector.CANoe.Runtime.Internal.EthernetStatus.LinkStatus)">
            <summary>
            Set the Ethernet link status to the <see cref="T:Vector.CANoe.Runtime.EthernetPort"/> specified as parameter.
            </summary>
            <remarks>This function does only work for ports of the Vector Hardware</remarks>
            <param name="ethernetPort"><see cref="T:Vector.CANoe.Runtime.EthernetPort"/> to set the Ethernet link status to.</param>
            <param name="linkStatus">Status to be set for the link.</param>
            <returns>true if the operation was successful; false otherwise.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.EthernetPacketGenerator">
            <summary>
            Class to control the Ethernet packet generator of a Vector hardware interface (e.g. VN5610) in real bus mode. 
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketGenerator.Start(Vector.CANoe.Runtime.EthernetPacket,System.UInt32)">
            <summary>
            Start the Ethernet packet generator.
            </summary>
            <param name="packet">Ethernet packet to be sent by the Ethernet packet generator.</param>
            <param name="transmissionRate">The rate in frames per second at which the packet should be transmitted. Range: [1 ... 1000000].</param>
            <returns>
            <para>0: The Ethernet packet generator was successfully started.</para>
            <para>-1: Output on specified Ethernet channel not allowed.</para>
            <para>-2: Packet generator not supported in simulation mode.</para>
            <para>-3: Packet generator is only available with Vector Ethernet network hardware.</para>
            <para>-4: Configuration of packet generator failed.</para>
            <para>-5: Starting of packet generator failed.</para>
            </returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketGenerator.Start(Vector.CANoe.Runtime.EthernetPacket,System.UInt32,System.UInt32)">
            <summary>
            Start the Ethernet packet generator.
            </summary>
            <param name="packet">Ethernet packet to be sent by the Ethernet packet generator.</param>
            <param name="transmissionRate">The rate in frames per second at which the packet should be transmitted. Range: [1 ... 1000000].</param>
            <param name="numberOfFrames">The number of Frames that should be transmitted. Range: [0x1 ... 0xFFFFFFFE]. Use 0xFFFFFFFF to send until EthStopPacketGenerator is called.</param>
            <returns>
            <para>0: The Ethernet packet generator was successfully started.</para>
            <para>-1: Output on specified Ethernet channel not allowed.</para>
            <para>-2: Packet generator not supported in simulation mode.</para>
            <para>-3: Packet generator is only available with Vector Ethernet network hardware.</para>
            <para>-4: Configuration of packet generator failed.</para>
            <para>-5: Starting of packet generator failed.</para>
            </returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketGenerator.Start(Vector.CANoe.Runtime.EthernetPacket,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Start the Ethernet packet generator.
            </summary>
            <param name="packet">Ethernet packet to be sent by the Ethernet packet generator.</param>
            <param name="transmissionRate">The rate in frames per second at which the packet should be transmitted. Range: [1 ... 1000000].</param>
            <param name="numberOfFrames">The number of Frames that should be transmitted. Range: [0x1 ... 0xFFFFFFFE]. Use 0xFFFFFFFF to send until EthStopPacketGenerator is called.</param>
            <param name="counterByteOffset">The position a 4 byte counter is placed inside the Ethernet-payload on a zero based index.</param>
            <returns>
            <para>0: The Ethernet packet generator was successfully started.</para>
            <para>-1: Output on specified Ethernet channel not allowed.</para>
            <para>-2: Packet generator not supported in simulation mode.</para>
            <para>-3: Packet generator is only available with Vector Ethernet network hardware.</para>
            <para>-4: Configuration of packet generator failed.</para>
            <para>-5: Starting of packet generator failed.</para>
            </returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.EthernetPacketGenerator.Stop(Vector.CANoe.Runtime.EthernetPacket)">
            <summary>
            Stop the Ethernet packet generator.
            </summary>
            <param name="packet">Ethernet packet that shall no longer be sent by the Ethernet packet generator.</param>
            <returns> Returns 0 if Ethernet packet generator was successfully stopped. Otherwise an error code is returned.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame">
            <summary>
            Class which represents a normal CAN frame or a CAN FD Frame. 
            </summary>
            <remarks>
            For the CAN frames defined in databases, specific classes are generated
            in type libraries. These specific classes are subclasses of CANFrame and
            provide easy access to signal values.
            
            CANFrame can also be used as a superclass for your own classes. Then, you
            can use the Signal attribute to define the layout of signals in the frame.
            
            You can also create instances of CANFrame directly. Then you should set
            the ID and the DLC manually before sending the frame. The data can only
            be set on a per-byte basis in the CANFrame class. 
            
            You also receive objects of this class in the OnAnyCANFrame handler.
            </remarks>
            <seealso cref="T:Vector.CANoe.Runtime.OnCANFrameAttribute"/>
            <seealso cref="T:Vector.CANoe.Runtime.OnAnyCANFrameAttribute"/>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame.FrameDirection">
            <summary>
            The direction of the frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameDirection.Rx">
            <summary>
            Frame is a Rx (received) frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameDirection.Tx">
            <summary>
            Frame is a Tx (transmitted) frame. 
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameDirection.TxRequest">
            <summary>
            Frame is a TxRq (request for transmission) frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame.FrameType">
            <summary>
            The type of the frame. This is a combination of the RTR and DIR properties.
            </summary>
            <remarks>
            The type is calculated as (RTR &lt;&lt; 8) | DIR.
            </remarks>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.RxData">
            <summary>
            Received data frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.TxData">
            <summary>
            Transmitted data frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.TxRequestData">
            <summary>
            Request for transmission data frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.RxRemote">
            <summary>
            Received remote frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.TxRemote">
            <summary>
            Transmitted remote frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameType.TxRequestRemote">
            <summary>
            Request for transmission remote frame.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame.FrameFlags">
            <summary>
            Special flags of the frame. The frame may have any combination of these
            flags.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.EmptyTxBuffer">
            <summary>
            The transmit buffer will be emptied before transmitting the frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.NERR">
            <summary>
            The NERR flag of the CAN transceiver was active at frame reception
            (system is in single wire mode)
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.HighVoltage">
            <summary>
            The frame will be sent or was received in "high voltage" mode
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.RemoteFrame">
            <summary>
            The frame is a remote frame.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.TxAck">
            <summary>
            The frame is a transmission acknowledgment.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.FrameFlags.TxRequest">
            <summary>
            The frame is a transmission request.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.#ctor(System.Int32,System.Byte,System.Int64)">
            <summary>
            Constructor to be used by generated subclasses. You should normally
            have no need to call this constructor from your own subclasses.
            </summary>
            <param name="id">ID of the frame</param>
            <param name="dlc">DLC of the frame</param>
            <param name="time">Timestamp of the frame</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.#ctor(System.Int32,System.Byte)">
            <summary>
            Constructor.
            </summary>
            <param name="id">ID of the frame</param>
            <param name="dlc">DLC of the frame</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.#ctor">
            <summary>
            Default constructor. This constructor is included for internal purposes.
            You should use the other constructor, giving ID and DLC, if you create
            an instance of CANFrame.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.CreateNewInstance(System.Int64)">
            <summary>
            Internal method. You should never need to call or override this method.
            </summary>
            <param name="time">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.CopyDataFrom(Vector.CANoe.Runtime.CANFrame)">
            <summary>
            Copies the data from another frame. The data includes DLC, payload,
            timestamp, flags, direction, and RTR flag, but not the ID.
            </summary>
            <remarks>
            Use this method to access signals in an OnAnyCANFrame handler.
            </remarks>
            <param name="other">Frame of which the data is copied</param>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="CopyDataFrom" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.Send">
            <summary>
            Sends the frame on the bus. 
            </summary>
            <remarks>
            If the channel of the frame is set to 0,
            the frame is sent on the first channel of the CAN buses to which the node
            which contains the program is attached. Otherwise, the frame is sent
            on the channel of the frame.
            </remarks>
            <returns>The method returns an error code determining the success of
            the call: 0 means success, 1 means output to the channel of the frame
            is not allowed for the node.
            </returns>
            <seealso cref="M:Vector.CANoe.Runtime.CANFrame.SendTo(System.Byte)"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SendTo(System.Byte)">
            <summary>
            Sends the frame on the bus determined by the specified channel.
            </summary>
            <remarks>
            In effect, sets the channel of the frame to the parameter and then
            calls Send().
            </remarks>
            <param name="channel">Channel on which the frame shall be sent.</param>
            <returns>0 if successful, 1 if output to that channel is not allowed
            for the node.</returns>
            <seealso cref="M:Vector.CANoe.Runtime.CANFrame.Send"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.Block">
            <summary>
            For nodes in the measurement setup, specifies that the received frame
            shall not be transmitted further through the current measurement 
            setup branch. Thus, the node can be used as a frame filter.
            </summary>
            <remarks>Has no effect on frames which were not received or if called
            on a node which is not in the measurement setup.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Bytes">
            <summary>
            The payload of the frame as raw bytes.
            </summary>
            <remarks>
            For CAN FD frames, you have to set the DLC before setting the data bytes.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Channel">
            <summary>
            Gets or sets the channel number of the frame.
            </summary>
            <remarks>Note that CAN1 has channel number 1.</remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.DLC">
            <summary>
            Gets or sets the DLC of the frame.
            </summary>
            <remarks>
            Automatically sets the EDL bit if the DLC is larger than 8. For CAN FD frames, you have to
            set the DLC before setting the data bytes.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.ID">
            <summary>
            Returns the ID of the frame. The ID can not be changed.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Extended">
            <summary>
            Whether the ID is an extended ID.
            </summary>
            <remarks>
            Normally, you don't have to set the extended bit yourself; it is set
            by the constructor if the ID is larger than 0x7FF. If you wish to use
            such an ID without the extended bit, e.g. for testing purposes, you 
            can use this property.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.TimeNS">
            <summary>
            Returns the time stamp of the frame. The time stamp can not be changed.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Direction">
            <summary>
            Gets or sets the direction of the frame.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Type">
            <summary>
            Returns the type of the frame.
            </summary>
            <remarks>
            The type can not be changed directly, but you can change the direction
            or RTR flags.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Flags">
            <summary>
            Gets or sets the flags of the frame.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.Simulated">
            <summary>
            Returns whether the frame was sent by a simulated node in the 
            simulation setup.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.RTR">
            <summary>
            Returns whether the frame is a remote transmission request.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.EDL">
            <summary>
            Whether the frame has Extended Data Length, i.e., whether the frame is a CAN FD frame.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.FDF">
            <summary>
            Whether the frame is a CAN FD frame.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.BRS">
            <summary>
            Bit Rate Switch for the CAN FD frame. 
            </summary>
            <remarks>
            If true, the frame uses the data bit rate for the data segment, else it uses the arbitration bit rate.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.ESI">
            <summary>
            Error State Indicator
            </summary>
            <remarks>
            Read / Write: 0 = ESI not set, 1 = ESI set. Write: 2 = CAN controller sets ESI automatically 
            depending on the state of the controller.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.DataLength">
            <summary>
            Length of the payload byte array.
            </summary>
            <remarks>
            For normal CAN frames, the data length is always 8. For CAN FD frames, it can be larger. The property
            is read-only; to change the data length, set the DLC.
            </remarks>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame.ByteOrder">
            <summary>
            Byte order for signals.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.ByteOrder.Intel">
            <summary>
            Intel byte order.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.CANFrame.ByteOrder.Motorola">
            <summary>
            Motorola byte order.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.CANFrame.SignalAttribute">
            <summary>
            You can mark a field of CANFrame subclasses with this attribute to
            use it as a signal access field.
            </summary>
            <remarks>
            Through the use of this attribute, subclasses of CANFrame can define the layout
            of signals in the frame. The field which is marked with this attribute
            must be a public field of the correct data type for the signal. The 
            attribute receives in its constructor the start bit and bit count of
            the signal. Other properties are provided for the physical value 
            calculation and the byte order.
            
            Whenever you read or write the signal value, not the field itself is
            read or written, but the data bytes of the frame are changed.
            
            The read or written values are automatically assumed to be the physical
            values of the signals, and are therefore of type double. It is not 
            possible to read or write the raw values directly.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="SignalAttribute" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.#ctor(System.Int16,System.Int16)">
            <summary>
            Constructor. You must define the least significant bit and bit count of the 
            signal.
            </summary>
            <param name="lsb">Position of the least significant bit of the signal</param>
            <param name="bitCount">Bit count of the signal</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.#ctor">
            <summary>
            Constructor. Even if using this constructor, you should at least
            set the LSB and BitCount properties.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.Factor">
            <summary>
            The factor for the calculation of the physical value of the signal.
            The default is 1.0.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.Offset">
            <summary>
            The offset for the calculation of the physical value of the signal.
            THe default is 0.0.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.LSB">
            <summary>
            Least significant bit of the signal. The default is 0.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.MSB">
            <summary>
            Most significant bit of the signal.
            </summary>
            <remarks>
            The MSB is calculated out of LSB, BitCount and ByteOrder.
            </remarks>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.BitCount">
            <summary>
            Bit count of the signal. The default is 1.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.CANFrame.SignalAttribute.ByteOrder">
            <summary>
            Byte order of the signal. The default is Intel byte order.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.CompileTimeInitialize(System.Reflection.FieldInfo)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="field">Internal parameter.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.RuntimeInitialize(System.Reflection.FieldInfo)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="field">Internal parameter.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.CompileTimeValidate(System.Reflection.FieldInfo)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="field">Internal parameter.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.OnGetValue(Vector.PostCompiler.Interface.FieldAccessEventArgs)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="eventArgs">Internal parameter.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.CANFrame.SignalAttribute.OnSetValue(Vector.PostCompiler.Interface.FieldAccessEventArgs)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="eventArgs">Internal parameter.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnCANFrameAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the 
            specified frame is received.
            </summary>
            <remarks>
            The method must take a single parameter which is of type CANFrame or of
            a subclass of that type, e.g. of a generated frame type. The method must
            be a public instance method and it must have a void return type.
            
            You can specify the ID and channel of the frame in two ways: either by
            using a subclass of CANFrame, or through the constructor of the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnCANFrame" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCANFrameAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
            <remarks>
            If the frame parameter doesn't specify a channel,
            frames on all channels are received. 
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCANFrameAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel on which the frames shall be received.
            </summary>
            <remarks>
            If the frame parameter also specifies a channel, the attribute channel
            is used regardless. Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the frames shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnCANFrameAttribute.#ctor(System.Byte,System.Int32)">
            <summary>
            Constructor giving the ID of the frame and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            If the frame parameter also specifies a channel, the attribute
            channel is used regardless. On the other hand, if the frame parameter
            specifies an ID, it is used regardless of the attribute ID (for reasons
            of type safety). Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the frames shall be received.</param>
            <param name="id">ID of the frame which shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnAnyCANFrameAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the
            specified frame is received.
            </summary>
            <example>
              <code source="..\Build Documentation\RuntimeExamples.cs" region="CopyDataFrom" />
              </example>
            <remarks>
            The method must take a single parameter of type CANFrame. The method must
            be a public instance method and it must have a void return type.
            You can specify the channel of the frames through the second constructor.
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCANFrameAttribute.#ctor">
            <summary>
            Constructor. Method is called for all CAN frames on all channels.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnAnyCANFrameAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel. Method is called for all CAN frames on the given channel.
            </summary>
            <remarks>
            Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which frames shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.J1939Frame">
            <summary>
            Class which represents a J1939 frame
            </summary>
            <remarks>
            For the J1939 frames defined in databases, specific classes are generated
            in type libraries. These specific classes are subclasses of J1939Frame and
            provide easy access to signal values.
            
            You can also create instances of J1939Frame directly. Then you should set
            the ID and the DLCEx manually before sending the frame. The data can only
            be set on a per-byte basis in the J1939Frame class. 
            
            You also receive objects of this class in the OnJ1939Frame handler.
            </remarks>
            <seealso cref="T:Vector.CANoe.Runtime.OnJ1939FrameAttribute"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.J1939Frame.#ctor">
            <summary>
            Constructor to be used by generated subclasses. You should normally
            have no need to call this constructor from your own subclasses.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.J1939Frame.#ctor(System.Int32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="id">ID of the frame</param>
            <param name="dlcEx">DLC of the frame</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.J1939Frame.#ctor(System.Int32,System.UInt32,System.Int64)">
            <summary>
            Constructor to be used by generated subclasses. You should normally
            have no need to call this constructor from your own subclasses.
            </summary>
            <param name="id">ID of the frame</param>
            <param name="dlcEx">DLC of the frame</param>
            <param name="time">Timestamp of the frame in ms</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.DLC">
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.DLCEx">
            <summary>
            Gets or set the DLC of the frame. For J1939 DLCEx is used because it can be larger than the DLC (8 bytes).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.DA_TP">
            <summary>
            The property DA represents the field PDU Specific of the J1939 frame(bit 0-7 of the PGN), i.e. destination address of the parameter group in case of PDU1 message 
            or	group extension of the parameter group in case of PDU2 message
            
            The property DA_TP can be used to transmit a PDU2 message with DLC > 8 to some specific address or to identify the destination address in a OnJ1939Frame callback.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.J1939Frame.CreateNewInstance(System.Int64)">
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.PGN">
            <summary>
            Gets or sets the PGN (Parameter Group Number) for the frame
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.InternalPGN">
            <exclude/>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.SA">
            <summary>
            Gets or sets the source address of the frame
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.DA">
            <summary>
            Gets or sets the destination address of the frame. See also <see cref="P:Vector.CANoe.Runtime.J1939Frame.DA_TP"/>
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.Priority">
            <summary>
            Gets or sets the J1939 Priority of the frame
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.DP">
            <summary>
            Gets or sets the data page of the J1939 frame (bit 16 of the PGN)
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.Characteristic">
            <summary>
            Priority, data page, and extended data page of the J1939 frame(bit 24-31 of the CAN ID)
            Note: The most significant bit is always set to 1 and marks the CAN identifier as extended identifier with 29 bit.The 3 most significant bits are used only internally in CANoe.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.EDP">
            <summary>
            Gets or sets the extended data page of the J1939 frame (bit 17 of the PGN)
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.PS">
            <summary>
            Gets or sets the PDU Specific field of the J1939 frame (bit 0-7 of the PGN)
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.J1939Frame.PF">
            <summary>
            Gets or sets the PDU Format field of the J1939 frame (bit 8-15 of the PGN)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.J1939Frame.CopyDataFrom(Vector.CANoe.Runtime.J1939Frame)">
            <summary>
            Copies content of J1939Frame to another one
            </summary>
            <param name="other">the J1939Frame to be copied</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnJ1939FrameAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the 
            specified frame is received.
            </summary>
            <remarks>
            The method must take a single parameter which is of type J1939Frame or of
            a subclass of that type, e.g. of a generated frame type. The method must
            be a public instance method and it must have a void return type.
            
            You can specify the ID, PGN and channel of the frame in two ways: either by
            using a subclass of J1939Frame, or through the constructor of the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnJ1939Frame" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnJ1939FrameAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
            <remarks>
            If the frame parameter doesn't specify a channel,
            frames on all channels are received. 
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnJ1939FrameAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel on which the frames shall be received.
            </summary>
            <remarks>
            If the frame parameter also specifies a channel, the attribute channel
            is used regardless. Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the frames shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnJ1939FrameAttribute.#ctor(System.Byte,System.Int32)">
            <summary>
            Constructor giving the ID of the frame and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            If the frame parameter also specifies a channel, the attribute
            channel is used regardless. On the other hand, if the frame parameter
            specifies an ID, it is used regardless of the attribute ID (for reasons
            of type safety). Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the frames shall be received.</param>
            <param name="id">ID of the frame which shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnJ1939FrameAttribute.#ctor(System.Byte,System.UInt32)">
            <summary>
            Constructor giving the PGN of the frame and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            Note that CAN1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the frames shall be received.</param>
            <param name="pgn">PGN of the frame which shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnEthernetPacketAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the 
            specified packet is received.
            </summary>
            <remarks>
            The method must take a single parameter which is of type <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>. The method must
            be a <see langword="public"/> instance method and it must have a <see langword="void"/> return type.
            
            You can specify the headerinformation and channel of the frame in two ways: either by
            using a subclass of EthernetPacket, or through the constructor of the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnEthernetPacket" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
            <remarks>
            If the packet parameter doesn't specify a channel,
            frames on all channels are received. 
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor(System.Byte,System.String,System.String,System.UInt16)">
            <summary>
            Constructor giving the ID of the packet and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the packets shall be received.</param>
            <param name="source">Source address of the packets that shall be received.</param>
            <param name="destination">Destination address of the packets that shall be received.</param>
            <param name="ethertype">Ethertype of the packets that shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor(System.Byte,System.String,System.String)">
            <summary>
            Constructor giving the source and destination of the packet and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the packets shall be received.</param>
            <param name="source">Source address of the packets that shall be received.</param>
            <param name="destination">Destination address of the packets that shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor(System.Byte,System.UInt16)">
            <summary>
            Constructor giving the ethertype of the packet and the channel on which it 
            shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the packets shall be received.</param>
            <param name="ethertype">Ethertype of the packets that shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel on which the packets shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the packets shall be received.</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketAttribute.#ctor(System.Type)">
            <summary>
            Constructor giving the type of the EthernetPort on which the packets shall be received.
            </summary>
            <param name="ethernetPortType">Type of EthernetPort on which the packets shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnEthernetPacketErrorAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the 
            specified packet is received.
            </summary>
            <remarks>
            The method must take a single parameter which is of type <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>. The method must
            be a <see langword="public"/> instance method and it must have a <see langword="void"/> return type.
            
            You can specify the headerinformation and channel of the frame in two ways: either by
            using a subclass of EthernetPacket, or through the constructor of the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnEthernetPacket" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketErrorAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
            <remarks>
            If the packet parameter doesn't specify a channel,
            frames on all channels are received. 
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetPacketErrorAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel on which the packets shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the packets shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnEthernetStatusAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time the 
            specified Ethernet status notification is received.
            </summary>
            <remarks>
            The method takes a single parameter which is of type <see cref="T:Vector.CANoe.Runtime.EthernetStatus"/>. The method must
            be a <see langword="public"/> instance method and it must have a <see langword="void"/> return type.
            
            You may optionally specify a channel to observe for Ethernet status notifications
            by using the corresponding constructor of the attribute.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnEthernetStatus" />
            </example>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetStatusAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
            <remarks>
            If the status parameter doesn't specify a channel,
            notifications on all channels are received. 
            </remarks>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnEthernetStatusAttribute.#ctor(System.Byte)">
            <summary>
            Constructor giving the channel on which the Ethernet status notification shall be received.
            </summary>
            <remarks>
            Note that ETH1 has channel number 1.
            </remarks>
            <param name="channel">Channel on which the Ethernet status notifications shall be received.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnIpAddressAddedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time an <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> is added to an EthernetAdapter of this node.
            </summary>
            <remarks>
            The method must take three parameters which are of type <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>, <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> and <see cref="T:Vector.CANoe.Runtime.AddressChangeInitiator"/>. 
            The method must be a <see langword="public"/> instance method and it must have a <see langword="void"/> return type.
            <para/>
            When called, the parameter of type <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> receives the instance to which the address was added.
            The parameter of type <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> receives the address which was added.
            The parameter of type <see cref="T:Vector.CANoe.Runtime.AddressChangeInitiator"/> receives a value indicating the initiator of the change.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnIpAddressAddedAttribute" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressAddedAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressAddedAttribute.CompileTimeValidate(System.Reflection.MethodBase)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="method">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressAddedAttribute.GetParameterTypes(System.Reflection.MethodBase,System.Type@,System.Type@,System.Type@)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="method">For internal use only.</param>
            <param name="adapterType">For internal use only.</param>
            <param name="addressType">For internal use only.</param>
            <param name="originType">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.AddressChangeInitiator">
            <summary>
            Defines the initiator for adding or removing an <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/>.
            </summary>
            <remarks>
            This <see langword="enum"/> is used in connection with the event handler <see cref="T:Vector.CANoe.Runtime.OnIpAddressAddedAttribute"/> and <see cref="T:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute"/>
            </remarks>
            <seealso cref="T:Vector.CANoe.Runtime.OnIpAddressAddedAttribute"/>
            <seealso cref="T:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute"/>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.Unknown">
            <summary>
            The initiator for the change is unknown.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.User">
            <summary>
            The change was initiated by the user.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.System">
            <summary>
            The change was initiated by the system.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.DHCPv4Client">
            <summary>
            The change was initiated by the DHCPv4 client.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.DHCPv6Client">
            <summary>
            The change was initiated by the DHCPv6 client.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.AddressChangeInitiator.RFC3927Client">
            <summary>
            The change was initiated by the RFC3927 client.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute">
            <summary>
            Mark a method with this attribute, and it will be called each time an <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> is removed from an EthernetAdapter of this node.
            </summary>
            <remarks>
            The method must take three parameters which are of type <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/>, <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> and <see cref="T:Vector.CANoe.Runtime.AddressChangeInitiator"/>. 
            The method must be a <see langword="public"/> instance method and it must have a <see langword="void"/> return type.
            <para/>
            When called, the parameter of type <see cref="T:Vector.CANoe.Runtime.EthernetAdapter"/> receives the instance from which the address was removed.
            The parameter of type <see cref="T:Vector.CANoe.Runtime.IPNetworkAddress"/> receives the address which was removed.
            The parameter of type <see cref="T:Vector.CANoe.Runtime.AddressChangeInitiator"/> receives a value indicating the initiator of the change.
            </remarks>
            <example>
            <code source="..\Build Documentation\RuntimeExamples.cs" region="OnIpAddressRemovedAttribute" />
            </example>
            <seealso cref="T:Vector.CANoe.Runtime.OnIpAddressAddedAttribute"/>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute.#ctor">
            <summary>
            Default constructor. 
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute.CompileTimeValidate(System.Reflection.MethodBase)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="method">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.OnIpAddressRemovedAttribute.GetParameterTypes(System.Reflection.MethodBase,System.Type@,System.Type@,System.Type@)">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <param name="method">For internal use only.</param>
            <param name="adapterType">For internal use only.</param>
            <param name="addressType">For internal use only.</param>
            <param name="originType">For internal use only.</param>
            <returns>For internal use only.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.ISignal">
            <summary>
            This class represents an ISignal as described by the database (ARXML).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.ISignal.#ctor(System.String,System.UInt32)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">ISignal name</param>
            <param name="bitLength">Length of the ISignal in bits</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.TransmissionCondition">
            <summary>
            This class represents a the Transmission Conditions for an Ethernet PDU as described by the database
            (ARXML).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.TransmissionCondition.#ctor(Vector.CANoe.Runtime.DBElements.SendBehavior,Vector.CANoe.Runtime.DBElements.SendBehavior)">
            <summary>
            Internal constructor.
            </summary>
            <param name="behaviorIfTrue">Send behavior if at least one condition is fulfilled.</param>
            <param name="behaviorIfFalse">Send behavior if no condition is fulfilled.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.TransmissionCondition.BehaviorIfTrue">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior"/> that applies when at least one <see cref="T:Vector.CANoe.Runtime.DBElements.TransmissionCondition"/> is fulfilled.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.TransmissionCondition.BehaviorIfFalse">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior"/> that applies when none of the <see cref="T:Vector.CANoe.Runtime.DBElements.TransmissionCondition"/>s is fulfilled.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.PDUType">
            <summary>
            Enum of PDU types (NM, Application, ...).
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.Undefined">
            <summary>
            PDU type is not defined.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.SignalIPdu">
            <summary>
            PDU is an Signal-I-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.NmPdu">
            <summary>
            PDU is a Network-Management-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.NPdu">
            <summary>
            PDU is an N-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.MultiplexedIPdu">
            <summary>
            PDU is a Multiplexed-I-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.XcpPdu">
            <summary>
            PDU is an XCP-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.ContainerIPdu">
            <summary>
            PDU is a Container-I-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.DcimPdu">
            <summary>
            PDU is a DCIM-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.UserDefinedIPdu">
            <summary>
            PDU is a User-Defined-I-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.GeneralPurposePdu">
            <summary>
            PDU is a General-Purpose-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.GeneralPurposeIPdu">
            <summary>
            PDU is a General-Purpose-I-PDU.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.PDUType.SecuredIPdu">
            <summary>
            PDU is a Secured-I-PDU.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.IPDU">
            <summary>
            This class represents an PDU as described by the database (ARXML).
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.SendBehavior">
            <summary>
            This class represents the Send Behavior of e.g. Fields, Events, PDUs and Signals as described by the database
            (e.g. ARXML, FIBEX).
            </summary>      
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.SendBehavior.SendType">
            <summary>
            Flags for describing the Send Behavior of e.g. Fields, Events, PDUs and Signals.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.SendBehavior.SendType.None">
            <summary>
            No Send-Type specified.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.SendBehavior.SendType.Directed">
            <summary>
            Send-Type is directed.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.SendBehavior.SendType.Periodic">
            <summary>
            Send-Type is periodic.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.SendBehavior.#ctor(Vector.CANoe.Runtime.DBElements.SendBehavior.SendType,System.Double)">
            <summary>
            Internal constructor.
            </summary>
            <param name="types">Send type flags.</param>
            <param name="cycleTime">Cycle Time.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.SendBehavior.TypeFlags">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior.SendType"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior"/>
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.IECU">
            <summary>
            This class represents an <see cref="T:Vector.CANoe.Runtime.DBElements.IECU"/> within a <see cref="T:Vector.CANoe.Runtime.DBElements.Cluster"/> as described within the database (e.g. ARXML, FIBEX).
            </summary>        
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.Cluster">
            <summary>
            This class represents an Ethernet Cluster as described by the database (e.g. ARXML, FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.Cluster.#ctor(System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the Ethernet Cluster.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.Cluster.ECUs">
            <summary>
            ECUs within the <see cref="T:Vector.CANoe.Runtime.DBElements.Cluster"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.Cluster.mEcus">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.Cluster.InternalGetCurrentDbNodeName">
            <summary>
            Internal method.
            </summary>
            <returns>Internal method.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.ConnectionInformation">
            <summary>
            This class holds information about a Connection of a PDU by describing the Source and Destination Application Endpoint.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.ConnectionInformation.#ctor(Vector.CANoe.Runtime.DBElements.ApplicationEndpoint,Vector.CANoe.Runtime.DBElements.ApplicationEndpoint)">
            <summary>
            Internal constructor.
            </summary>
            <param name="source">Source Application Endpoint.</param>
            <param name="destination">Destination Application Endpoint.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ConnectionInformation.Source">
            <summary>
            Source <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.ConnectionInformation"/>
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ConnectionInformation.Destination">
            <summary>
            Destination <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.ConnectionInformation"/>
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.EthernetPDU">
            <summary>
            This class represents an Ethernet PDU as described by the database (ARXML).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.EthernetPDU.#ctor(System.String,System.UInt32,System.UInt32,Vector.CANoe.Runtime.DBElements.PDUType,Vector.CANoe.Runtime.DBElements.TransmissionCondition)">
            <summary>
            Internal constructor
            </summary>
            <param name="name">PDU name</param>
            <param name="byteLength">Length of the PDU in Byte.</param>
            <param name="headerId">PDU Header ID.</param>
            <param name="type"><see cref="T:Vector.CANoe.Runtime.DBElements.PDUType"/> of the PDU (NM, Application, ...).</param>
            <param name="transmissionConditions"><see cref="T:Vector.CANoe.Runtime.DBElements.TransmissionCondition"/>s of the PDU</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetPDU.Type">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.PDUType"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetPDU.TransmissionConditions">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.TransmissionCondition"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetPDU.ISignals">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ISignal"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.EthernetPDU.mISignals">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetPDU.Connections">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ConnectionInformation"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.EthernetPDU.mConnections">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.Method">
            <summary>
            This class represents a Method as described by the database (FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.Method.#ctor(System.String,System.UInt16)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the Method.</param>
            <param name="methodId">Method Identifier.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.Event">
            <summary>
            This class represents an Event as described by the database (FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.Event.#ctor(System.String,System.UInt16,Vector.CANoe.Runtime.DBElements.SendBehavior)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the Event.</param>
            <param name="eventId">Event Identifier.</param>
            <param name="behavior">Send Behavior of the Event.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.Event.Behavior">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.Event"/>
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.Field">
            <summary>
            This class represents a Field as described by the database (FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.Field.#ctor(System.String,Vector.CANoe.Runtime.DBElements.SendBehavior)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the Field.</param>
            <param name="behavior">Send Behavior of the Field.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.Field.Behavior">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.SendBehavior"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.Field"/>
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.ServiceInterface">
            <summary>
            This class represents a Service Interface as described by the database (FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.ServiceInterface.#ctor(System.String,System.UInt16,System.Byte,System.UInt32)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the Service Interface.</param>
            <param name="serviceId">Service ID of the Service Interface.</param>
            <param name="majorVersion">Major Version of the Service Interface.</param>
            <param name="minorVersion">Minor Version of the Service Interface.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ServiceInterface.Fields">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.Field"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInterface"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ServiceInterface.mFields">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ServiceInterface.Events">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.Event"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInterface"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ServiceInterface.mEvents">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ServiceInterface.Methods">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.Method"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInterface"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ServiceInterface.mMethods">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.ServiceInstance">
            <summary>
            This class represents a Service Instance as described by the database (FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.ServiceInstance.#ctor(System.UInt16,System.UInt32,Vector.CANoe.Runtime.DBElements.ServiceInterface)">
            <summary>
            Internal constructor.
            </summary>
            <param name="instanceId">Instance ID of the Service Instance.</param>
            <param name="ttl">TTL of the Service Instance.</param>
            <param name="serviceInterface">Service Interface of the Service Instance.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ServiceInstance.Interface">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInterface"/> of the <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInstance"/>
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.NetworkEndpoint">
            <summary>
            This class represents an Ethernet Network Endpoint as described within the database (e.g. ARXML, FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.NetworkEndpoint.#ctor(System.Net.IPAddress,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Internal constructor.
            </summary>
            <param name="ipAddress">IP address of the Network Endpoint.</param>
            <param name="macAddress">MAC address of the Network Endpoint.</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint">
            <summary>
            This class represents an Ethernet Application Endpoint as described by the database (e.g. ARXML, FIBEX).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.#ctor(Vector.CANoe.Runtime.DBElements.NetworkEndpoint,System.UInt16,System.Boolean)">
            <summary>
            Internal constructor.
            </summary>
            <param name="netEndpoint">Network Endpoint (IP address, VLAN, MAC) of the Application Endpoint.</param>
            <param name="port">Port of the Application Endpoint.</param>
            <param name="isReliable">Type of the Application Endpoint (TCP if true, otherwhise UDP).</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.NetEndpoint">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.NetworkEndpoint"/> of the Application Endpoint
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.ProvidedServiceInstances">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInstance"/>s that the <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/> provides
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.mProvidedServiceInstances">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.ConsumedServiceInstances">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ServiceInstance"/>s that the <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/> consumes
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.mConsumedServiceInstances">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.RxPDUs">
            <summary>
            RX <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.mRxPDUs">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.TxPDUs">
            <summary>
            TX <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetPDU"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint.mTxPDUs">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.DBElements.EthernetECU">
            <summary>
            This class represents an <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetECU"/> within a <see cref="T:Vector.CANoe.Runtime.DBElements.Cluster"/> as described within the database (e.g. ARXML, FIBEX).
            </summary>     
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.EthernetECU.#ctor">
            <summary>
            Internal constructor.
            </summary> 
        </member>
        <member name="M:Vector.CANoe.Runtime.DBElements.EthernetECU.#ctor(System.String)">
            <summary>
            Internal constructor.
            </summary>
            <param name="name">Name of the ECU.</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetECU.NetworkEndpoints">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.NetworkEndpoint"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetECU"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.EthernetECU.mNetworkEndpoints">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DBElements.EthernetECU.ApplicationEndpoints">
            <summary>
            <see cref="T:Vector.CANoe.Runtime.DBElements.ApplicationEndpoint"/>s of the <see cref="T:Vector.CANoe.Runtime.DBElements.EthernetECU"/>
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.DBElements.EthernetECU.mApplicationEndpoints">
            <summary>
            Internal field.
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMapObject">
            <summary>
            Base interface for all map objects
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapObject.Heading">
            <summary>
            Gets or sets the map objects heading in degrees
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapObject.Position">
            <summary>
            Gets or sets the position of a map object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapObject.Offset">
            <summary>
            Adds an offset to the current position of the map object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMapLine">
            <summary>
            Map object interface for lines
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapLine.LineColor">
            <summary>
            Gets or sets the color for a line
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapLine.LineWidth">
            <summary>
            Gets or sets the width of a line in pixels
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMapFill">
            <summary>
            Map object interface for fillable objects
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapFill.FillColor">
            <summary>
            Gets or sets the fill color of a map object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMapText">
            <summary>
            Map object interface for text objects
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapText.Text">
            <summary>
            Gets or sets the text of an object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapText.FontSize">
            <summary>
            Gets or sets the font size of an object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.IMapBitmap">
            <summary>
            Map object interface for bitmaps
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.IMapBitmap.Filepath">
            <summary>
            Gets or sets the filepath of an object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapObject">
            <summary>
            Map object base class
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObject.Heading">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapObject.Heading"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObject.Position">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapObject.Position"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObject.Offset">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapObject.Offset"/>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapObjectLineFill">
            <summary>
            Base class for line and fill objects
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObjectLineFill.Width">
            <summary>
            Gets or sets the width of the object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObjectLineFill.Height">
            <summary>
            Gets or sets the height of the object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObjectLineFill.LineColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineColor"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObjectLineFill.LineWidth">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineWidth"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapObjectLineFill.FillColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapFill.FillColor"/>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapLine">
            <summary>
            MapObject for painting lines
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapLine.#ctor(Vector.CANoe.Runtime.GeoPosition,Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position1">First point of the line</param>
            <param name="position2">Second point of the line</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.Position1">
            <summary>
            Gets or sets the first point of the line
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.Position2">
            <summary>
            Gets or sets the second point of the line
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.Offset">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapObject.Offset"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.LineColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineColor"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.LineWidth">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineWidth"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapLine.Position">
            <summary>
            Calling Position of a line returns the center point of the two points of the line, setting the position is not implemented (empty)
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapRectangle">
            <summary>
            MapObject for painting rectangle
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapRectangle.#ctor">
            <summary>
            Constructor
            Creates object at position (0,0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapRectangle.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">psotion of the object</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapEllipse">
            <summary>
            MapObject for painting elliptical objects
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapEllipse.#ctor">
            <summary>
            Constructor
            Creates object at position (0,0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapEllipse.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapCross">
            <summary>
            MapObject for painting a cross
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapCross.#ctor">
            <summary>
            Create map object a position (0, 0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapCross.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapCross.LineColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineColor"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapCross.LineWidth">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineWidth"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapCross.Size">
            <summary>
            Gets or sets the size of an object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapTriangle">
            <summary>
            MapObject for painting triangles
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapTriangle.#ctor">
            <summary>
            Create map object a position (0, 0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapTriangle.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapTriangle.Size">
            <summary>
            Gets or sets the size of an object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapTriangle.LineColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineColor"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapTriangle.LineWidth">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineWidth"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapTriangle.FillColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapFill.FillColor"/>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapVehicle">
            <summary>
            MapObject for painting vehicles
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapVehicle.#ctor">
            <summary>
            Create map object a position (0, 0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapVehicle.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapVehicle.LineColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineColor"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapVehicle.LineWidth">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapLine.LineWidth"/>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapVehicle.FillColor">
            <inheritdoc cref="P:Vector.CANoe.Runtime.IMapFill.FillColor"/>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapBitmap">
            <summary>
            MapObject for painting bitmaps
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapBitmap.#ctor">
            <summary>
            Create map object a position (0, 0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapBitmap.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapBitmap.Filepath">
            <summary>
            Gets or sets the filepath to the bitmap. It can be an absolute path or relative to the CANoe configuration.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapBitmap.BitmapCount">
            <summary>
            Gets or sets the bitmap count for indexed bitmaps
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapBitmap.BitmapIndex">
            <summary>
            Gets or sets the current index for an index bitmap
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapBitmap.Width">
            <summary>
            Gets or sets the width of an object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapBitmap.Height">
            <summary>
            Gets or sets the height of an object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapText">
            <summary>
            MapObject for painting text
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapText.#ctor">
            <summary>
            Create map object a position (0, 0)
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapText.#ctor(Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Constructor
            </summary>
            <param name="position">position of the object</param>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapText.Text">
            <summary>
            Gets or sets the text of an object
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.MapText.FontSize">
            <summary>
            Gets or sets the font size of an object
            </summary>
        </member>
        <member name="T:Vector.CANoe.Runtime.MapWindowAPI">
            <summary>
            MapWindowAPI class
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapWindowAPI.DrawObject(Vector.CANoe.Runtime.IMapObject)">
            <summary>
            Draw a map object to the map
            </summary>
            <param name="mapObject">map object to draw</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapWindowAPI.DeleteObject(Vector.CANoe.Runtime.IMapObject)">
            <summary>
            Delete a created map object
            </summary>
            <param name="mapObject">map bject to be deleted</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapWindowAPI.SetMapPosition(System.Double,System.Double)">
            <summary>
            Sets the position of the map
            </summary>
            <param name="latitude">the latitude</param>
            <param name="longitude">the longitude</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.MapWindowAPI.GetDistance(Vector.CANoe.Runtime.GeoPosition,Vector.CANoe.Runtime.GeoPosition)">
            <summary>
            Gets the distance between two positions on the map
            </summary>
            <param name="position1">first position</param>
            <param name="position2">second position</param>
            <returns>Distance in meters</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.GeoPosition">
            <summary>
            Class for geo positions
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.GeoPosition.Latitude">
            <summary>
            gets or sets the latitude
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.GeoPosition.Longitude">
            <summary>
            Gets or sets the longitude
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.GeoPosition.Altitude">
            <summary>
            Gets or sets the altitude
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.GeoPosition.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="latitude">the latitude</param>
            <param name="longitude">the longitude</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.GeoPosition.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Sedond constructor
            </summary>
            <param name="latitude">the latitude</param>
            <param name="longitude">the longitude</param>
            <param name="altitude">the altitude</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.GeoPosition.GetWithOffset(System.Double,System.Double)">
            <summary>
            Gets the current position with an offset
            </summary>
            <param name="latitude">the latitude of the offset</param>
            <param name="longitude">the longitude of the offset</param>
            <returns>Current position with added offset</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.GeoPosition.ToString">
            <summary>
            Returns the position as string
            </summary>
            <returns>position as string</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.IDORegistry">
            <summary>
            Interface for the Virtual Network Manager
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.LookupVirtualNetwork(System.String)">
            <summary>
            This method looks up a virtual network defined with the given path
            </summary>
            <param name="networkPath">The full path to the network</param>
            <returns>A network instance matching the input or null otherwise</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.LookupDistributedObject(System.String,System.String)">
            <summary>
            This method looks up a distributed object defined with the given namespace and name
            </summary>
            <param name="name">The name of the object</param>
            <param name="ns">The namespace of the object</param>
            <returns>A distributed object instance matching the input or null otherwise</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.LookupDistributedObject``1(System.String,System.String)">
            <summary>
            This method looks up a distributed object defined with the given namespace and name as the given Type
            </summary>
            <typeparam name="T">The Type of the object</typeparam>
            <param name="name">The name of the object</param>
            <param name="ns">The namespace of the object</param>
            <returns>A distributed object instance matching the input or null otherwise</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.ResetDistributedObjectValue(Vector.CANoe.Runtime.IDistributedObject)">
            <summary>
            Resets all values of the distributed object
            </summary>
            <param name="distObj">the object to be reset</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.ResetDistributedObjectValue(Vector.CANoe.Runtime.IDOMember)">
            <summary>
            Resets all values of the distributed object member
            </summary>
            <param name="distObjMember">the member to be reset</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.IDORegistry.ResetDistributedObjectValue(System.String)">
            <summary>
            Resets all values of the object or member for the given path
            </summary>
            <param name="path">the path to an object or member</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.DORegistry">
            <summary>
            Implementation class for the Virtual Network Manager
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.DORegistry.Instance">
            <summary>
            The instance of the DO Registry
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.LookupVirtualNetwork(System.String)">
            <summary>
            This method looks up all virtual networks defined with the given path
            </summary>
            <param name="networkPath">The full path to the network</param>
            <returns>A network instance matching the input or null</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.LookupDistributedObject(System.String,System.String)">
            <summary>
            This method looks up a distributed object with the given name and namespace
            </summary>
            <param name="name">The name of the object</param>
            <param name="ns">The namespace of the object</param>
            <returns>A distributed object instance matching the input or null otherwise</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.LookupDistributedObject``1(System.String,System.String)">
            <summary>
            This method looks up a distributed object with the given name and namespace of the given type
            </summary>
            <typeparam name="T">The Type of the object</typeparam>
            <param name="name">The name of the object</param>
            <param name="ns">The namespace of the object</param>
            <returns>A distributed object instance matching the input or null otherwise</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.ResetDistributedObjectValue(Vector.CANoe.Runtime.IDistributedObject)">
            <summary>
            Resets the values of the distributed object and all its members
            </summary>
            <param name="distObj">the distributed object</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.ResetDistributedObjectValue(Vector.CANoe.Runtime.IDOMember)">
            <summary>
            Resets the value of the member
            </summary>
            <param name="distObjMember">the member</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.ResetDistributedObjectValue(System.String)">
            <summary>
            Resets the values of all leaf elements of the object with the given path. The path can be that of a member, distributed object or namespace.
            </summary>
            <param name="path">the path of the object</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.AddNetwork(Vector.CANoe.Runtime.IVirtualNetwork)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="network">-</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.AddDistributedObject(Vector.CANoe.Runtime.IDistributedObject,System.UInt64)">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="obj">-</param>
            <param name="id">-</param>
        </member>
        <member name="M:Vector.CANoe.Runtime.DORegistry.AddConstructor(System.String,System.Func{System.UInt64,System.String,System.String,Vector.CANoe.Runtime.IDistributedObject},System.Func{System.UInt64,System.String,System.String,Vector.CANoe.Runtime.IDistributedObject})">
            <summary>
            Internal method. Do not use.
            </summary>
            <param name="modelPath">-</param>
            <param name="constructor">-</param>
            <param name="reverseConstructor">-</param>
        </member>
        <member name="T:Vector.CANoe.Runtime.VlanTags">
            <summary>
            Class holding the <see cref="T:Vector.CANoe.Runtime.VlanTag"/>s of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="F:Vector.CANoe.Runtime.VlanTags.MaxNumVlanTags">
            <summary>
            Maximum possible number of VlanTags for an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTags.Count">
            <summary>
            The number of <see cref="T:Vector.CANoe.Runtime.VlanTag"/>s in this <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTags.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Vector.CANoe.Runtime.VlanTag"/>s of the current <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="vlanIndex">Index of the accessed <see cref="T:Vector.CANoe.Runtime.VlanTag"/>.</param>
            <returns>The <see cref="T:Vector.CANoe.Runtime.VlanTag"/> with the specified index.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.VlanTags.Remove(System.Int32)">
            <summary>
            Removes a specific <see cref="T:Vector.CANoe.Runtime.VlanTag"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <param name="vlanIndex">The index of the VlanTag that should be removed.</param>
            <returns>True if removal was successful.</returns>
        </member>
        <member name="M:Vector.CANoe.Runtime.VlanTags.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the initialized <see cref="T:Vector.CANoe.Runtime.VlanTag"/>s of the current instance.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the initialized <see cref="T:Vector.CANoe.Runtime.VlanTag"/>s of the current instance.</returns>
        </member>
        <member name="T:Vector.CANoe.Runtime.VlanTag">
            <summary>
            Represents a VlanTag of an <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.None">
            <summary>
            Instance representing no VlanTag.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.IsInitialized">
            <summary>
            Indicates whether this <see cref="T:Vector.CANoe.Runtime.VlanTag"/> is initialized, i.e., it exists in the packet.
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.VlanTag.Remove">
            <summary>
            Removes the <see cref="T:Vector.CANoe.Runtime.VlanTag"/> from the <see cref="T:Vector.CANoe.Runtime.EthernetPacket"/>.
            </summary>
            <returns>True if removal was successful.</returns>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.TPID">
            <summary>
            Gets/sets the Tag Protocol Identifier (TPID), which represents the Ethertype of the <see cref="T:Vector.CANoe.Runtime.VlanTag"/>.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.TCI">
            <summary>
            Gets/sets the Tag Control Information (TCI), which contains information about Id, priority and drop eligibility.
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.Priority">
            <summary>
            Gets/sets the Priority Code Point (PCP).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.DEI">
            <summary>
            Gets/sets the Drop Eligible Indicator (DEI).
            </summary>
        </member>
        <member name="P:Vector.CANoe.Runtime.VlanTag.VlanId">
            <summary>
            Gets/sets the VlanId (VID).
            </summary>
        </member>
        <member name="M:Vector.CANoe.Runtime.VlanTag.ToString">
            <inheritdoc/>
        </member>
    </members>
</doc>
