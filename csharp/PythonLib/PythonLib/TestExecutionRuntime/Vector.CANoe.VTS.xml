<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vector.CANoe.VTS</name>
    </assembly>
    <members>
        <member name="T:Vector.CANoe.VTSInternal.CANoeInterface">
            <summary>
            Interface to CANoe
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.CANoeInterface.vtsProxy">
            <summary>
            VTS Proxy
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.InitProxy">
            <summary>
            Inits the proxy. The proxy must be initialized at first call.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.GetSystemInfo">
            <summary>
            Gets the system info.
            </summary>
            <returns>The system info</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.ResetMinMax(System.String)">
            <summary>
            Resets the min and max values.
            </summary>
            <param name="target">The target.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetIntegrationTime(System.String,System.Double)">
            <summary>
            Sets the integration time.
            </summary>
            <param name="target">The target.</param>
            <param name="intTime">The int time.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetLoadControlTimeout(System.String,System.Double)">
            <summary>
            Sets the load control timeout.
            </summary>
            <param name="target">The target.</param>
            <param name="timeout">The timeout.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetLoadMode(System.String,Vector.CANoe.VTS.LoadMode)">
            <summary>
            Sets the load mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetMinCurrentMeasurementRange(System.String,Vector.CANoe.VTS.CurrentMeasurementRange)">
            <summary>
            Sets the min current measurement range.
            </summary>
            <param name="target">The target.</param>
            <param name="range">The range.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetVT2808MinCurrentMeasurementRange(System.String,Vector.CANoe.VTS.VT2808CurrentMeasurementRange)">
            <summary>
            Sets the min current measurement range.
            </summary>
            <param name="target">The target.</param>
            <param name="range">The range.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetMeasurementMode(System.String,Vector.CANoe.VTS.MeasurementMode)">
            <summary>
            Sets the measurement mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetImpedanceMode(System.String,Vector.CANoe.VTS.ImpedanceMode)">
            <summary>
            Sets the impedance mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetMeasurementMode(System.String,Vector.CANoe.VTS.VT2816MeasurementMode)">
            <summary>
            Sets the measurement mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMMeasurementDuration(System.String,System.Double)">
            <summary>
            Sets the duration of the PWM measurement.
            </summary>
            <param name="target">The target.</param>
            <param name="duration">The duration.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMThreshold(System.String,System.Double)">
            <summary>
            Sets the PWM threshold.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMStartDelay(System.String,System.Double)">
            <summary>
            Sets the PWM start delay.
            </summary>
            <param name="target">The target.</param>
            <param name="startDelay">The start delay.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetTransferCycle(System.String,System.Double)">
            <summary>
            Sets the transfer cycle.
            </summary>
            <param name="target">The target.</param>
            <param name="cycletime">The cycletime.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.LoadWFResistance(System.String,System.String)">
            <summary>
            Loads a waveform for the resistance.
            </summary>
            <param name="target">The target.</param>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.LoadWFVoltage(System.String,System.String)">
            <summary>
            Loads a waveform for the voltage.
            </summary>
            <param name="target">The target.</param>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetCurveType(System.String,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the type of the curve.
            </summary>
            <param name="target">The target.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputRange(System.String,Vector.CANoe.VTS.OutputRange)">
            <summary>
            Sets the output range.
            </summary>
            <param name="target">The target.</param>
            <param name="range">The range.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMResistanceHigh(System.String,System.Double)">
            <summary>
            Sets the PWM resistance high.
            </summary>
            <param name="target">The target.</param>
            <param name="resistance">The resistance.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMResistanceLow(System.String,System.Double)">
            <summary>
            Sets the PWM resistance low.
            </summary>
            <param name="target">The target.</param>
            <param name="resistance">The resistance.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMVoltageLow(System.String,System.Double)">
            <summary>
            Sets the PWM voltage low.
            </summary>
            <param name="target">The target.</param>
            <param name="voltage">The voltage.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetStimulationMode(System.String,Vector.CANoe.VTS.StimulationMode)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetWFParams(System.String,System.Double,System.Double,System.Int32)">
            <summary>
            Sets the waveform params.
            </summary>
            <param name="target">The target.</param>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetWFParams(System.String,System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="target">The target.</param>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMRepeats(System.String,System.Int32)">
            <summary>
            Sets the number of waveform repeats.
            </summary>
            <param name="target">The target.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.StartStimulation(System.String)">
            <summary>
            Starts the stimulation.
            </summary>
            <param name="target">The target.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.StopStimulation(System.String)">
            <summary>
            Stops the stimulation.
            </summary>
            <param name="target">The target.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputMask(System.String,Vector.CANoe.VTS.OutputMask)">
            <summary>
            Stops the stimulation.
            </summary>
            <param name="target">The target.</param>
            <param name="rowMask">The row mask.</param>
            <exception cref="T:Vector.CANoe.VTS.VTFunctionCallException">
            </exception>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.LoadWFBitstream(System.String,System.String)">
            <summary>
            Loads a waveform for the bitstream.
            </summary>
            <param name="target">The target.</param>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetPWMVoltageHigh(System.String,System.Double)">
            <summary>
            Sets the PWM voltage high.
            </summary>
            <param name="target">The target.</param>
            <param name="voltage">The voltage.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold1To8(System.String,System.Double)">
            <summary>
            Sets the thresholds 1 to 8.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold9To16(System.String,System.Double)">
            <summary>
            Sets the thresholds 9 to 16.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold_VT2848(System.String,System.Int32,System.Double)">
            <summary>
            Sets the threshold for VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="group">The group.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold1To8_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 1 to 8 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold9To16_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 9 to 16 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold17To24_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 17 to 24 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold25To32_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 25 to 32 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold33To40_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 33 to 40 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetThreshold41To48_VT2848(System.String,System.Double)">
            <summary>
            Sets the threshold 41 to 48 VT2848.
            </summary>
            <param name="target">The target.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputMode(System.String,Vector.CANoe.VTS.VT2848OutputMode)">
            <summary>
            Sets the output mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource(System.String,System.Int32,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source.
            </summary>
            <param name="target">The target.</param>
            <param name="group">The group.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource1To4(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source1 to4.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource5To8(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source5 to8.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource9To12(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source9 to12.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource13To16(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source13 to16.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource17To20(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source17 to20.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource21To24(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source21 to24.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource25To28(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source25 to28.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource29To32(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source29 to32.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource33To36(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source33 to36.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource37To40(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source37 to40.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource41To44(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source41 to44.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetOutputSource45To48(System.String,Vector.CANoe.VTS.OutputSource)">
            <summary>
            Sets the output source45 to48.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetMaxCurrentMode(System.String,Vector.CANoe.VTS.MaxCurrentMode,System.Double)">
            <summary>
            Sets the max current mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetMaxCurrentMode(System.String,Vector.CANoe.VTS.MaxCurrentMode)">
            <summary>
            Sets the max current mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetRefVoltageMode(System.String,Vector.CANoe.VTS.RefVoltageMode)">
            <summary>
            Sets the ref voltage mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetRefVoltageMode(System.String,Vector.CANoe.VTS.RefVoltageMode,System.Double)">
            <summary>
            Sets the ref voltage mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SetInterconnectionMode(System.String,Vector.CANoe.VTS.InterconnectionMode)">
            <summary>
            Sets the interconnection mode.
            </summary>
            <param name="target">The target.</param>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialOpen(System.String)">
            <summary>
            Opens a serial connection.
            </summary>
            <param name="target">The target.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialClose(System.String)">
            <summary>
            Closes a serial connection.
            </summary>
            <param name="target">The target.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialConfigure(System.String,Vector.CANoe.VTS.BaudRate,Vector.CANoe.VTS.DataBits,Vector.CANoe.VTS.StopBits,Vector.CANoe.VTS.Parity)">
            <summary>
            Configures a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="baudrate">The baudrate.</param>
            <param name="db">The number of data bits.</param>
            <param name="sb">The number of stop bits.</param>
            <param name="parity">The parity.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialReceive(System.String,System.Byte[],System.Int32)">
            <summary>
            Receives from a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="buffer">The buffer to store received data in.</param>
            <param name="size">The size of the buffer.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialSend(System.String,System.Byte[],System.Int32)">
            <summary>
            Sends to a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="buffer">The buffer containing the data to send.</param>
            <param name="number">The number of bytes to send.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialSetOnErrorHandler(System.String,Vector.CANoe.Runtime.Internal.OnSerialError)">
            <summary>
            Sets an event handler for a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialSetOnReceiveHandler(System.String,Vector.CANoe.Runtime.Internal.OnSerialReceived)">
            <summary>
            Sets an event handler for a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.SerialSetOnSendHandler(System.String,Vector.CANoe.Runtime.Internal.OnSerialSent)">
            <summary>
            Sets an event handler for a serial connection.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
            <returns>A value indicating if the method call was successful (see CAPL VTS function documentation for details).</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.WriteWarning(System.String)">
            <summary>
            Writes a warning to the message window.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.StoreState(System.String)">
            <summary>
            Stores the state of a channel.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.CANoeInterface.RestoreState(System.String)">
            <summary>
            Restores the state of a channel.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.ConversionHelper.BitArrayToUint(System.Collections.BitArray)">
            <summary>
            Bits the array to uint.
            </summary>
            <param name="array">The array.</param>
            <returns></returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.Revision">
            <summary>
            Internal class that represents a revision
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Revision.LayoutVersion">
            <summary>
            Gets the layout version.
            </summary>
            <value>The layout version.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Revision.AssemblyVariant">
            <summary>
            Gets the assembly variant.
            </summary>
            <value>The assembly variant.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Revision.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.Revision"/> class.
            </summary>
            <param name="revision">The revision.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Revision.#ctor(Vector.CANoe.VTS.IRevision)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.Revision"/> class.
            </summary>
            <param name="revision">The revision.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Revision.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.Version">
            <summary>
            Internal class that represents a version
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Version.Major">
            <summary>
            Gets the major part of the version.
            </summary>
            <value>The major part of the version.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Version.Minor">
            <summary>
            Gets the minor part of the version.
            </summary>
            <value>The minor part of the version.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Version.Build">
            <summary>
            Gets the build part of the version.
            </summary>
            <value>The build part of the version.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Version.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.Version"/> class.
            </summary>
            <param name="version">The version.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Version.#ctor(Vector.CANoe.VTS.IVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.Version"/> class.
            </summary>
            <param name="version">The version.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Version.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.MessageProvider">
            <summary>
            Helper class for building warning/error messages.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageTypeConversion(System.String,System.String,System.Boolean)">
            <summary>
            Returns an error string.
            </summary>
            <param name="valueName">Name of the value.</param>
            <param name="type">The type.</param>
            <param name="isReadValue">if set to <c>true</c> [is read value].</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageModuleNotFound(System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageChannelNotFound(System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="channelName">Name of the channel.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageValueNotFound(System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="valueName">Name of the value.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageValueAccess(System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="valueName">Name of the value.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageGeneral(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageUnknown(System.String,System.Int32,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="code">The return value of the function call.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageWrongModule(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageStimRunning(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageInvalidName(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageInvalidNameOrValue(System.String,System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageInvalidValue(System.String,System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="value">The invalid value.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageInvalidValueGeneral(System.String,System.String)">
            <summary>
            Gets the error message invalid value general.
            </summary>
            <param name="fctName">Name of the FCT.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageSerialClosed(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageFileAccess(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageFileTransfer(System.String,System.String)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="target">The target.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageBufferSize(System.String,System.Int32)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="size">The invalid size.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageDataBits(System.String,System.Int32)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="dataBits">The invalid number of data bits.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageStopBits(System.String,System.Int32)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="stopBits">The invalid number of stop bits.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageThreshold(System.String,System.Double)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="threshold">The invalid threshold.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetErrorMessageVoltage(System.String,System.Double)">
            <summary>
            Returns an error string.
            </summary>
            <param name="fctName">Name of the function that caused the error.</param>
            <param name="voltage">The invalid voltage.</param>
            <returns>An error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringTimeout">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringMode">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringDuration">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringThreshold">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringStartDelay">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringOutputMode">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringOutputSource">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringType">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringResistance">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringVoltage">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringRepeats">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringParameters">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.MessageProvider.GetStringCallback">
            <summary>
            Returns a part of an error string.
            </summary>
            <returns>A part of an error string.</returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.StringSplitter">
            <summary>
            Helper class to decompose namespace/system variable name strings
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.StringSplitter.GetNamespace(System.String)">
            <summary>
            Gets the namespace out of a full identifier.
            </summary>
            <param name="fullIdentifier">The full identifier.</param>
            <returns>The namespace from the full identifier.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.StringSplitter.GetVariableName(System.String)">
            <summary>
            Gets the name of the variable out of a full identifier.
            </summary>
            <param name="fullIdentifier">The full identifier.</param>
            <returns>The variable name from the full identifier.</returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1x04Channel">
            <summary>
            This class represents a VT1004 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT1x04Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT1x04Channel.mCur">
            <summary>
            Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Cur">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT1x04Channel.mCurrent">
            <summary>
            Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Current">
            <summary>
            Gets the measured current
            </summary>
            <value>The measured current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.CurBit">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Avg">
            <summary>
            Gets the Average input voltage
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Rms">
            <summary>
            Gets the Effective value of input voltage
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Min">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Max">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMFreq">
            <summary>
            Gets the PWM frequency of the input signal.
            </summary>
            <value>The PWM frequency of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMDC">
            <summary>
            Gets the PWM duty cycle of input signal.
            </summary>
            <value>The PWM duty cycle of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMHigh">
            <summary>
            Gets the PWM high voltage.
            </summary>
            <value>The PWM high voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMLow">
            <summary>
            Gets the PWM low voltage.
            </summary>
            <value>The PWM low voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.NumHigh">
            <summary>
            Gets the number of high samples recognized during most recent PWM measurement timespan (sampling frequency 250 kSamples/s).
            </summary>
            <value>The number of high samples recognized during most recent PWM measurement timespan</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.NumLow">
            <summary>
            Gets the number of low samples recognized during most recent PWM measurement timespan (sampling frequency 250 kSamples/s).
            </summary>
            <value>The number of low samples recognized during most recent PWM measurement timespan</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.Avg128Us">
            <summary>
            Gets the SysVar Avg128Us.
            </summary>
            <value>The avg128 us.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayOrgLoad">
            <summary>
            Gets or sets a value indicating whether the original load relay is set.
            </summary>
            <value><c>true</c> if original load relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayShortCircuit">
            <summary>
            Gets or sets a value indicating whether the short circuit relay is set.
            </summary>
            <value><c>true</c> if short circuit relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayIntLoadA">
            <summary>
            Gets or sets a value indicating whether the internal load relay A is set.
            </summary>
            <value><c>true</c> if internal load relay A is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayIntLoadB">
            <summary>
            Gets or sets a value indicating whether the internal load relay B is set.
            </summary>
            <value><c>true</c> if internal load relay B is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelaysIntLoad">
            <summary>
            Gets or sets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayBusBar1A">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 1 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayBusBar1B">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 1 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelaysBusBar1">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayBusBar2A">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 2 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelayBusBar2B">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 2 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.RelaysBusBar2">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.IntLoadResistor">
            <summary>
            Gets the value of the internal load resistor.
            </summary>
            <value>The int load resistor.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.IntLoadCurrent">
            <summary>
            Gets the value of the internal load current.
            </summary>
            <value>The int load current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.LoadMode">
            <summary>
            Sets the load mode.
            </summary>
            <value>The load mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.MeasurementMode">
            <summary>
            Sets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.ImpedanceMode">
            <summary>
            Sets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.LoadControlTimeout">
            <summary>
            Sets the load control timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMMeasurementDuration">
            <summary>
            Sets the duration of the PWM measurement.
            </summary>
            <value>The duration of the PWM measurement.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04Channel.PWMThreshold">
            <summary>
            Sets the PWM threshold.
            </summary>
            <value>The PWM threshold.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04Channel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT1004Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1104Channel">
            <summary>
            This class represents a VT1104 channel
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1104Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT1104Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2808Channel">
            <summary>
              This class represents a VT2808 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2808Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2808Channel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2808Channel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mCurVoltage">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.CurVoltage">
            <summary>
              Gets the momentary value of the measured voltage.
            </summary>
            <value>The momentary value of the measured voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mMinVoltage">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.MinVoltage">
            <summary>
              Gets the minimum value of the measured voltage.
            </summary>
            <value>The minimum value of the measured voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mMaxVoltage">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.MaxVoltage">
            <summary>
              Gets the maximum value of the measured voltage.
            </summary>
            <value>The maximum value of the measured voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mAvgVoltage">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.AvgVoltage">
            <summary>
              Gets the average value of the measured voltage.
            </summary>
            <value>The average value of the measured voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mCurCurrent">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.CurCurrent">
            <summary>
              Gets the  momentary value of the measured current.
            </summary>
            <value>The current value of the measured current.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mMinCurrent">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.MinCurrent">
            <summary>
              Gets the minimum value of the measured current.
            </summary>
            <value>The minimum value of the measured current.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mMaxCurrent">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.MaxCurrent">
            <summary>
              Gets the maximum value of the measured current.
            </summary>
            <value>The maximum value of the measured current.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808Channel.mAvgCurrent">
            <summary>
              Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.AvgCurrent">
            <summary>
              Gets the average value of the measured current.
            </summary>
            <value>The average value of the measured current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.RelayExternalShunt">
            <summary>
            Gets a value indicating whether RelayExternalShunt is true or false.
            </summary>
            <value><c>true</c> if an external shunt shall be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.ExternalShuntValue">
            <summary>
            Gets or sets the value of the external shunt in Ohm.
            </summary>
            <value>The value of the external shunt in Ohm.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808Channel.MinCurrentMeasurementRange">
            <summary>
            Sets the min current measurement range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2832SwitchChannel">
            <summary>
            This class represents a VT2832 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832SwitchChannel.DirectSwitch">
            <summary>
            Gets the relay between this channel (column) and the switch.
            </summary>
            <value>
            The relay between this channel channel (column) and the switch.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832SwitchChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2832Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2832Channel">
            <summary>
            This class represents a VT2832 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2832Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.Switches">
            <summary>
            Gets all switches on this channel.
            </summary>
            <value>
            The switches on this channel.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.RowSwitch1">
            <summary>
            Gets the relay between this channel (column) and row 1.
            </summary>
            <value>
            The relay between this channel (column) and row 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.RowSwitch2">
            <summary>
            Gets the relay between this channel (column) and row 2.
            </summary>
            <value>
            The relay between this channel (column) and row 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.RowSwitch3">
            <summary>
            Gets the relay between this channel (column) and row 3.
            </summary>
            <value>
            The relay between this channel (column) and row 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.RowSwitch4">
            <summary>
            Gets the relay between this channel (column) and row 4.
            </summary>
            <value>
            The relay between this channel (column) and row 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.CurVoltage">
            <summary>
            Gets the currently measured voltage.
            </summary>
            <value>The currently measured voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.CurCurrent">
            <summary>
            Gets the currently measured current.
            </summary>
            <value>The currently measured current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.PWMOutputFreq">
            <summary>
            Gets or sets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.PWMOutputDC">
            <summary>
            Gets or sets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>
            The wave form pause.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>
            The wave form time increment.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.PWMRepeats">
            <summary>
            Sets the PWM repeats.
            </summary>
            <value>The PWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.CurveType">
            <summary>
            Sets the curve type.
            </summary>
            <value>The curve type.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832Channel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2832Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832Channel.SetOutputMask(Vector.CANoe.VTS.OutputMask)">
            <summary>
            Sets the output mask.
            </summary>
            <param name="rowMask">The row mask.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710DioChannel">
            <summary>
              This class represents a VT2710DioChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710DioChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput1">
            <summary>
              Gets the digital input 1.
            </summary>
            <value>
              The digital input 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput2">
            <summary>
              Gets the digital input 2.
            </summary>
            <value>
              The digital input 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput3">
            <summary>
              Gets the digital input 3.
            </summary>
            <value>
              The digital input 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput4">
            <summary>
              Gets the digital input 4.
            </summary>
            <value>
              The digital input 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput5">
            <summary>
              Gets the digital input 5.
            </summary>
            <value>
              The digital input 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput6">
            <summary>
              Gets the digital input 6.
            </summary>
            <value>
              The digital input 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput7">
            <summary>
              Gets the digital input 7.
            </summary>
            <value>
              The digital input 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalInput8">
            <summary>
              Gets the digital input 8.
            </summary>
            <value>
              The digital input 8.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput1">
            <summary>
              Gets the digital output 1.
            </summary>
            <value>
              The digital output 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput2">
            <summary>
              Gets the digital output 2.
            </summary>
            <value>
              The digital output 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput3">
            <summary>
              Gets the digital output 3.
            </summary>
            <value>
              The digital output 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput4">
            <summary>
              Gets the digital output 4.
            </summary>
            <value>
              The digital output 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput5">
            <summary>
              Gets the digital output 5.
            </summary>
            <value>
              The digital output 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput6">
            <summary>
              Gets the digital output 6.
            </summary>
            <value>
              The digital output 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput7">
            <summary>
              Gets the digital output 7.
            </summary>
            <value>
              The digital output 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710DioChannel.DigitalOutput8">
            <summary>
              Gets the digital output 8.
            </summary>
            <value>
              The digital output 8.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710DioChannel.WriteDigitalOutput(System.Int32,System.Boolean)">
            <summary>
              Sets the digital output with the given index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710DioChannel.ReadDigitalInput(System.Int32)">
            <summary>
              Gets the digital output with the given index.
            </summary>
            <param name="index">The index.</param>
            <returns>Returns the current value of the digital input pin.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710DioChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710DioChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710SpiChannel">
            <summary>
              This class represents a VT2710SpiChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710SpiChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710SpiChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710SpiChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710I2CChannel">
            <summary>
              This class represents a VT2710I2CChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710I2CChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710I2CChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710I2CChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710UartChannel">
            <summary>
              This class represents a VT2710UartChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710UartChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710UartChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710UartChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710Rs485Channel">
            <summary>
              This class represents a VT2710Rs485Channel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710Rs485Channel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710Rs485Channel.RelayTermination">
            <summary>
            Gets or sets a value indicating whether RelayTermination is true or false.
            </summary>
            <value><c>true</c> if relys is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710Rs485Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710Rs485Channel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710PiggyChannel">
            <summary>
              This class represents a VT2710PiggyChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710PiggyChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorGndToBusBar1B">
            <summary>
              Gets the relay sensor GND to bus bar1b.
            </summary>
            <value>
              The relay sensor GND to bus bar1b.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorGndToBusBar2B">
            <summary>
              Gets the relay sensor GND to bus bar2b.
            </summary>
            <value>
              The relay sensor GND to bus bar2b.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorGndToSentVdd">
            <summary>
              Gets the relay sensor GND to SENT VDD.
            </summary>
            <value>
              The relay sensor GND to SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorPlusToBusBar1A">
            <summary>
              Gets the relay sensor plus to bus bar1a.
            </summary>
            <value>
              The relay sensor plus to bus bar1a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorPlusToBusBar2A">
            <summary>
              Gets the relay sensor plus to bus bar2a.
            </summary>
            <value>
              The relay sensor plus to bus bar2a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorPlusToSensorGnd">
            <summary>
              Gets the relay sensor plus to sensor GND.
            </summary>
            <value>
              The relay sensor plus to sensor GND.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySensorPlusToSentVdd">
            <summary>
              Gets the relay sensor plus to SENT VDD.
            </summary>
            <value>
              The relay sensor plus to SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySentVddToBusBar1A">
            <summary>
              Gets the relay sent VDD to bus bar1a.
            </summary>
            <value>
              The relay sent VDD to bus bar1a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelaySentVddToBusBar2A">
            <summary>
              Gets the relay sent VDD to bus bar2a.
            </summary>
            <value>
              The relay sent VDD to bus bar2a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelayOpenSentVdd">
            <summary>
              Gets the relay to open SENT VDD.
            </summary>
            <value>
              The relay to open SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelayOpenEcuPlus">
            <summary>
              Gets the relay to open ECU plus.
            </summary>
            <value>
              The relay to open ECU plus.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.RelayOpenSensorPlus">
            <summary>
              Gets the relay to open sensor plus.
            </summary>
            <value>
              The relay to open sensor plus.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.Capacitance">
            <summary>
              Gets the capacitance.
            </summary>
            <value>
              The capacitance.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.Resistance">
            <summary>
              Gets the resistance.
            </summary>
            <value>
              The resistance.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.Psi5IdleCurrentMeas">
            <summary>
              Gets the measured PSI5 idle current.
            </summary>
            <value>
              The idle current.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.Psi5SyncHighVoltageMeas">
            <summary>
              Gets the measured PSI5 high sync voltage.
            </summary>
            <value>
              The PSI5 high sync voltage.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710PiggyChannel.Psi5SyncLowVoltageMeas">
            <summary>
              Gets the measured PSI5 low sync voltage.
            </summary>
            <value>
              The PSI5 low sync voltage.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710PiggyChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710PiggyChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710LvdsChannel">
            <summary>
              This class represents a VT2710LvdsChannel channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2710LvdsChannel.sSysvarNameList">
            <summary>
              List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710LvdsChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
              Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2710LvdsChannel" /> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6306ResistorChannel">
            <summary>
            This class represents a VT6306 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306ResistorChannel.RelayResistor">
            <summary>
            Gets a value indicating whether relay RelayResistor is set.
            </summary>
            <value><c>true</c> if RelayResistor is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306ResistorChannel.Resistance">
            <summary>
            The current value of the resistor.
            </summary>
            <value>gets the current value of the resistor.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6306ResistorChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT6306Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6306Channel">
            <summary>
            This class represents a VT6306 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6306Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayOpenPlus">
            <summary>
            Gets a value indicating whether relay RelayOpenPlus is set.
            </summary>
            <value><c>true</c> if RelayOpenPlus is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayOpenMinus">
            <summary>
            Gets a value indicating whether relay RelayOpenMinus is set.
            </summary>
            <value><c>true</c> if RelayOpenMinus is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether relay RelayShortCircuit is set.
            </summary>
            <value><c>true</c> if RelayShortCircuit is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayPlusToVBattOrGnd">
            <summary>
            Gets a value indicating whether relay RelayPlusToVBattOrGnd is set.
            </summary>
            <value><c>true</c> if RelayPlusToVBattOrGnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayMinusToVBattOrGnd">
            <summary>
            Gets a value indicating whether relay RelayMinusToVBattOrGnd is set.
            </summary>
            <value><c>true</c> if RelayMinusToVBattOrGnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayPlusToBusBar">
            <summary>
            Gets a value indicating whether relay RelayPlusToBusBar is set.
            </summary>
            <value><c>true</c> if RelayPlusToBusBar is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelayMinusToBusBar">
            <summary>
            Gets a value indicating whether relay RelayMinusToBusBar is set.
            </summary>
            <value><c>true</c> if RelayMinusToBusBar is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306Channel.RelaySwapSignalLines">
            <summary>
            Gets a value indicating whether relay RelayMinusToBusBar is set.
            </summary>
            <value><c>true</c> if RelayMinusToBusBar is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6306Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT6306Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6204Channel">
            <summary>
            This class represents a VT6204 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6204Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayOpenHigh">
            <summary>
            Gets or sets a value indicating whether the open high relay is set.
            </summary>
            <value><c>true</c> if open high relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayOpenLow">
            <summary>
            Gets or sets a value indicating whether the open low relay is set.
            </summary>
            <value><c>true</c> if open low relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayPin8">
            <summary>
            Gets or sets a value indicating whether relay pin 8 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 8 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayTermination">
            <summary>
            Gets or sets a value indicating whether the termination relay is set.
            </summary>
            <value><c>true</c> if the termination relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayShortCircuit">
            <summary>
            Gets or sets a value indicating whether the short circuit relay.
            </summary>
            <value><c>true</c> if the short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayBusBarA">
            <summary>
            Gets or sets a value indicating whether the relay bus bar a is set.
            </summary>
            <value><c>true</c> if the relay bus bar a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayBusBarB">
            <summary>
            Gets or sets a value indicating whether the relay bus bar b is set.
            </summary>
            <value><c>true</c> if the relay bus bar b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelaysBusBar">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayHighToVBatt">
            <summary>
            Gets or sets a value indicating whether the relay high to VBatt is set.
            </summary>
            <value><c>true</c> if the relay high to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayHighToGnd">
            <summary>
            Gets or sets a value indicating whether the relay high to gnd is set.
            </summary>
            <value><c>true</c> if the relay high to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayLowToVBatt">
            <summary>
            Gets or sets a value indicating whether the relay low to VBatt is set.
            </summary>
            <value><c>true</c> if the relay low to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayLowToGnd">
            <summary>
            Gets or sets a value indicating whether the relay low to gnd is set.
            </summary>
            <value><c>true</c> if the relay low to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayPin3">
            <summary>
            Gets or sets a value indicating whether relay pin 3 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 3 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayPin4">
            <summary>
            Gets or sets a value indicating whether relay pin 4 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 4 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayPin9">
            <summary>
            Gets or sets a value indicating whether relay pin 9 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 9 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc0">
            <summary>
            Gets or sets a value indicating whether relay RLC0 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC0 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc1">
            <summary>
            Gets or sets a value indicating whether relay RLC1 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC1 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc2">
            <summary>
            Gets or sets a value indicating whether relay RLC2 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC2 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc3">
            <summary>
            Gets or sets a value indicating whether relay RLC3 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC3 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc4">
            <summary>
            Gets or sets a value indicating whether relay RLC4 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC4 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc5">
            <summary>
            Gets or sets a value indicating whether relay RLC5 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC5 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc6">
            <summary>
            Gets or sets a value indicating whether relay RLC6 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC6 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc7">
            <summary>
            Gets or sets a value indicating whether relay RLC7 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC7 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayRlc8">
            <summary>
            Gets or sets a value indicating whether relay RLC8 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC8 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayCANHigh">
            <summary>
            Gets a value indicating whether the CAN high line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayCANLow">
            <summary>
            Gets a value indicating whether the CAN low line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayTermination100Ohm">
            <summary>
            Controls the 100 Ohm termination relay on FlexRay line A.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayOpenBmB">
            <summary>
            Controls the open line relay on FlexRay BM of line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayOpenBpB">
            <summary>
            Controls the open line relay on FlexRay BP of line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayShortCircuitFlexRayB">
            <summary>
            Controls the short circuit relay on FlexRay line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204Channel.RelayTerminationFlexRayB">
            <summary>
            Controls the termination relay on FlexRay line B.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6204Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT6204Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel">
            <summary>
            This class represents a VT2816 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.CurCurrent">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.AvgCurrent">
            <summary>
            Gets the Average input voltage
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.RMSCurrent">
            <summary>
            Gets the Effective value of input voltage
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.MinCurrent">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.MaxCurrent">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2816CurrentMeasurementChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816StimChannelWF">
            <summary>
            This class represents a VT2816 waveform stimulation channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFFactor">
            <summary>
            Gets or sets the wave form's factor.
            </summary>
            <value>The wave form's factor.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFOffset">
            <summary>
            Gets or sets the wave form's offset.
            </summary>
            <value>The wave form's offset.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFMin">
            <summary>
            Gets or sets the wave form's min value.
            </summary>
            <value>The wave form's min value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFMax">
            <summary>
            Gets or sets the wave form's max value.
            </summary>
            <value>The wave form's max value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFPause">
            <summary>
            Gets or sets the wave form's pause value.
            </summary>
            <value>The wave form's pause value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannelWF.WFTimeIncrement">
            <summary>
            Gets or sets the wave form's time increment.
            </summary>
            <value>The wave form's time increment.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.LoadWFVoltage(System.String)">
            <summary>
            Loads a voltage wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2816StimChannelWF"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannelWF.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816MeasurementChannel">
            <summary>
            This class represents a VT2816 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.CurVoltage">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.AvgVoltage">
            <summary>
            Gets the Average input voltage
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.RMSVoltage">
            <summary>
            Gets the Effective value of input voltage
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.MinVoltage">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.MaxVoltage">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.MeasurementMode">
            <summary>
            Sets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816MeasurementChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2816MeasurementChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816StimChannel">
            <summary>
            This class represents a VT2816 stimulation channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2816StimChannel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.Voltage">
            <summary>
            Gets or sets the output voltage.
            </summary>
            <value>The output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.CurOutputVoltage">
            <summary>
            Gets or sets the momentary value of the output voltage.
            </summary>
            <value>The momentary value of the output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.CurveType">
            <summary>
            Sets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.OutputRange">
            <summary>
            Sets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.RelayGnd">
            <summary>
            Gets or sets a value indicating whether the GND relay is set.
            </summary>
            <value><c>true</c> if relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816StimChannel.RelayDGnd">
            <summary>
            Gets or sets a value indicating whether the DGND relay is set.
            </summary>
            <value><c>true</c> if relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2816StimChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816StimChannel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The curve type.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2848PWMStimChannel">
            <summary>
            This class represents a VT2848 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.PWMOutputFreq">
            <summary>
            Gets or sets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.PWMOutputDC">
            <summary>
            Gets or sets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>
            The wave form pause.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>
            The wave form time increment.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.PWMRepeats">
            <summary>
            Sets the PWM repeats.
            </summary>
            <value>The PWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2820Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMStimChannel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2848Channel">
            <summary>
            This class represents a VT2848 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2848Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.CurBit">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.DigitalOutput">
            <summary>
            Gets or sets a value indicating whether the digital output is active.
            </summary>
            <value><c>true</c> if digital output is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.CurveType">
            <summary>
            Sets the curve type.
            </summary>
            <value>The curve type.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848Channel.OutputMode">
            <summary>
            Sets the output mode for this channel.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2848Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel">
            <summary>
            This class represents a VT2848 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel.PWMFreq">
            <summary>
            Gets the measured PWM frequency.
            </summary>
            <value>The measured PWM frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel.PWMDC">
            <summary>
            Gets or sets the measured PWM duty cycle.
            </summary>
            <value>The measured PWM duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel.PWMMeasurementDuration">
            <summary>
            Sets the PWM measurement duration.
            </summary>
            <value>The PWM measurement duration.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2848PWMMeasurementChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2820BusBarChannel">
            <summary>
            This class represents a VT2820 channel
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820BusBarChannel.RelayBusBarA">
            <summary>
            Gets a value indicating whether the bus bar relay a is set.
            </summary>
            <value>
              <c>true</c> if bus bar relay a is set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820BusBarChannel.RelayBusBarB">
            <summary>
            Gets a value indicating whether the bus bar relay b is set.
            </summary>
            <value>
              <c>true</c> if bus bar relay b is set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2820BusBarChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2820BusBarChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2820Channel">
            <summary>
            This class represents a VT2820 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2820Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820Channel.Relay">
            <summary>
            Gets a value indicating whether the relay is set.
            </summary>
            <value>
              <c>true</c> if relay is set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2820Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2820Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01Channel">
            <summary>
            This class represents a VT7x01 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT7x01Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.AvgVoltage">
            <summary>
            Gets the average output voltage.
            </summary>
            <value>The average output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.MinVoltage">
            <summary>
            Gets the minimum output voltage.
            </summary>
            <value>The minimum output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.MaxVoltage">
            <summary>
            Gets the maximum output voltage.
            </summary>
            <value>The maximum output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.AvgCurrent">
            <summary>
            Gets the average output current.
            </summary>
            <value>The average output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.MinCurrent">
            <summary>
            Gets or sets the minimum output current.
            </summary>
            <value>The minimum output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.MaxCurrent">
            <summary>
            Gets or sets the maximum output current.
            </summary>
            <value>The maximum output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.Active">
            <summary>
            Gets or sets a value indicating whether this channel is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7101PowerSupply"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.AuxActive">
            <summary>
            Gets or sets a value indicating whether the auxiliary output is activated.
            </summary>
            <value><c>true</c> if the auxiliary output is activated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Channel.MinCurrentMeasurementRange">
            <summary>
            Sets the min current measurement range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Channel.ResetMinMax">
            <summary>
            Resets the min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7101Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7101Channel">
            <summary>
            This class represents a VT7101 channel
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7101Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7101Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01Supply">
            <summary>
            This class represents a VT7x01 power supply
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT7x01Supply.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Supply.ActVoltage">
            <summary>
            Gets or sets the actual voltage at the power supply unit input.
            </summary>
            <value>The actual voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Supply.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Supply.RefVoltage">
            <summary>
            Gets or sets the output voltage via the reference/control voltage.
            </summary>
            <value>The reference/control voltage.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7x01PowerSupply"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.SetRefVoltageMode(Vector.CANoe.VTS.RefVoltageMode)">
            <summary>
            Sets the ref voltage mode for the internal power supply.
            </summary>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the call was successful</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7x01PowerSupply"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.LoadWFVoltage(System.String)">
            <summary>
            Loads the WF voltage.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7x01Supply"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01Supply1">
            <summary>
            This class represents a VT7x01 power suppy 1
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply1.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7x01Supply1"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7101Supply1">
            <summary>
            This class represents a VT7101 power supply 1
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7101Supply1.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7101Supply1"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01Supply2">
            <summary>
            This class represents a VT7x01 power supply 2
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01Supply2.ReversePolarity">
            <summary>
            Gets or sets a value indicating whether the polarity is reversed.
            </summary>
            <value><c>true</c> if polarity is reversed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01Supply2.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7x01Supply"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7101Supply2">
            <summary>
            This class represents a VT7101 power supply 2
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7101Supply2.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7101Supply2"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01SupplyExternal">
            <summary>
            This class represents an external VT7x01 power supply
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.MaxCurrent">
            <summary>
            Gets or sets the current limitation; set the maximum power supply current via the control voltage.
            </summary>
            <value>The maximum current.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7x01Supply"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialReceive(System.Byte[])">
            <summary>
            Receives serial data.
            </summary>
            <param name="buffer">The buffer where the received data will be stored.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialSend(System.Byte[])">
            <summary>
            Sends serial data.
            </summary>
            <param name="buffer">The buffer to send.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialSend(System.String)">
            <summary>
            Sends serial data.
            </summary>
            <param name="data">The string to send.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialOpen">
            <summary>
            Opens a serial connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialClose">
            <summary>
            Closes a serial connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SerialConfigure(Vector.CANoe.VTS.BaudRate,Vector.CANoe.VTS.DataBits,Vector.CANoe.VTS.StopBits,Vector.CANoe.VTS.Parity)">
            <summary>
            SConfigures the serial connection.
            </summary>
            <param name="baudrate">The baudrate.</param>
            <param name="numberOfDataBits">The number of data bits.</param>
            <param name="numberOfStopBits">The number of stop bits.</param>
            <param name="parity">The parity.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SendHandler(System.Byte[],System.Int32)">
            <summary>
            Handler for send events.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="number">The number.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.ReceiveHandler(System.Byte[],System.Int32)">
            <summary>
            Handler for receive events.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="number">The number.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.ErrorHandler(System.Int32)">
            <summary>
            Handler for error events.
            </summary>
            <param name="errorFlag">The error flag.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SetMaxCurrentMode(Vector.CANoe.VTS.MaxCurrentMode)">
            <summary>
            Sets the max current mode for the internal power supply.
            </summary>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SetMaxCurrentMode(Vector.CANoe.VTS.MaxCurrentMode,System.Double)">
            <summary>
            Sets the max current mode for external power supplies.
            </summary>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.ReinitializeCallbacks">
            <summary>
            Reinitializes the callbacks.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.SetRefVoltageMode(Vector.CANoe.VTS.RefVoltageMode,System.Double)">
            <summary>
            Sets the ref voltage mode for external power supplies.
            </summary>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the call was successful</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7x01PowerSupply"/></example>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.OnSerialSentEvent">
            <summary>
            Occurs when data was sent.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.mOnSerialSentEvent">
            <summary>
            Occurs when data was sent.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.OnSerialReceivedEvent">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.mOnSerialReceivedEvent">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.OnSerialErrorEvent">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01SupplyExternal.mOnSerialErrorEvent">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7001Supply2">
            <summary>
            This class represents a VT7001 power supply 2
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7001Supply2.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7001Supply2"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01SupplyInternal">
            <summary>
            This class represents an internal VT7x01 power supply
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01SupplyInternal.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7x01SupplyInternal"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7101SupplyInternal">
            <summary>
            This class represents an internal VT7101 power supply
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7101SupplyInternal.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7101SupplyInternal"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7001SupplyInternal">
            <summary>
            This class represents an internal VT7001 power supply
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7001SupplyInternal.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7001SupplyInternal"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7001Supply1">
            <summary>
            This class represents a VT7001 power supply 1
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7001Supply1.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7001Supply1"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2004PotiChannel">
            <summary>
            This class represents the first channel of a VT2004 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004PotiChannel.Poti">
            <summary>
            Gets or sets the potentiometer setting.
            </summary>
            <value>The potentiometer setting.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004PotiChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2004Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7001Channel">
            <summary>
            This class represents a VT7001 channel
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7001Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT7001Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6104Channel">
            <summary>
            This class represents a VT6104 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6104Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayOpenHigh">
            <summary>
            Gets or sets a value indicating whether the open high relay is set.
            </summary>
            <value><c>true</c> if open high relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayOpenLow">
            <summary>
            Gets or sets a value indicating whether the open low relay is set.
            </summary>
            <value><c>true</c> if open low relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayPin8">
            <summary>
            Gets or sets a value indicating whether relay pin 8 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 8 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayTermination">
            <summary>
            Gets or sets a value indicating whether the termination relay is set.
            </summary>
            <value><c>true</c> if the termination relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayShortCircuit">
            <summary>
            Gets or sets a value indicating whether the short circuit relay.
            </summary>
            <value><c>true</c> if the short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayBusBarA">
            <summary>
            Gets or sets a value indicating whether the relay bus bar a is set.
            </summary>
            <value><c>true</c> if the relay bus bar a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayBusBarB">
            <summary>
            Gets or sets a value indicating whether the relay bus bar b is set.
            </summary>
            <value><c>true</c> if the relay bus bar b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelaysBusBar">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayHighToVBatt">
            <summary>
            Gets or sets a value indicating whether the relay high to VBatt is set.
            </summary>
            <value><c>true</c> if the relay high to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayHighToGnd">
            <summary>
            Gets or sets a value indicating whether the relay high to gnd is set.
            </summary>
            <value><c>true</c> if the relay high to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayLowToVBatt">
            <summary>
            Gets or sets a value indicating whether the relay low to VBatt is set.
            </summary>
            <value><c>true</c> if the relay low to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayLowToGnd">
            <summary>
            Gets or sets a value indicating whether the relay low to gnd is set.
            </summary>
            <value><c>true</c> if the relay low to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayPin3">
            <summary>
            Gets or sets a value indicating whether relay pin 3 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 3 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayPin4">
            <summary>
            Gets or sets a value indicating whether relay pin 4 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 4 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayPin9">
            <summary>
            Gets or sets a value indicating whether relay pin 9 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 9 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc0">
            <summary>
            Gets or sets a value indicating whether relay RLC0 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC0 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc1">
            <summary>
            Gets or sets a value indicating whether relay RLC1 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC1 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc2">
            <summary>
            Gets or sets a value indicating whether relay RLC2 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC2 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc3">
            <summary>
            Gets or sets a value indicating whether relay RLC3 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC3 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc4">
            <summary>
            Gets or sets a value indicating whether relay RLC4 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC4 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc5">
            <summary>
            Gets or sets a value indicating whether relay RLC5 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC5 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc6">
            <summary>
            Gets or sets a value indicating whether relay RLC6 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC6 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc7">
            <summary>
            Gets or sets a value indicating whether relay RLC7 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC7 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayRlc8">
            <summary>
            Gets or sets a value indicating whether relay RLC8 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC8 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayCANHigh">
            <summary>
            Gets a value indicating whether the CAN high line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104Channel.RelayCANLow">
            <summary>
            Gets a value indicating whether the CAN low line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6104Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT6104Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2516Channel">
            <summary>
            This class represents a VT2516 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2516Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.Cur">
            <summary>
            Gets or sets the momentary value of the input voltage.
            </summary>
            <value>The momentary value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.Avg">
            <summary>
            Gets or sets the average input voltage.
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.CurBit">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMFreq">
            <summary>
            Gets the measured PWM frequency.
            </summary>
            <value>The measured PWM frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMDC">
            <summary>
            Gets or sets the measured PWM duty cycle.
            </summary>
            <value>The measured PWM duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.RelayBusBar">
            <summary>
            Gets or sets a value indicating whether the bus bar relay is set.
            </summary>
            <value><c>true</c> if bus bar relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.RelayOrgComponent">
            <summary>
            Gets or sets a value indicating whether the original component relay is set.
            </summary>
            <value><c>true</c> if original component relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.RelayLoadResistor">
            <summary>
            Gets or sets a value indicating whether the load resistor relay is set.
            </summary>
            <value><c>true</c> if load resistor relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.RelayVBatt">
            <summary>
            Gets or sets a value indicating whether the VBat relay is set.
            </summary>
            <value><c>true</c> if VBat relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.RelayGnd">
            <summary>
            Gets or sets a value indicating whether the GND relay is set.
            </summary>
            <value><c>true</c> if GND relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.DigitalOutput">
            <summary>
            Gets or sets a value indicating whether the digital output is active.
            </summary>
            <value><c>true</c> if digital output is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMOutputFreq">
            <summary>
            Gets or sets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMOutputDc">
            <summary>
            Gets or sets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMVoltageLow">
            <summary>
            Sets the PWM voltage low.
            </summary>
            <value>The PWM voltage low.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMVoltageHigh">
            <summary>
            Sets the PWM voltage high.
            </summary>
            <value>The PWM voltage high.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMRepeats">
            <summary>
            Sets the PWM repeats.
            </summary>
            <value>The PWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516Channel.PWMMeasurementDuration">
            <summary>
            Sets the PWM measurement duration.
            </summary>
            <value>The PWM measurement duration.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The curve type.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2516Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2004Channel">
            <summary>
            This class represents a VT2004 channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2004Channel.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2004Channel.mCurVoltage">
            <summary>
            Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.CurVoltage">
            <summary>
            Gets the  momentary value of the output voltage
            </summary>
            <value>The current value of the output voltage.</value>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2004Channel.mCurResistance">
            <summary>
            Holds a system variable.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.CurResistance">
            <summary>
            Gets the  momentary value of the output resistance
            </summary>
            <value>The current value of the output resistance.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMFreq">
            <summary>
            Gets the measured PWM frequency.
            </summary>
            <value>The PWM freq.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMDC">
            <summary>
            Gets the measured PWM duty cycle.
            </summary>
            <value>The PWM DC.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.Resistor">
            <summary>
            Gets or sets the resistor output.
            </summary>
            <value>The resistor output.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.Voltage">
            <summary>
            Gets or sets the output voltage.
            </summary>
            <value>The output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayOrgSensor">
            <summary>
            Gets or sets a value indicating whether the original sensor relay is set.
            </summary>
            <value><c>true</c> if original sensor relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayShortCircuit">
            <summary>
            Gets or sets a value indicating whether the short circuit relay is set.
            </summary>
            <value><c>true</c> if short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayBusBar1A">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 1 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayBusBar1B">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 1 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelaysBusBar1">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayBusBar2A">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 2 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelayBusBar2B">
            <summary>
            Gets or sets a value indicating whether the Bus bar relay 2 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.RelaysBusBar2">
            <summary>
            Gets or sets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMResistanceLow">
            <summary>
            Sets the PWM resistance low.
            </summary>
            <value>The PWM resistance low.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMResistanceHigh">
            <summary>
            Sets the PWM resistance high.
            </summary>
            <value>The PWM resistance high.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMVoltageLow">
            <summary>
            Sets the PWM voltage low.
            </summary>
            <value>The PWM voltage low.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMVoltageHigh">
            <summary>
            Sets the PWM voltage high.
            </summary>
            <value>The PWM voltage high.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMRepeats">
            <summary>
            Sets the PWM repeats.
            </summary>
            <value>The PWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFFactor">
            <summary>
            Gets or sets the wave form's factor.
            </summary>
            <value>The wave form's factor.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFOffset">
            <summary>
            Gets or sets the wave form's offset.
            </summary>
            <value>The wave form's offset.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFMin">
            <summary>
            Gets or sets the wave form's min value.
            </summary>
            <value>The wave form's min value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFMax">
            <summary>
            Gets or sets the wave form's max value.
            </summary>
            <value>The wave form's max value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFPause">
            <summary>
            Gets or sets the wave form's pause value.
            </summary>
            <value>The wave form's pause value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004Channel.WFTimeIncrement">
            <summary>
            Gets or sets the wave form's time increment.
            </summary>
            <value>The wave form's time increment.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.LoadWFVoltage(System.String)">
            <summary>
            Loads a voltage wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.LoadWFResistance(System.String)">
            <summary>
            Loads a resistance wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The stimulation ype.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT2004Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1004Channel">
            <summary>
            This class represents a VT1004 channel
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1004Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VT1004Channel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent module.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7900Channel">
            <summary>
            This class represents a VT7009 channel
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7900Channel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule)">
            <summary>
            Initializes a new instance of a VT7009Channel class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VTUserValueHolder">
            <summary>
            Internal class that is used by the FPGA Boards, the VT7900 and VT7900 channel to manage their values.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTUserValueHolder.mValues">
            <summary>
            Private list of values
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.Values">
            <summary>
            Gets the values.
            </summary>
            <value>Collection of values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.ReadValues">
            <summary>
            Gets the read values.
            </summary>
            <value>Collection of read values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.WriteValues">
            <summary>
            Gets the write values.
            </summary>
            <value>Collection of write values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.ValueNames">
            <summary>
            Gets the value names.
            </summary>
            <value>Collection of value names.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.ReadValueNames">
            <summary>
            Gets the read value names.
            </summary>
            <value>Collection of read value names.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTUserValueHolder.WriteValueNames">
            <summary>
            Gets the write value names.
            </summary>
            <value>Collection of write value names.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTUserValueHolder.#ctor(System.Collections.Generic.IEnumerable{Vector.CANoe.Runtime.Internal.IVTValueInfo},System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of a VTUserValueHolder class.
            </summary>
            <param name="values">The values list.</param>
            <param name="name">The name of the entity that own these values.</param>
            <param name="sysvarIgnoreList">The list of sysvar names that shell be ignored (non user FPGA names).</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTUserValueHolder.GetValue(System.String)">
            <summary>
            Gets a value by its name.
            </summary>
            <param name="name">The name of the value to get.</param>
            <returns>The value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTUserValueHolder.GetReadValue(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTUserValueHolder.GetWriteValue(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1x04">
            <summary>
            This class represents a VT1004 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT1x04.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.TriggerCount">
            <summary>
            Gets the number of triggers on this module.
            </summary>
            <value>
            The number of triggers on this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaySwapBusBar1A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaySwapBusBar1B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaysSwapBusBar1">
            <summary>
            Gets or sets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaySwapBusBar2A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaySwapBusBar2B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.RelaysSwapBusBar2">
            <summary>
            Gets or sets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger1Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger2Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger3Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger4Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger5Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger6Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger7Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger8Event">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger1EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger2EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger3EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger4EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger5EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger6EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger7EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1x04.Trigger8EventCount">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT1004 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04.SetTriggerParams(System.Int32,System.Int32,Vector.CANoe.VTS.TriggerEdgeType)">
            <summary>
            Sets trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="sourceChannel">The channel that acts as the trigger's source.</param>
            <param name="edgeType">Type of edges the trigger reacts to.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04.SetTriggerParamsEx(System.Int32,System.Double,System.Double,System.Collections.BitArray,System.Collections.BitArray,System.UInt32,Vector.CANoe.VTS.TriggerType)">
            <summary>
            Sets extended trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="minPulseWidth">Minimum width of pulses the trigger reacts to.</param>
            <param name="restartTime">The restart time of the trigger in seconds.</param>
            <param name="preTriggers">The precondition triggers for the trigger.</param>
            <param name="restartTriggers">The restart triggers for the trigger.</param>
            <param name="thresholdEventCount">The threshold event count after which the trigger can fire.</param>
            <param name="extSettings">The extended settings of the trigger.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04.SetTriggerParamsEx(System.Int32,System.Double,System.Double,System.UInt32,System.UInt32,System.UInt32,Vector.CANoe.VTS.TriggerType)">
            <summary>
            Sets extended trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="minPulseWidth">Minimum width of pulses the trigger reacts to.</param>
            <param name="restartTime">The restart time of the trigger in seconds.</param>
            <param name="preTriggers">The precondition triggers for the trigger.</param>
            <param name="restartTriggers">The restart triggers for the trigger.</param>
            <param name="thresholdEventCount">The threshold event count after which the trigger can fire.</param>
            <param name="extSettings">The extended settings of the trigger.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1x04.StartTrigger(System.Int32)">
            <summary>
            Starts a trigger
            </summary>
            <param name="trigger">The trigger to start.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1104">
            <summary>
            This class represents a VT1104 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1104.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1104.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1104.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1104.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1104.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1104.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT1104 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2710">
            <summary>
              This class represents a VT2710 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.Channels">
            <summary>
              Gets the channels of this module.
            </summary>
            <value>
              The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.PiggyChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.PiggyChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.PiggyChannel3">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.PiggyChannel4">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.SpiChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.SpiChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.UartChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.UartChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.Rs485Channel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.Rs485Channel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.I2Channel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.I2Channel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.LvdsChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.LvdsChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.DioChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.DioChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaySwapBusBar1A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaySwapBusBar1B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaysSwapBusBar1">
            <summary>
            Gets or sets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaySwapBusBar2A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaySwapBusBar2B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2710.RelaysSwapBusBar2">
            <summary>
            Gets or sets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2710.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
              Initializes a new instance of a VT2710 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2808">
            <summary>
              This class represents a VT2808 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2808.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channels">
            <summary>
              Gets the channels of this module.
            </summary>
            <value>
              The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel1">
            <summary>
              Gets the channel 1.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel2">
            <summary>
              Gets the channel 2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel3">
            <summary>
              Gets the channel 3.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel4">
            <summary>
              Gets the channel 4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel5">
            <summary>
              Gets the channel 5.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel6">
            <summary>
              Gets the channel 6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel7">
            <summary>
              Gets the channel 7.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.Channel8">
            <summary>
              Gets the channel 8.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayAGnd12">
            <summary>
            Gets a value indicating whether RelayAGnd12 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayAGnd34">
            <summary>
            Gets a value indicating whether RelayAGnd34 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayAGnd56">
            <summary>
            Gets a value indicating whether RelayAGnd56 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayAGnd78">
            <summary>
            Gets a value indicating whether RelayAGnd78 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayComRef12">
            <summary>
            Gets a value indicating whether RelayComRef12 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayComRef34">
            <summary>
            Gets a value indicating whether RelayComRef34 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayComRef56">
            <summary>
            Gets a value indicating whether RelayComRef56 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2808.RelayComRef78">
            <summary>
            Gets a value indicating whether RelayComRef78 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2808.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
              Initializes a new instance of a VT2808 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816A">
            <summary>
            This class represents a VT2816 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816A.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816A.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816A.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2816 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2832">
            <summary>
            This class represents a VT2832 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>
            The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>
            Channel 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>
            Channel 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>
            Channel 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>
            Channel 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>
            Channel 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>
            Channel 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel7">
            <summary>
            Gets channel 7.
            </summary>
            <value>
            Channel 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2832.Channel8">
            <summary>
            Gets channel 8.
            </summary>
            <value>
            Channel 8.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2832.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2832 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6306">
            <summary>
            This class represents a VT6306 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6306.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>Channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>Channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaySwapBusBarA">
            <summary>
            Gets or sets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaySwapBusBarB">
            <summary>
            Gets or sets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaysSwapBusBar">
            <summary>
            Gets or sets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaySwapVBatt">
            <summary>
            Gets or sets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaySwapGnd">
            <summary>
            Gets or sets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6306.RelaysSwapVBattGnd">
            <summary>
            Gets or sets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6306.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT6306 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6204">
            <summary>
            This class represents a VT6204 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6204.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.RelaySwapBusBarA">
            <summary>
            Gets or sets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.RelaySwapBusBarB">
            <summary>
            Gets or sets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6204.RelaysSwapBusBar">
            <summary>
            Gets or sets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6204.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT6204 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2848">
            <summary>
            This class represents a VT2848 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource1To4">
            <summary>
            Sets the output source for channels 1 to 4.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource5To8">
            <summary>
            Sets the output source for channels 5 to 8.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource9To12">
            <summary>
            Sets the output source for channels 9 to 12.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource13To16">
            <summary>
            Sets the output source for channels 13 to 16.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource17To20">
            <summary>
            Sets the output source for channels 17 to 20.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource21To24">
            <summary>
            Sets the output source for channels 21 to 24.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource25To28">
            <summary>
            Sets the output source for channels 25 to 28.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource29To32">
            <summary>
            Sets the output source for channels 29 to 32.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource33To36">
            <summary>
            Sets the output source for channels 33 to 36.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource37To40">
            <summary>
            Sets the output source for channels 37 to 40.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource41To44">
            <summary>
            Sets the output source for channels 41 to 44.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.OutputSource45To48">
            <summary>
            Sets the output source for channels 45 to 48.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold1To8">
            <summary>
            Sets the threshold for channels 1 to 8.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold9To16">
            <summary>
            Sets the threshold for channels 9 to 16.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold17To24">
            <summary>
            Sets the threshold for channels 17 to 24.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold25To32">
            <summary>
            Sets the threshold for channels 25 to 32.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold33To40">
            <summary>
            Sets the threshold for channels 33 to 40.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Threshold41To48">
            <summary>
            Sets the threshold for channels 41 to 48.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel1">
            <summary>
            Gets the channel 1
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel2">
            <summary>
            Gets the channel 2
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel3">
            <summary>
            Gets the channel 3
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel4">
            <summary>
            Gets the channel 4
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel5">
            <summary>
            Gets the channel 5
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel6">
            <summary>
            Gets the channel 6
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel7">
            <summary>
            Gets the channel 7
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel8">
            <summary>
            Gets the channel 8
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel9">
            <summary>
            Gets the channel 9
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel10">
            <summary>
            Gets the channel 10
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel11">
            <summary>
            Gets the channel 11
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel12">
            <summary>
            Gets the channel 12
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel13">
            <summary>
            Gets the channel 13
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel14">
            <summary>
            Gets the channel 14
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel15">
            <summary>
            Gets the channel 15
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel16">
            <summary>
            Gets the channel 16
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel17">
            <summary>
            Gets the channel 17
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel18">
            <summary>
            Gets the channel 18
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel19">
            <summary>
            Gets the channel 19
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel20">
            <summary>
            Gets the channel 20
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel21">
            <summary>
            Gets the channel 21
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel22">
            <summary>
            Gets the channel 22
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel23">
            <summary>
            Gets the channel 23
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel24">
            <summary>
            Gets the channel 24
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel25">
            <summary>
            Gets the channel 25
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel26">
            <summary>
            Gets the channel 26
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel27">
            <summary>
            Gets the channel 27
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel28">
            <summary>
            Gets the channel 28
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel29">
            <summary>
            Gets the channel 29
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel30">
            <summary>
            Gets the channel 30
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel31">
            <summary>
            Gets the channel 31
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel32">
            <summary>
            Gets the channel 32
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel33">
            <summary>
            Gets the channel 33
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel34">
            <summary>
            Gets the channel 34
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel35">
            <summary>
            Gets the channel 35
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel36">
            <summary>
            Gets the channel 36
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel37">
            <summary>
            Gets the channel 37
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel38">
            <summary>
            Gets the channel 38
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel39">
            <summary>
            Gets the channel 39
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel40">
            <summary>
            Gets the channel 40
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel41">
            <summary>
            Gets the channel 41
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel42">
            <summary>
            Gets the channel 42
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel43">
            <summary>
            Gets the channel 43
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel44">
            <summary>
            Gets the channel 44
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel45">
            <summary>
            Gets the channel 45
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel46">
            <summary>
            Gets the channel 46
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel47">
            <summary>
            Gets the channel 47
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2848.Channel48">
            <summary>
            Gets the channel 48
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2848.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2848 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2820">
            <summary>
            This class represents a VT2820 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>
            The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channels1To12">
            <summary>
            Gets the channels 1 to 12 of this module.
            </summary>
            <value>
            The channels 1 to 12 of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>
            Channel 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>
            Channel 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>
            Channel 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>
            Channel 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>
            Channel 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>
            Channel 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel7">
            <summary>
            Gets channel 7.
            </summary>
            <value>
            Channel 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel8">
            <summary>
            Gets channel 8.
            </summary>
            <value>
            Channel 8.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel9">
            <summary>
            Gets channel 9.
            </summary>
            <value>
            Channel 9.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel10">
            <summary>
            Gets channel 10.
            </summary>
            <value>
            Channel 10.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel11">
            <summary>
            Gets channel 11.
            </summary>
            <value>
            Channel 11.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel12">
            <summary>
            Gets channel 12.
            </summary>
            <value>
            Channel 12.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channels13To20">
            <summary>
            Gets the channels 13 to 20 of this module.
            </summary>
            <value>
            The channels 13 to 20 of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel13">
            <summary>
            Gets channel 13.
            </summary>
            <value>
            Channel 13.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel14">
            <summary>
            Gets channel 14.
            </summary>
            <value>
            Channel 14.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel15">
            <summary>
            Gets channel 15.
            </summary>
            <value>
            Channel 15.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel16">
            <summary>
            Gets channel 16.
            </summary>
            <value>
            Channel 16.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel17">
            <summary>
            Gets channel 17.
            </summary>
            <value>
            Channel 17.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel18">
            <summary>
            Gets channel 18.
            </summary>
            <value>
            Channel 18.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel19">
            <summary>
            Gets channel 19.
            </summary>
            <value>
            Channel 19.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2820.Channel20">
            <summary>
            Gets channel 20.
            </summary>
            <value>
            Channel 20.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2820.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2820 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2816">
            <summary>
            This class represents a VT2816 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>
            The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel1">
            <summary>
            Gets the channel 1.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel2">
            <summary>
            Gets the channel 2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel3">
            <summary>
            Gets the channel 3.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel4">
            <summary>
            Gets the channel 4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel5">
            <summary>
            Gets the channel 5.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel6">
            <summary>
            Gets the channel 6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel7">
            <summary>
            Gets the channel 7.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel8">
            <summary>
            Gets the channel 8.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel9">
            <summary>
            Gets the channel 9.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel10">
            <summary>
            Gets the channel 10.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel11">
            <summary>
            Gets the channel 11.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel12">
            <summary>
            Gets the channel 12.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel13">
            <summary>
            Gets the channel 13.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel14">
            <summary>
            Gets the channel 14.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2816.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo,System.Boolean)">
            <summary>
            Initializes a new instance of a VT2816 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
            <param name="createChannels">Flag to control if channels shall be created.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816.StoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2816.RestoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude/>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7x01">
            <summary>
            This class represents a VT7x01 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7x01.InterconnectionMode">
            <summary>
            Sets the interconnection mode.
            </summary>
            <value>The interconnection mode.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialOpen">
            <summary>
            Opens a serial connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialClose">
            <summary>
            Closes a serial connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialConfigure(Vector.CANoe.VTS.BaudRate,Vector.CANoe.VTS.DataBits,Vector.CANoe.VTS.StopBits,Vector.CANoe.VTS.Parity)">
            <summary>
            Configures the serial connection.
            </summary>
            <param name="baudrate">The baudrate.</param>
            <param name="numberOfDataBits">The number of data bits.</param>
            <param name="numberOfStopBits">The number of stop bits.</param>
            <param name="parity">The parity.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialReceive(System.Byte[])">
            <summary>
            Receives serial data.
            </summary>
            <param name="buffer">The buffer where the received data will be stored.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialSend(System.Byte[])">
            <summary>
            Sends serial data.
            </summary>
            <param name="buffer">The buffer to send.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SerialSend(System.String)">
            <summary>
            Sends serial data.
            </summary>
            <param name="data">The string to send.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.SendHandler(System.Byte[],System.Int32)">
            <summary>
            Handler for send events.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="number">The number.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.ReceiveHandler(System.Byte[],System.Int32)">
            <summary>
            Handler for receive events.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="number">The number.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.ErrorHandler(System.Int32)">
            <summary>
            Handler for error events.
            </summary>
            <param name="errorFlag">The error flag.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.ReinitializeCallbacks">
            <summary>
            Reinitializes the callbacks.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7x01.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT7001 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.OnSerialSentEvent">
            <summary>
            Occurs when data was sent.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.mOnSerialSentEvent">
            <summary>
            Occurs when data was sent.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.OnSerialReceivedEvent">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.mOnSerialReceivedEvent">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.OnSerialErrorEvent">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Vector.CANoe.VTSInternal.VT7x01.mOnSerialErrorEvent">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7101">
            <summary>
            This class represents a VT7101 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7101.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7101.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT7101 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7900">
            <summary>
            This class represents a VT7009 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7900.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7900.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT7009 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VTModuleUnknown">
            <summary>
            This class represents a generic VT module
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModuleUnknown.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VTModule"/> class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT1004">
            <summary>
            This class represents a VT1004 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1004.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1004.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1004.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1004.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT1004.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT1004.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT1004 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2004">
            <summary>
            This class represents a VT2004 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2004.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaySwapBusBar1A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaySwapBusBar1B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaysSwapBusBar1">
            <summary>
            Gets or sets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaySwapBusBar2A">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaySwapBusBar2B">
            <summary>
            Gets or sets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2004.RelaysSwapBusBar2">
            <summary>
            Gets or sets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2004.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2004 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT2516">
            <summary>
            This class represents a VT2516 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT2516.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel1">
            <summary>
            Gets the channel 1.
            </summary>
            <value>The channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel2">
            <summary>
            Gets the channel 2.
            </summary>
            <value>The channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel3">
            <summary>
            Gets the channel 3.
            </summary>
            <value>The channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel4">
            <summary>
            Gets the channel 4.
            </summary>
            <value>The channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel5">
            <summary>
            Gets the channel 5.
            </summary>
            <value>The channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel6">
            <summary>
            Gets the channel 6.
            </summary>
            <value>The channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel7">
            <summary>
            Gets the channel 7.
            </summary>
            <value>The channel 7.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel8">
            <summary>
            Gets the channel 8.
            </summary>
            <value>The channel 8.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel9">
            <summary>
            Gets the channel 9.
            </summary>
            <value>The channel 9.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel10">
            <summary>
            Gets the channel 10.
            </summary>
            <value>The channel 10.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel11">
            <summary>
            Gets the channel 11.
            </summary>
            <value>The channel 11.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel12">
            <summary>
            Gets the channel 12.
            </summary>
            <value>The channel 12.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel13">
            <summary>
            Gets the channel 13.
            </summary>
            <value>The channel 13.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel14">
            <summary>
            Gets the channel 14.
            </summary>
            <value>The channel 14.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
            <value>The channel 15.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
            <value>The channel 16.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.RelayBusBarB">
            <summary>
            Gets or sets the relay bus bar B.
            </summary>
            <value>The relay bus bar B.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.RelaySwapBusBar">
            <summary>
            Gets or sets a value indicating whether the bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bar is swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Threshold1To8">
            <summary>
            Sets the threshold1 1 to 8.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT2516.Threshold9To16">
            <summary>
            Sets the threshold1 9 to 16.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT2516.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT2516 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT6104">
            <summary>
            This class represents a VT6104 module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VT6104.sSysvarNameList">
            <summary>
            List of fixed sysvar names (non user FPGA)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.Channels">
            <summary>
            Gets all channels of this module.
            </summary>
            <value>All channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.RelaySwapBusBarA">
            <summary>
            Gets or sets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.RelaySwapBusBarB">
            <summary>
            Gets or sets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT6104.RelaysSwapBusBar">
            <summary>
            Gets or sets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT6104.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT6104 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VT7001">
            <summary>
            This class represents a VT7001 module
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VT7001.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VT7001.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Initializes a new instance of a VT7001 class.
            </summary>
            <param name="moduleInfo">The module info.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VTChannel">
            <summary>
            This interface represents a generic VT channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTChannel.mChannelInfo">
            <summary>
            Information for this channel
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTChannel.mSysvarIgnoreList">
            <summary>
            The list of sysvar names that shell be ignored (non user FPGA names)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTChannel.mParent">
            <summary>
            Protected member holding the channel's parent
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.ParentModule">
            <summary>
            Gets the parent module.
            </summary>
            <value>The parent module.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.Name">
            <summary>
            This property represents the CANoe name of the entity
            </summary>
            <value></value>
            <returns>The name of the entity in CANoe</returns>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserValues">
            <summary>
            Gets the values of this channel.
            </summary>
            <value>The values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserReadValues">
            <summary>
            Gets the read values of this channel.
            </summary>
            <value>The read values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserWriteValues">
            <summary>
            Gets the write values of this channel.
            </summary>
            <value>The write values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserValueNames">
            <summary>
            Gets the names of this channel's values.
            </summary>
            <value>The names of this channel's values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserReadValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's read values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTChannel.UserWriteValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's write values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.#ctor(Vector.CANoe.Runtime.Internal.IVTChannelInfo,Vector.CANoe.VTSInternal.VTModule,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VTChannel"/> class.
            </summary>
            <param name="channelInfo">The channel info.</param>
            <param name="parent">The parent.</param>
            <param name="sysvarIgnoreList">The list of sysvar names that shell be ignored (non user FPGA names).</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.StoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.RestoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.GetUserValue(System.String)">
            <summary>
            Gets a value by its name.
            </summary>
            <param name="name">The name of the value to get.</param>
            <returns>The value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.GetUserReadValue(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.GetUserWriteValue(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.GetUserReadValue``1(System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTChannel.GetUserWriteValue``1(System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VTModule">
            <summary>
            This class represents a generic VT module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mHardwareVariant">
            <summary>
            Hardware variant of this module.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mProductCode">
            <summary>
            Product code of this module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mChannels">
            <summary>
            List of channels
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mSerialNumber">
            <summary>
            Protected member holding the module's serial number
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mRevisionNumber">
            <summary>
            Protected member holding the module's revision number
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mFirmwareVersion">
            <summary>
            Protected member holding the module's firmware version
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mModuleInfo">
            <summary>
            Info for this module
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mSysvarIgnoreList">
            <summary>
            The list of sysvar names that shell be ignored (non user FPGA names)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.VTModule.mIsOffline">
            <summary>
            The online/offline mode.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.TriggerCount">
            <summary>
            Gets the number of triggers on this module.
            </summary>
            <value>
            The number of triggers on this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.SerialNumber">
            <summary>
            Gets the serial number.
            </summary>
            <value>The serial number.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.HardwareVariant">
            <summary>
            The hardware variant of this module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.RevisionNumber">
            <summary>
            Gets the revision number.
            </summary>
            <value>The revision number.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.FirmwareVersion">
            <summary>
            Gets the firmware version.
            </summary>
            <value>The firmware version.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.ChannelNames">
            <summary>
            Gets the channel names.
            </summary>
            <value>The channel names.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.Name">
            <summary>
            This property represents the CANoe name of the entity
            </summary>
            <value></value>
            <returns>The name of the entity in CANoe</returns>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserValues">
            <summary>
            Gets the values of this channel.
            </summary>
            <value>The values of this channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserReadValues">
            <summary>
            Gets the read values of this channel.
            </summary>
            <value>The read values of this channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserWriteValues">
            <summary>
            Gets the write values of this channel.
            </summary>
            <value>The write values of this channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserValueNames">
            <summary>
            Gets the names of this channel's values.
            </summary>
            <value>The names of this channel's values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserReadValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's read values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.UserWriteValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's write values.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.VTModule.IsOffline">
            <summary>
            Gets the operation mode of the module.
            </summary>
            <value>The operation mode of the module.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.#ctor(Vector.CANoe.Runtime.Internal.IVTModuleInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.VTModule"/> class.
            </summary>
            <param name="moduleInfo">The module info.</param>
            <param name="sysvarIgnoreList">The list of sysvar names that shell be ignored (non user FPGA names).</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetChannel(System.String)">
            <summary>
            Gets the a channel by its name.
            </summary>
            <param name="name">The name.</param>
            <returns>The channel</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.StoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.RestoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserValue(System.String)">
            <summary>
            Gets a value by its name.
            </summary>
            <param name="name">The name of the value to get.</param>
            <returns>The value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserReadValue(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserReadValue``1(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the read value to get.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserWriteValue(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserWriteValue``1(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserReadValue(System.String,System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserWriteValue(System.String,System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserReadValue``1(System.String,System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTModule.GetUserWriteValue``1(System.String,System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.VTSInitHelper">
            <summary>
            Internal class. Do not use!
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTSInitHelper.#ctor">
            <summary>
            Internal method. Do not use!
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTSInitHelper.MeasurementStop">
            <summary>
            Is called when the CANoe measurement stops.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.VTSInitHelper.MeasurementStart">
            <summary>
            Is called when the CANoe measurement starts.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.WriteValueTwice`1">
            <summary>
            This class represents two CANoe System Variables
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.WriteValueTwice`1.Value">
            <summary>
            Gets or sets the current value of the system variable.
            </summary>
            <value>The value of the system variable.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.WriteValueTwice`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SysVarReadWrite class.
            </summary>
            <param name="canoeName1">The canoe name of system variable 1.</param>
            <param name="canoeName2">The canoe name of system variable 2.</param>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.WriteValueTwice`1.Dispose">
            <summary>
            Reinitializes this instance.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.WriteValueTwice`1.LazyInit">
            <summary>
            Initializes the system variable if necessary.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.IWriteValueFunction`2">
            <summary>
            This interface represents a value that is set via VTS function calls.
            </summary>
            <typeparam name="T1">The type of the first parameter.</typeparam>
            <typeparam name="T2">The type of the second parameter.</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.WriteValueFunction`2">
            <summary>
            This class represents a CANoe System Variable
            </summary>
            <typeparam name="T">The type of the first parameter.</typeparam>
            <typeparam name="U">The type of the second parameter.</typeparam>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.WriteValueFunction`2.FunctionToCall">
            <summary>
            Delegate type for VTS function calls
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.WriteValueFunction`2.mFunctionToCall">
            <summary>
            Delegate for VTS function calls
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.WriteValueFunction`2.IsAvailable">
            <summary>
            Gets a value indicating whether this value is available.
            </summary>
            <value>
            	<c>true</c> if this value is available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.WriteValueFunction`2.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.WriteValueFunction`2.#ctor(System.String,Vector.CANoe.VTSInternal.WriteValueFunction{`0,`1}.FunctionToCall)">
            <summary>
            Initializes a new instance of the SysVarReadOnly class.
            </summary>
            <param name="canoeName">Name of the canoe.</param>
            <param name="functionToCall">The function to call.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.Value">
            <summary>
            Base class for more specialized SysVar classes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.Value.mCanoeName">
            <summary>
            CANoe name (Namespace + SysVar name)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.Value.mSysVarInternal">
            <summary>
            Internal CANoe SysVar
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Value.IsAvailable">
            <summary>
            Gets a value indicating whether this value is available.
            </summary>
            <value>
            	<c>true</c> if this value is available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Value.Name">
            <summary>
            Gets the name of this value.
            </summary>
            <value>The name of this value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Value.Timestamp">
            <summary>
            Gets the timestamp of the value.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.Value.TimestampOriginal">
            <summary>
            Gets the timestamp of the value before synchronization may have changed it.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Value.Dispose">
            <summary>
            Reinitializes this instance.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.Value.LazyInit">
            <summary>
            Initializes the system variable if necessary.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.ReadValueTransferCycle`1">
            <summary>
            This class represents a CANoe System Variable
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.ReadValueTransferCycle`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.ReadValueTransferCycle`1.TransferCycle">
            <summary>
            Gets or sets the transfer cycle.
            </summary>
            <value>The transfer cycle.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.ReadValueTransferCycle`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SysVarReadOnly class.
            </summary>
            <param name="canoeName">Name of the canoe.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.ReadValueIntegrationTime`1">
            <summary>
            This class represents a CANoe System Variable
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTSInternal.ReadValueIntegrationTime`1.mIntegrationTime">
            <summary>
            Integration time of the sysVar
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.ReadValueIntegrationTime`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.ReadValueIntegrationTime`1.IntegrationTime">
            <summary>
            Gets or sets the integration time.
            </summary>
            <value>The integration time.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.ReadValueIntegrationTime`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VTVariableReadWithIntegrationTime class.
            </summary>
            <param name="canoeName">Name of the canoe.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.ReadWriteValue`1">
            <summary>
            This class represents a CANoe System Variable
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.ReadWriteValue`1.Value">
            <summary>
            Gets or sets the current value of the system variable.
            </summary>
            <value>The value of the system variable.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.ReadWriteValue`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SysVarReadWrite class.
            </summary>
            <param name="canoeName">Name of the canoe.</param>
        </member>
        <member name="T:Vector.CANoe.VTSInternal.WriteValue`1">
            <summary>
            This class represents a write only CANoe System Variables
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
        </member>
        <member name="P:Vector.CANoe.VTSInternal.WriteValue`1.Value">
            <summary>
            Gets or sets the current value of the system variable.
            </summary>
            <value>The value of the system variable.</value>
        </member>
        <member name="M:Vector.CANoe.VTSInternal.WriteValue`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTSInternal.WriteValue`1"/> class.
            </summary>
            <param name="canoeName">Name of the canoe.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.OnSerialSentHandler">
            <summary>
            Delegate for serial sent events.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OnSerialReceivedHandler">
            <summary>
            Delegate for serial received events.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OnSerialErrorHandler">
            <summary>
            Delegate for serial error events.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.SerialSentEventArgs">
            <summary>
            Event args for serial sent events
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.SerialSentEventArgs.Buffer">
            <summary>
            Gets the data buffer.
            </summary>
            <value>The data buffer.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.SerialSentEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.SerialSentEventArgs"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.SerialReceivedEventArgs">
            <summary>
            Event args for serial received events
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.SerialReceivedEventArgs.Buffer">
            <summary>
            Gets the data buffer.
            </summary>
            <value>The data buffer.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.SerialReceivedEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.SerialReceivedEventArgs"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.SerialErrorEventArgs">
            <summary>
            Event args for serial error events
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.SerialErrorEventArgs.ErrorFlags">
            <summary>
            Gets the error flags.
            </summary>
            <value>The error flags.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.SerialErrorEventArgs.#ctor(Vector.CANoe.VTS.SerialErrors)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.SerialErrorEventArgs"/> class.
            </summary>
            <param name="errorFlags">The error flags.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTSystemException">
            <summary>
            Base class for all VTSystem related exceptions.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystemException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTSystemException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTModuleNotFoundException">
            <summary>
            Is thrown when a module is requested but not found.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTModuleNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTModuleNotFoundException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTChannelNotFoundException">
            <summary>
            Is thrown when a channel is requested but not found.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTChannelNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTChannelNotFoundException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTValueNotFoundException">
            <summary>
            Is thrown when a value is requested but not found.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTValueNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTValueNotFoundException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTValueAccessException">
            <summary>
            Is thrown when a unavailable system variable is used.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTValueAccessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTValueAccessException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.VTFunctionCallException">
            <summary>
            Is thrown when VT function returns an error code.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTFunctionCallException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTFunctionCallException"/> class.
            </summary>
            <param name="msg">The error message.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.IRevision">
            <summary>
            Interface that represents a revision.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Versions"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IRevision.LayoutVersion">
            <summary>
            Gets the layout version.
            </summary>
            <value>The layout version.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IRevision.AssemblyVariant">
            <summary>
            Gets the assembly variant.
            </summary>
            <value>The assembly variant.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.SystemVariableVTS.#ctor(System.String,System.String)">
            <summary>
            Internal constructor. Do not use.
            </summary>
            <param name="nameSpace">nameSpace</param>
            <param name="name">name</param>
        </member>
        <member name="M:Vector.CANoe.VTS.SystemVariableVTS.Dispose">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.SystemVariableVTS.DoInvalidateInstance">
            <summary>
            Internal method.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVersion">
            <summary>
            Interface that represents a version.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Versions"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVersion.Major">
            <summary>
            Gets the major part of the version.
            </summary>
            <value>The major part of the version.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVersion.Minor">
            <summary>
            Gets the minor part of the version.
            </summary>
            <value>The minor part of the version.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVersion.Build">
            <summary>
            Gets the build part of the version.
            </summary>
            <value>The build part of the version.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IRS232">
            <summary>
            This interface represents a RS232 enabled module or channel.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialOpen">
            <summary>
            Opens a serial connection.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialClose">
            <summary>
            Closes a serial connection.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialConfigure(Vector.CANoe.VTS.BaudRate,Vector.CANoe.VTS.DataBits,Vector.CANoe.VTS.StopBits,Vector.CANoe.VTS.Parity)">
            <summary>
            Configures the serial connection.
            </summary>
            <param name="baudrate">The baudrate.</param>
            <param name="numberOfDataBits">The number of data bits.</param>
            <param name="numberOfStopBits">The number of stop bits.</param>
            <param name="parity">The parity.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialReceive(System.Byte[])">
            <summary>
            Receives serial data.
            </summary>
            <param name="buffer">The buffer where the received data will be stored.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialSend(System.Byte[])">
            <summary>
            Sends serial data.
            </summary>
            <param name="buffer">The buffer to send.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IRS232.SerialSend(System.String)">
            <summary>
            Sends serial data.
            </summary>
            <param name="data">The string to send.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
            <returns></returns>
        </member>
        <member name="E:Vector.CANoe.VTS.IRS232.OnSerialSentEvent">
            <summary>
            Occurs when data was sent.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
        </member>
        <member name="E:Vector.CANoe.VTS.IRS232.OnSerialReceivedEvent">
            <summary>
            Occurs when data was received.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
        </member>
        <member name="E:Vector.CANoe.VTS.IRS232.OnSerialErrorEvent">
            <summary>
            Occurs when an error occurred.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001SerialCom"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1x04Channel">
            <summary>
            This interface represents a VT1004 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Cur">
            <summary>
            Gets the  momentary value of the input voltage
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Current">
            <summary>
            Gets the  measured current
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.CurBit">
            <summary>
            Gets the digital input signal (1 sampled value).
            </summary>
            <value>The digital input signal (1 sampled value).</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Avg">
            <summary>
            Gets the Average input voltage
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Rms">
            <summary>
            Gets the Effective value of input voltage
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Min">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Max">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMFreq">
            <summary>
            Gets the PWM frequency of the input signal.
            </summary>
            <value>The PWM frequency of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMDC">
            <summary>
            Gets the PWM duty cycle of input signal.
            </summary>
            <value>The PWM duty cycle of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMHigh">
            <summary>
            Gets the PWM high voltage.
            </summary>
            <value>The PWM high voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMLow">
            <summary>
            Gets the PWM low voltage.
            </summary>
            <value>The PWM low voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.NumHigh">
            <summary>
            Gets the number of high samples recognized during most recent PWM measurement timespan (sampling frequency 250 kSamples/s).
            </summary>
            <value>The number of high samples recognized during most recent PWM measurement timespan</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.NumLow">
            <summary>
            Gets the number of low samples recognized during most recent PWM measurement timespan (sampling frequency 250 kSamples/s).
            </summary>
            <value>The number of low samples recognized during most recent PWM measurement timespan</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.Avg128Us">
            <summary>
            Gets an array containing the last 10 measured mean values.
            </summary>
            <value>Array containing the last 10 measured mean values.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayOrgLoad">
            <summary>
            Gets a value indicating whether the original load relay is set.
            </summary>
            <value><c>true</c> if original load relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether the short circuit relay is set.
            </summary>
            <value><c>true</c> if short circuit relay is set; otherwise, <c>false</c>.</value> 
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayIntLoadA">
            <summary>
            Gets a value indicating whether the internal load relay A is set.
            </summary>
            <value><c>true</c> if internal load relay A is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayIntLoadB">
            <summary>
            Gets a value indicating whether the internal load relay B is set.
            </summary>
            <value><c>true</c> if internal load relay B is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelaysIntLoad">
            <summary>
            Gets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayBusBar1A">
            <summary>
            Gets a value indicating whether the Bus bar relay 1 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayBusBar1B">
            <summary>
            Gets a value indicating whether the Bus bar relay 1 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelaysBusBar1">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayBusBar2A">
            <summary>
            Gets a value indicating whether the Bus bar relay 2 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelayBusBar2B">
            <summary>
            Gets a value indicating whether the Bus bar relay 2 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.RelaysBusBar2">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.IntLoadResistor">
            <summary>
            Gets the value of the internal load resistor.
            </summary>
            <value>The int load resistor.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.IntLoadCurrent">
            <summary>
            Gets the value of the internal load current.
            </summary>
            <value>The int load current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.LoadMode">
            <summary>
            Gets the load mode.
            </summary>
            <value>The load mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.MeasurementMode">
            <summary>
            Gets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.ImpedanceMode">
            <summary>
            Gets the impedance mode.
            </summary>
            <value>The impedance mode.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.LoadControlTimeout">
            <summary>
            Gets the load control timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMMeasurementDuration">
            <summary>
            Gets the duration of the PWM measurement.
            </summary>
            <value>The duration of the PWM measurement.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04Channel.PWMThreshold">
            <summary>
            Gets the PWM threshold.
            </summary>
            <value>The PWM threshold.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT1x04Channel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1104Channel">
            <summary>
            This interface represents a VT1104 channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2808Channel">
            <summary>
              This interface represents a VT2808 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.CurVoltage">
            <summary>
              Gets the current value of the measured voltage.
            </summary>
            <value>The current voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.MinVoltage">
            <summary>
              Gets the minimum value of the measured voltage.
            </summary>
            <value>The current voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.MaxVoltage">
            <summary>
              Gets the maximum value of the measured voltage.
            </summary>
            <value>The current voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.AvgVoltage">
            <summary>
              Gets the average value of the measured voltage.
            </summary>
            <value>The current voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.CurCurrent">
            <summary>
              Gets the current value of the measured current.
            </summary>
            <value>The current current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.MinCurrent">
            <summary>
              Gets the minimum value of the measured current.
            </summary>
            <value>The current current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.MaxCurrent">
            <summary>
              Gets the maximum value of the measured current.
            </summary>
            <value>The current current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.AvgCurrent">
            <summary>
              Gets the average value of the measured current.
            </summary>
            <value>The current current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.RelayExternalShunt">
            <summary>
            Gets a value indicating whether RelayExternalShunt is true or false.
            </summary>
            <value><c>true</c> if an external shunt shall be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.ExternalShuntValue">
            <summary>
            Gets or sets the value of the external shunt in Ohm.
            </summary>
            <value>The value of the external shunt in Ohm.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808Channel.MinCurrentMeasurementRange">
            <summary>
            Gets the min current measurement range.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2808Channel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2832SwitchChannel">
            <summary>
            This interface represents a VT2832 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832SwitchChannel.DirectSwitch">
            <summary>
            Gets the relay between this channel (column) and the switch.
            </summary>
            <value>
            The relay between this channel channel (column) and the switch.
            </value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2832Channel">
            <summary>
            This interface represents a VT2832 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.Switches">
            <summary>
            Gets all switches on this channel.
            </summary>
            <value>
            The switches on this channel.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.RowSwitch1">
            <summary>
            Gets the relay between this channel (column) and row 1.
            </summary>
            <value>
            The relay between this channel (column) and row 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.RowSwitch2">
            <summary>
            Gets the relay between this channel (column) and row 2.
            </summary>
            <value>
            The relay between this channel (column) and row 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.RowSwitch3">
            <summary>
            Gets the relay between this channel (column) and row 3.
            </summary>
            <value>
            The relay between this channel (column) and row 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.RowSwitch4">
            <summary>
            Gets the relay between this channel (column) and row 4.
            </summary>
            <value>
            The relay between this channel (column) and row 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.CurVoltage">
            <summary>
            Gets the currently measured voltage.
            </summary>
            <value>The currently measured voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.CurCurrent">
            <summary>
            Gets the currently measured current.
            </summary>
            <value>The currently measured current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.PWMOutputFreq">
            <summary>
            Gets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.PWMOutputDC">
            <summary>
            Gets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>The wave form pause.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>The wave form time increment.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.PWMRepeats">
            <summary>
            Gets the number of PWM repeats.
            </summary>
            <value>The number ofPWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.StimulationRunning">
            <summary>
            Gets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832Channel.CurveType">
            <summary>
            Gets the type of the curve.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2832Channel.SetOutputMask(Vector.CANoe.VTS.OutputMask)">
            <summary>
            Sets the output mask.
            </summary>
            <param name="rowMask">The row mask.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710Channel">
            <summary>
              This interface represents a IVT2710Channel channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710UartChannel">
            <summary>
              This interface represents a IVT2710UartChannel channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710SpiChannel">
            <summary>
              This interface represents a IVT2710SpiChannel channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710I2CChannel">
            <summary>
              This interface represents a IVT2710I2CChannel channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710Rs485Channel">
            <summary>
              This interface represents a IVT2710Rs485Channel channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710Rs485Channel.RelayTermination">
            <summary>
            Gets or sets the termination relay state.
            </summary>
            <value>
            The termination relay.
            </value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710LvdsChannel">
            <summary>
              This interface represents a IVT2710LvdsChannel channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710DioChannel">
            <summary>
              This interface represents a IVT2710DioChannel channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput1">
            <summary>
              Gets the digital input 1.
            </summary>
            <value>
              The digital input 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput2">
            <summary>
              Gets the digital input 2.
            </summary>
            <value>
              The digital input 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput3">
            <summary>
              Gets the digital input 3.
            </summary>
            <value>
              The digital input 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput4">
            <summary>
              Gets the digital input 4.
            </summary>
            <value>
              The digital input 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput5">
            <summary>
              Gets the digital input 5.
            </summary>
            <value>
              The digital input 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput6">
            <summary>
              Gets the digital input 6.
            </summary>
            <value>
              The digital input 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput7">
            <summary>
              Gets the digital input 7.
            </summary>
            <value>
              The digital input 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalInput8">
            <summary>
              Gets the digital input 8.
            </summary>
            <value>
              The digital input 8.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput1">
            <summary>
              Gets the digital output 1.
            </summary>
            <value>
              The digital output 1.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput2">
            <summary>
              Gets the digital output 2.
            </summary>
            <value>
              The digital output 2.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput3">
            <summary>
              Gets the digital output 3.
            </summary>
            <value>
              The digital output 3.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput4">
            <summary>
              Gets the digital output 4.
            </summary>
            <value>
              The digital output 4.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput5">
            <summary>
              Gets the digital output 5.
            </summary>
            <value>
              The digital output 5.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput6">
            <summary>
              Gets the digital output 6.
            </summary>
            <value>
              The digital output 6.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput7">
            <summary>
              Gets the digital output 7.
            </summary>
            <value>
              The digital output 7.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710DioChannel.DigitalOutput8">
            <summary>
              Gets the digital output 8.
            </summary>
            <value>
              The digital output 8.
            </value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2710DioChannel.ReadDigitalInput(System.Int32)">
            <summary>
              Gets the digital input with the given index.
            </summary>
            <param name="index">The index.</param>
            <returns>Returns the current value of the digital input pin.</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2710DioChannel.WriteDigitalOutput(System.Int32,System.Boolean)">
            <summary>
              Sets the digital output with the given index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710PiggyChannel">
            <summary>
              This interface represents a IVT2710PiggyChannel channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorGndToBusBar1B">
            <summary>
              Gets the relay sensor GND to bus bar1b.
            </summary>
            <value>
              The relay sensor GND to bus bar1b.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorGndToBusBar2B">
            <summary>
              Gets the relay sensor GND to bus bar2b.
            </summary>
            <value>
              The relay sensor GND to bus bar2b.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorGndToSentVdd">
            <summary>
              Gets the relay sensor GND to SENT VDD.
            </summary>
            <value>
              The relay sensor GND to SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorPlusToBusBar1A">
            <summary>
              Gets the relay sensor plus to bus bar1a.
            </summary>
            <value>
              The relay sensor plus to bus bar1a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorPlusToBusBar2A">
            <summary>
              Gets the relay sensor plus to bus bar2a.
            </summary>
            <value>
              The relay sensor plus to bus bar2a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorPlusToSensorGnd">
            <summary>
              Gets the relay sensor plus to sensor GND.
            </summary>
            <value>
              The relay sensor plus to sensor GND.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySensorPlusToSentVdd">
            <summary>
              Gets the relay sensor plus to SENT VDD.
            </summary>
            <value>
              The relay sensor plus to SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySentVddToBusBar1A">
            <summary>
              Gets the relay sent VDD to bus bar1a.
            </summary>
            <value>
              The relay sent VDD to bus bar1a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelaySentVddToBusBar2A">
            <summary>
              Gets the relay sent VDD to bus bar2a.
            </summary>
            <value>
              The relay sent VDD to bus bar2a.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelayOpenSentVdd">
            <summary>
              Gets the relay to open SENT VDD.
            </summary>
            <value>
              The relay to open SENT VDD.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelayOpenEcuPlus">
            <summary>
              Gets the relay to open ECU plus.
            </summary>
            <value>
              The relay to open ECU plus.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.RelayOpenSensorPlus">
            <summary>
              Gets the relay to open sensor plus.
            </summary>
            <value>
              The relay to open sensor plus.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.Capacitance">
            <summary>
              Gets the capacitance.
            </summary>
            <value>
              The capacitance.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.Resistance">
            <summary>
              Gets the resistance.
            </summary>
            <value>
              The resistance.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.Psi5IdleCurrentMeas">
            <summary>
              Gets the measured PSI5 idle current.
            </summary>
            <value>
              The idle current.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.Psi5SyncHighVoltageMeas">
            <summary>
              Gets the measured PSI5 high sync voltage.
            </summary>
            <value>
              The PSI5 high sync voltage.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710PiggyChannel.Psi5SyncLowVoltageMeas">
            <summary>
              Gets the measured PSI5 low sync voltage.
            </summary>
            <value>
              The PSI5 low sync voltage.
            </value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6306ResistorChannel">
            <summary>
            This interface represents a VT6306 channel with resistor.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306ResistorChannel.RelayResistor">
            <summary>
            Gets a value indicating whether the resistor relay is closed.
            </summary>
            <value><c>true</c> if the resistor relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306ResistorChannel.Resistance">
            <summary>
            The current value of the resistor.
            </summary>
            <value>gets the current value of the resistor.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6306Channel">
            <summary>
            This interface represents a VT6306 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayOpenPlus">
            <summary>
            Gets a value indicating whether relay RelayOpenPlus is set.
            </summary>
            <value><c>true</c> if RelayOpenPlus is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayOpenMinus">
            <summary>
            Gets a value indicating whether relay RelayOpenMinus is set.
            </summary>
            <value><c>true</c> if RelayOpenMinus is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether relay RelayShortCircuit is set.
            </summary>
            <value><c>true</c> if RelayShortCircuit is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayPlusToVBattOrGnd">
            <summary>
            Gets a value indicating whether relay RelayPlusToVBattOrGnd is set.
            </summary>
            <value><c>true</c> if RelayPlusToVBattOrGnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayMinusToVBattOrGnd">
            <summary>
            Gets a value indicating whether relay RelayMinusToVBattOrGnd is set.
            </summary>
            <value><c>true</c> if RelayMinusToVBattOrGnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayPlusToBusBar">
            <summary>
            Gets a value indicating whether relay RelayPlusToBusBar is set.
            </summary>
            <value><c>true</c> if RelayPlusToBusBar is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelayMinusToBusBar">
            <summary>
            Gets a value indicating whether relay RelayMinusToBusBar is set.
            </summary>
            <value><c>true</c> if RelayMinusToBusBar is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306Channel.RelaySwapSignalLines">
            <summary>
            Gets a value indicating whether relay RelaySwapSignalLines is set.
            </summary>
            <value><c>true</c> if RelaySwapSignalLines is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01Channel">
            <summary>
            This interface represents a VT7001 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.AvgVoltage">
            <summary>
            Gets the average output voltage.
            </summary>
            <value>The average output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.MinVoltage">
            <summary>
            Gets the minimum output voltage.
            </summary>
            <value>The minimum output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.MaxVoltage">
            <summary>
            Gets the maximum output voltage.
            </summary>
            <value>The maximum output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.AvgCurrent">
            <summary>
            Gets the average output current.
            </summary>
            <value>The average output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.MinCurrent">
            <summary>
            Gets the minimum output current.
            </summary>
            <value>The minimum output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.MaxCurrent">
            <summary>
            Gets the maximum output current.
            </summary>
            <value>The maximum output current.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.Active">
            <summary>
            Gets a value indicating whether this channel is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.AuxActive">
            <summary>
            Gets a value indicating whether the auxiliary output is activated.
            </summary>
            <value><c>true</c> if the auxiliary output is activated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Channel.MinCurrentMeasurementRange">
            <summary>
            Gets the min current measurement range.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Channel.ResetMinMax">
            <summary>
            Resets the min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01Supply">
            <summary>
            This interface represents a VT7001 power supply.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Supply.ActVoltage">
            <summary>
            Gets the actual voltage at the power supply unit input.
            </summary>
            <value>The actual voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Supply.StimulationRunning">
            <summary>
            Gets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Supply.RefVoltage">
            <summary>
            Gets the output voltage via the reference/control voltage.
            </summary>
            <value>The reference/control voltage.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Supply.SetRefVoltageMode(Vector.CANoe.VTS.RefVoltageMode)">
            <summary>
            Sets the ref voltage mode for the internal power supply.
            </summary>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Supply.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Supply.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Supply.LoadWFVoltage(System.String)">
            <summary>
            Loads the WF voltage.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01Supply.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01Supply1">
            <summary>
            This interface represents a VT7001 power supply 1.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01Supply2">
            <summary>
            This interface represents a VT7001 power supply 2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01Supply2.ReversePolarity">
            <summary>
            Gets or sets a value indicating whether the polarity is reversed.
            </summary>
            <value><c>true</c> if polarity is reversed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01SupplyExternal">
            <summary>
            This interface represents an external VT7001 power supply.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01SupplyExternal.MaxCurrent">
            <summary>
            Gets the current limitation; set the maximum power supply current via the control voltage.
            </summary>
            <value>The maximum current.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01SupplyExternal.SetMaxCurrentMode(Vector.CANoe.VTS.MaxCurrentMode)">
            <summary>
            Sets the max current mode for the internal power supply.
            </summary>
            <param name="mode">The mode.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01SupplyExternal.SetMaxCurrentMode(Vector.CANoe.VTS.MaxCurrentMode,System.Double)">
            <summary>
            Sets the max current mode for external power supplies.
            </summary>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT7x01SupplyExternal.SetRefVoltageMode(Vector.CANoe.VTS.RefVoltageMode,System.Double)">
            <summary>
            Sets the ref voltage mode for external power supplies.
            </summary>
            <param name="mode">The mode.</param>
            <param name="factor">The factor.</param>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01SupplyInternal">
            <summary>
            This interface represents an internal VT7001 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101Channel">
            <summary>
            This interface represents a VT7101 channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101Supply">
            <summary>
            This interface represents a VT7101 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101Supply1">
            <summary>
            This interface represents a VT7101 power supply 1.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101Supply2">
            <summary>
            This interface represents a VT7101 power supply 2.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101SupplyExternal">
            <summary>
            This interface represents an external VT7101 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101SupplyInternal">
            <summary>
            This interface represents an internal VT7101 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6204Channel">
            <summary>
            This interface represents a VT6204 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayOpenHigh">
            <summary>
            Gets a value indicating whether the open high relay is set.
            </summary>
            <value><c>true</c> if open high relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayOpenLow">
            <summary>
            Gets a value indicating whether the open low relay is set.
            </summary>
            <value><c>true</c> if open low relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayPin8">
            <summary>
            Gets a value indicating whether relay pin 8 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 8 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc2">
            <summary>
            Gets a value indicating whether relay RLC2 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC2 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc3">
            <summary>
            Gets a value indicating whether relay RLC3 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC3 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc4">
            <summary>
            Gets a value indicating whether relay RLC4 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC4 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc5">
            <summary>
            Gets a value indicating whether relay RLC5 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC5 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc6">
            <summary>
            Gets a value indicating whether relay RLC6 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC6 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc7">
            <summary>
            Gets a value indicating whether relay RLC7 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC7 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayTermination">
            <summary>
            Gets a value indicating whether the termination relay is set.
            </summary>
            <value><c>true</c> if the termination relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether the short circuit relay.
            </summary>
            <value><c>true</c> if the short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayBusBarA">
            <summary>
            Gets a value indicating whether the relay bus bar a is set.
            </summary>
            <value><c>true</c> if the relay bus bar a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayBusBarB">
            <summary>
            Gets a value indicating whether the relay bus bar b is set.
            </summary>
            <value><c>true</c> if the relay bus bar b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelaysBusBar">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayHighToVBatt">
            <summary>
            Gets a value indicating whether the relay high to VBatt is set.
            </summary>
            <value><c>true</c> if the relay high to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayHighToGnd">
            <summary>
            Gets a value indicating whether the relay high to GND is set.
            </summary>
            <value><c>true</c> if the relay high to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayLowToVBatt">
            <summary>
            Gets a value indicating whether the relay low to VBatt is set.
            </summary>
            <value><c>true</c> if the relay low to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayLowToGnd">
            <summary>
            Gets a value indicating whether the relay low to GND is set.
            </summary>
            <value><c>true</c> if the relay low to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayPin3">
            <summary>
            Gets a value indicating whether relay pin 3 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 3 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayPin4">
            <summary>
            Gets a value indicating whether relay pin 4 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 4 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayPin9">
            <summary>
            Gets a value indicating whether relay pin 9 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 9 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc0">
            <summary>
            Gets a value indicating whether relay RLC0 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC0 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc1">
            <summary>
            Gets a value indicating whether relay RLC1 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC1 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayRlc8">
            <summary>
            Gets a value indicating whether relay RLC8 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC8 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayCANHigh">
            <summary>
            Gets a value indicating whether the CAN high line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayCANLow">
            <summary>
            Gets a value indicating whether the CAN low line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayTermination100Ohm">
            <summary>
            Controls the 100 Ohm termination relay on FlexRay line A.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayOpenBmB">
            <summary>
            Controls the open line relay on FlexRay BM of line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayOpenBpB">
            <summary>
            Controls the open line relay on FlexRay BP of line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayShortCircuitFlexRayB">
            <summary>
            Controls the short circuit relay on FlexRay line B.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204Channel.RelayTerminationFlexRayB">
            <summary>
            Controls the termination relay on FlexRay line B.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel">
            <summary>
            This interface represents a IVT2816 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel.CurCurrent">
            <summary>
            Gets the  momentary value of the input voltage/current
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel.AvgCurrent">
            <summary>
            Gets the average input voltage/current
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel.RMSCurrent">
            <summary>
            Gets the effective value of input voltage/current
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel.MinCurrent">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816CurrentMeasurementChannel.MaxCurrent">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816WFStimChannel">
            <summary>
            This interface represents a IVT2816 waveform stimulation channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFFactor">
            <summary>
            Gets the wave form factor.
            </summary>
            <value>The wave form factor.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFOffset">
            <summary>
            Gets the wave form offset.
            </summary>
            <value>The wave form offset.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFMin">
            <summary>
            Gets the wave form minimum value.
            </summary>
            <value>The wave form minimum value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFMax">
            <summary>
            Gets the wave form maximum value.
            </summary>
            <value>The wave form maximum value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>The wave form pause.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816WFStimChannel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>The wave form time increment.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816WFStimChannel.LoadWFVoltage(System.String)">
            <summary>
            Loads a voltage wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816WFStimChannel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816WFStimChannel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816WFStimChannel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816WFStimChannel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816MeasurementChannel">
            <summary>
            This interface represents a IVT2816 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.CurVoltage">
            <summary>
            Gets the  momentary value of the input voltage/current
            </summary>
            <value>The current value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.AvgVoltage">
            <summary>
            Gets the average input voltage/current
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.RMSVoltage">
            <summary>
            Gets the effective value of input voltage/current
            </summary>
            <value>The effective value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.MinVoltage">
            <summary>
            Gets the Minimum value of input voltage
            </summary>
            <value>The minimum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.MaxVoltage">
            <summary>
            Gets the Maximum value of input voltage
            </summary>
            <value>The maximum value of input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816MeasurementChannel.MeasurementMode">
            <summary>
            Gets the measurement mode.
            </summary>
            <value>The measurement mode.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816MeasurementChannel.ResetMinMax">
            <summary>
            Resets min and max.
            </summary>
            <returns>A value indicating if the call was successful</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816StimChannel">
            <summary>
            This interface represents a IVT2816 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.CurveType">
            <summary>
            Gets the type of the curve.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.OutputRange">
            <summary>
            Gets the output range.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.Voltage">
            <summary>
            Gets the output voltage.
            </summary>
            <value>The output voltage.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004Constant"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.CurOutputVoltage">
            <summary>
            Gets the momentary value of the output voltage.
            </summary>
            <value>The momentary value of the output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.RelayGnd">
            <summary>
            Gets a value indicating whether the GND relay is set.
            </summary>
            <value><c>true</c> if GND relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816StimChannel.RelayDGnd">
            <summary>
            Gets a value indicating whether the DGND relay is set.
            </summary>
            <value><c>true</c> if AGND relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2816StimChannel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The curve type.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2848PWMMeasurementChannel">
            <summary>
            This interface represents a VT2848 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMMeasurementChannel.PWMFreq">
            <summary>
            Gets the PWM frequency of the input signal.
            </summary>
            <value>The PWM frequency of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMMeasurementChannel.PWMDC">
            <summary>
            Gets the PWM duty cycle of input signal.
            </summary>
            <value>The PWM duty cycle of the input signal.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMMeasurementChannel.PWMMeasurementDuration">
            <summary>
            Gets the duration of the PWM measurement.
            </summary>
            <value>The duration of the PWM measurement.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2848PWMStimChannel">
            <summary>
            This interface represents a VT2848 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.PWMOutputFreq">
            <summary>
            Gets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.PWMOutputDC">
            <summary>
            Gets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>The wave form pause.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>The wave form time increment.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.PWMRepeats">
            <summary>
            Gets the number of PWM repeats.
            </summary>
            <value>The number ofPWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848PWMStimChannel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2848PWMStimChannel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2848PWMStimChannel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2848PWMStimChannel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2848PWMStimChannel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2848PWMStimChannel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2848Channel">
            <summary>
            This interface represents a VT2848 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.StimulationRunning">
            <summary>
            Gets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.DigitalOutput">
            <summary>
            Gets a value indicating whether the digital output is active.
            </summary>
            <value><c>true</c> if digital output is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.CurveType">
            <summary>
            Gets the type of the curve.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.OutputMode">
            <summary>
            Gets the output mode.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848Channel.CurBit">
            <summary>
            Gets the digital input signal (1 sampled value).
            </summary>
            <value>The digital input signal (1 sampled value).</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2820Channel">
            <summary>
            This interface represents a IVT2820 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820Channel.Relay">
            <summary>
            Gets a value indicating the position of the relay switch.
            </summary>
            <value><c>true</c> if pin A and C are connected; <c>false</c> if A and B are connected.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2820BusBarChannel">
            <summary>
            This interface represents a VT2820 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820BusBarChannel.RelayBusBarA">
            <summary>
            Gets a value indicating whether the bus bar relay a is set.
            </summary>
            <value><c>true</c> if bus bar relay a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820BusBarChannel.RelayBusBarB">
            <summary>
            Gets a value indicating whether the bus bar relay b is set.
            </summary>
            <value><c>true</c> if bus bar relay b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001SupplyExternal">
            <summary>
            This interface represents an external VT7001 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7900Channel">
            <summary>
            This interface represents a VT7900 channel.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001Supply2">
            <summary>
            This interface represents a VT7001 power supply 2.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001SupplyInternal">
            <summary>
            This interface represents an internal VT7001 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001Supply1">
            <summary>
            This interface represents a VT7001 power supply 1.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2004PotiChannel">
            <summary>
            This interface represents the first channel of a VT2004 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004PotiChannel.Poti">
            <summary>
            Gets the potentiometer setting.
            </summary>
            <value>The potentiometer setting.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1004Channel">
            <summary>
            This interface represents a VT1004 channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2004Channel">
            <summary>
            This interface represents a VT2004 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.StimulationRunning">
            <summary>
            Gets or sets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.CurVoltage">
            <summary>
            Gets the current value of output voltage
            </summary>
            <value>The current value of output voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.CurResistance">
            <summary>
            Gets the current value of output resistance
            </summary>
            <value>The current value of output resistance.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMFreq">
            <summary>
            Gets the measured PWM frequency.
            </summary>
            <value>The PWM freq.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMDC">
            <summary>
            Gets the measured PWM duty cycle.
            </summary>
            <value>The PWM DC.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.Resistor">
            <summary>
            Gets the resistor output.
            </summary>
            <value>The resistor output.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.Voltage">
            <summary>
            Gets the output voltage.
            </summary>
            <value>The output voltage.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004Constant"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayOrgSensor">
            <summary>
            Gets a value indicating whether the original sensor relay is set.
            </summary>
            <value><c>true</c> if original sensor relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether the short circuit relay is set.
            </summary>
            <value><c>true</c> if short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayBusBar1A">
            <summary>
            Gets a value indicating whether the Bus bar relay 1 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayBusBar1B">
            <summary>
            Gets a value indicating whether the Bus bar relay 1 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 1 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelaysBusBar1">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayBusBar2A">
            <summary>
            Gets a value indicating whether the Bus bar relay 2 a is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelayBusBar2B">
            <summary>
            Gets a value indicating whether the Bus bar relay 2 b is set.
            </summary>
            <value><c>true</c> if Bus bar relay 2 b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.RelaysBusBar2">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMResistanceLow">
            <summary>
            Gets the PWM resistance low value.
            </summary>
            <value>The PWM resistance low value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMResistanceHigh">
            <summary>
            Gets the PWM resistance high value.
            </summary>
            <value>The PWM resistance high value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMVoltageLow">
            <summary>
            Gets the PWM voltage low value.
            </summary>
            <value>The PWM voltage low value.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMVoltageHigh">
            <summary>
            Gets the PWM voltage high value.
            </summary>
            <value>The PWM voltage high value.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMRepeats">
            <summary>
            Gets the number of PWM repeats.
            </summary>
            <value>The number ofPWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFFactor">
            <summary>
            Gets the wave form factor.
            </summary>
            <value>The wave form factor.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFOffset">
            <summary>
            Gets the wave form offset.
            </summary>
            <value>The wave form offset.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFMin">
            <summary>
            Gets the wave form minimum value.
            </summary>
            <value>The wave form minimum value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFMax">
            <summary>
            Gets the wave form maximum value.
            </summary>
            <value>The wave form maximum value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFPause">
            <summary>
            Gets the wave form pause.
            </summary>
            <value>The wave form pause.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.WFTimeIncrement">
            <summary>
            Gets the wave form time increment.
            </summary>
            <value>The wave form time increment.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004Channel.PWMStartDelay">
            <summary>
            Sets the PWM start delay.
            </summary>
            <value>The PWM start delay.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.LoadWFVoltage(System.String)">
            <summary>
            Loads a voltage wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.LoadWFResistance(System.String)">
            <summary>
            Loads a resistance wave form.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.SetWFParams(System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <param name="startDelay">The start delay.</param>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2004Channel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The stimulation curve type.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2516Channel">
            <summary>
            This interface represents a VT2516 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.Cur">
            <summary>
            Gets the momentary value of the input voltage.
            </summary>
            <value>The momentary value of the input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.Avg">
            <summary>
            Gets the average input voltage.
            </summary>
            <value>The average input voltage.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.StimulationRunning">
            <summary>
            Gets a value indicating whether the stimulation is running.
            </summary>
            <value><c>true</c> if the stimulation is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.Bits">
            <summary>
            Gets the digital input signal (20 sampled values).
            </summary>
            <value>The digital input signal (20 sampled values).</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.CurBit">
            <summary>
            Gets the digital input signal (1 sampled value).
            </summary>
            <value>The digital input signal (1 sampled value).</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMFreq">
            <summary>
            Gets the measured PWM frequency.
            </summary>
            <value>The measured PWM frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMDC">
            <summary>
            Gets the measured PWM duty cycle.
            </summary>
            <value>The measured PWM duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.RelayBusBar">
            <summary>
            Gets a value indicating whether the bus bar relay is set.
            </summary>
            <value><c>true</c> if bus bar relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.RelayOrgComponent">
            <summary>
            Gets a value indicating whether the original component relay is set.
            </summary>
            <value><c>true</c> if original component relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.RelayLoadResistor">
            <summary>
            Gets a value indicating whether the load resistor relay is set.
            </summary>
            <value><c>true</c> if load resistor relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.RelayVBatt">
            <summary>
            Gets a value indicating whether the VBat relay is set.
            </summary>
            <value><c>true</c> if VBat relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.RelayGnd">
            <summary>
            Gets a value indicating whether the GND relay is set.
            </summary>
            <value><c>true</c> if GND relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.DigitalOutput">
            <summary>
            Gets a value indicating whether the digital output is active.
            </summary>
            <value><c>true</c> if digital output is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMOutputFreq">
            <summary>
            Gets the PWM output frequency.
            </summary>
            <value>The PWM output frequency.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMOutputDc">
            <summary>
            Gets the PWM output duty cycle.
            </summary>
            <value>The PWM output duty cycle.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMVoltageLow">
            <summary>
            Gets the PWM voltage low.
            </summary>
            <value>The PWM voltage low.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMVoltageHigh">
            <summary>
            Gets the PWM voltage high.
            </summary>
            <value>The PWM voltage high.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMRepeats">
            <summary>
            Gets the PWM repeats.
            </summary>
            <value>The PWM repeats.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516Channel.PWMMeasurementDuration">
            <summary>
            Gets the duration of the PWM measurement.
            </summary>
            <value>The duration of the PWM measurement.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2516Channel.StopStimulation">
            <summary>
            Stops the stimulation.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2516Channel.StartStimulation">
            <summary>
            Starts the stimulation.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2516Channel.SetStimulationMode(Vector.CANoe.VTS.StimulationMode,Vector.CANoe.VTS.CurveType)">
            <summary>
            Sets the stimulation mode.
            </summary>
            <param name="mode">The stimulation mode.</param>
            <param name="type">The curve type.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2516Channel.SetWFParams(System.Double,System.Double,System.Int32)">
            <summary>
            Sets the WF params.
            </summary>
            <param name="timeIncrement">The time increment.</param>
            <param name="pause">The pause.</param>
            <param name="numOfRepeats">The num of repeats.</param>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT2516Channel.LoadWFBitStream(System.String)">
            <summary>
            Loads the WF bit stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>A value indicating if the call was successful</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2516Bitstream"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6104Channel">
            <summary>
            This interface represents a VT6104 channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayOpenHigh">
            <summary>
            Gets a value indicating whether the open high relay is set.
            </summary>
            <value><c>true</c> if open high relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayOpenLow">
            <summary>
            Gets a value indicating whether the open low relay is set.
            </summary>
            <value><c>true</c> if open low relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayPin8">
            <summary>
            Gets a value indicating whether relay pin 8 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 8 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc2">
            <summary>
            Gets a value indicating whether relay RLC2 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC2 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc3">
            <summary>
            Gets a value indicating whether relay RLC3 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC3 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc4">
            <summary>
            Gets a value indicating whether relay RLC4 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC4 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc5">
            <summary>
            Gets a value indicating whether relay RLC5 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC5 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc6">
            <summary>
            Gets a value indicating whether relay RLC6 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC6 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc7">
            <summary>
            Gets a value indicating whether relay RLC7 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC7 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayTermination">
            <summary>
            Gets a value indicating whether the termination relay is set.
            </summary>
            <value><c>true</c> if the termination relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayShortCircuit">
            <summary>
            Gets a value indicating whether the short circuit relay.
            </summary>
            <value><c>true</c> if the short circuit relay is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayBusBarA">
            <summary>
            Gets a value indicating whether the relay bus bar a is set.
            </summary>
            <value><c>true</c> if the relay bus bar a is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayBusBarB">
            <summary>
            Gets a value indicating whether the relay bus bar b is set.
            </summary>
            <value><c>true</c> if the relay bus bar b is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelaysBusBar">
            <summary>
            Gets a value indicating whether the two bus bar relays are active.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayHighToVBatt">
            <summary>
            Gets a value indicating whether the relay high to VBatt is set.
            </summary>
            <value><c>true</c> if the relay high to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayHighToGnd">
            <summary>
            Gets a value indicating whether the relay high to GND is set.
            </summary>
            <value><c>true</c> if the relay high to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayLowToVBatt">
            <summary>
            Gets a value indicating whether the relay low to VBatt is set.
            </summary>
            <value><c>true</c> if the relay low to VBatt is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayLowToGnd">
            <summary>
            Gets a value indicating whether the relay low to GND is set.
            </summary>
            <value><c>true</c> if the relay low to gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayPin3">
            <summary>
            Gets a value indicating whether relay pin 3 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 3 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayPin4">
            <summary>
            Gets a value indicating whether relay pin 4 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 4 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayPin9">
            <summary>
            Gets a value indicating whether relay pin 9 line to Gnd is set.
            </summary>
            <value><c>true</c> if relay pin 9 line to Gnd is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc0">
            <summary>
            Gets a value indicating whether relay RLC0 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC0 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc1">
            <summary>
            Gets a value indicating whether relay RLC1 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC1 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayRlc8">
            <summary>
            Gets a value indicating whether relay RLC8 to RLC board is set.
            </summary>
            <value><c>true</c> if relay RLC8 to RLC board is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayCANHigh">
            <summary>
            Gets a value indicating whether the CAN high line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104Channel.RelayCANLow">
            <summary>
            Gets a value indicating whether the CAN low line has a short circuit to VBatt or GND.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001Channel">
            <summary>
            This interface represents a VT7001 channel.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001Supply">
            <summary>
            This interface represents a VT7001 power supply.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVTChannel">
            <summary>
            This class represents a generic VT channel.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.ParentModule">
            <summary>
            Gets the parent module of this channel.
            </summary>
            <value>The parent module of this channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.Name">
            <summary>
            This property represents the CANoe name of this channel.
            </summary>
            <value></value>
            <returns>The name of this channel in CANoe</returns>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserValues">
            <summary>
            Gets the values of this channel.
            </summary>
            <value>The values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserReadValues">
            <summary>
            Gets the read values of this channel.
            </summary>
            <value>The read values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserWriteValues">
            <summary>
            Gets the write values of this channel.
            </summary>
            <value>The write values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserValueNames">
            <summary>
            Gets the names of this channel's values.
            </summary>
            <value>The names of this channel's values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserReadValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's read values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTChannel.UserWriteValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's write values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.StoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.RestoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.GetUserValue(System.String)">
            <summary>
            Gets a value by its name.
            </summary>
            <param name="name">The name of the value to get.</param>
            <returns>The value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.GetUserReadValue(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.GetUserWriteValue(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.GetUserReadValue``1(System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTChannel.GetUserWriteValue``1(System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1x04">
            <summary>
            This interface represents a VT1004 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaySwapBusBar1A">
            <summary>
            Gets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaySwapBusBar1B">
            <summary>
            Gets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaysSwapBusBar1">
            <summary>
            Gets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaySwapBusBar2A">
            <summary>
            Gets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaySwapBusBar2B">
            <summary>
            Gets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.RelaysSwapBusBar2">
            <summary>
            Gets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger1Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger2Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger3Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger4Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger5Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger6Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger7Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger8Event">
            <summary>
            Gets the  momentary state of the trigger
            </summary>
            <value>The current state of the trigger.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger1EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger2EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger3EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger4EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger5EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger6EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger7EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1x04.Trigger8EventCount">
            <summary>
            Gets the  momentary count of trigger events
            </summary>
            <value>The current count of trigger events.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT1x04.SetTriggerParams(System.Int32,System.Int32,Vector.CANoe.VTS.TriggerEdgeType)">
            <summary>
            Sets trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="sourceChannel">The channel that acts as the trigger's source.</param>
            <param name="edgeType">Type of edges the trigger reacts to.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT1x04.SetTriggerParamsEx(System.Int32,System.Double,System.Double,System.Collections.BitArray,System.Collections.BitArray,System.UInt32,Vector.CANoe.VTS.TriggerType)">
            <summary>
            Sets extended trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="minPulseWidth">Minimum width of pulses the trigger reacts to.</param>
            <param name="restartTime">The restart time of the trigger in seconds.</param>
            <param name="preTriggers">The precondition triggers for the trigger.</param>
            <param name="restartTriggers">The restart triggers for the trigger.</param>
            <param name="thresholdEventCount">The threshold event count after which the trigger can fire.</param>
            <param name="extSettings">The extended settings of the trigger.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT1x04.SetTriggerParamsEx(System.Int32,System.Double,System.Double,System.UInt32,System.UInt32,System.UInt32,Vector.CANoe.VTS.TriggerType)">
            <summary>
            Sets extended trigger parameters
            </summary>
            <param name="trigger">The trigger to configure.</param>
            <param name="minPulseWidth">Minimum width of pulses the trigger reacts to.</param>
            <param name="restartTime">The restart time of the trigger in seconds.</param>
            <param name="preTriggers">The precondition triggers for the trigger.</param>
            <param name="restartTriggers">The restart triggers for the trigger.</param>
            <param name="thresholdEventCount">The threshold event count after which the trigger can fire.</param>
            <param name="extSettings">The extended settings of the trigger.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.IVT1x04.StartTrigger(System.Int32)">
            <summary>
            Starts a trigger
            </summary>
            <param name="trigger">The trigger to start.</param>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1104">
            <summary>
            This interface represents a VT1104 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1104.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1104.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1104.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1104.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1104.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816A">
            <summary>
            This interface represents a VT2816 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816A.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816A.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2832">
            <summary>
            This interface represents a VT2832 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>Channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>Channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel7">
            <summary>
            Gets channel 7.
            </summary>
            <value>Channel 7.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2832.Channel8">
            <summary>
            Gets channel 8.
            </summary>
            <value>Channel 8.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2710">
            <summary>
              This interface represents a VT2710 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.Channels">
            <summary>
              Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.PiggyChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.PiggyChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.PiggyChannel3">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.PiggyChannel4">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.DioChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.DioChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.SpiChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.SpiChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.UartChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.UartChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.Rs485Channel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.Rs485Channel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.I2Channel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.I2Channel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.LvdsChannel1">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.LvdsChannel2">
            <summary>
              Gets the channel.
            </summary>
            <value> The Channel.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaySwapBusBar1A">
            <summary>
              Gets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaySwapBusBar1B">
            <summary>
              Gets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaySwapBusBar2A">
            <summary>
              Gets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaySwapBusBar2B">
            <summary>
              Gets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaysSwapBusBar1">
            <summary>
              Gets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2710.RelaysSwapBusBar2">
            <summary>
              Gets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6306">
            <summary>
            This interface represents a VT6306 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>Channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>Channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaySwapBusBarA">
            <summary>
            Gets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaySwapBusBarB">
            <summary>
            Gets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaysSwapBusBar">
            <summary>
            Gets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaySwapVBatt">
            <summary>
            Gets a value indicating whether VBatt is swapped.
            </summary>
            <value><c>true</c> if [relay swap VBatt]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaySwapGnd">
            <summary>
            Gets a value indicating whether GND is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6306.RelaysSwapVBattGnd">
            <summary>
            Gets a value indicating whether VBatt and GND is swapped.
            </summary>
            <value><c>true</c> if VBatt and GND are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7x01">
            <summary>
            This interface represents a VT7001 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7x01.InterconnectionMode">
            <summary>
            Gets the interconnection mode.
            </summary>
            <value>The interconnection mode.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7001PowerSupply"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7101">
            <summary>
            This interface represents a VT7101 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7101.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2808">
            <summary>
            This interface represents a IVT2808 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channels">
            <summary>
              Gets the channels of this module.
            </summary>
            <value>
              The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel1">
            <summary>
              Gets the channel 1.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel2">
            <summary>
              Gets the channel 2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel3">
            <summary>
              Gets the channel 3.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel4">
            <summary>
              Gets the channel 4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel5">
            <summary>
              Gets the channel 5.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel6">
            <summary>
              Gets the channel 6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel7">
            <summary>
              Gets the channel 7.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.Channel8">
            <summary>
              Gets the channel 8.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayAGnd12">
            <summary>
            Gets a value indicating whether RelayAGnd12 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayAGnd34">
            <summary>
            Gets a value indicating whether RelayAGnd34 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayAGnd56">
            <summary>
            Gets a value indicating whether RelayAGnd56 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayAGnd78">
            <summary>
            Gets a value indicating whether RelayAGnd78 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayComRef12">
            <summary>
            Gets a value indicating whether RelayComRef12 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayComRef34">
            <summary>
            Gets a value indicating whether RelayComRef34 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayComRef56">
            <summary>
            Gets a value indicating whether RelayComRef56 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2808.RelayComRef78">
            <summary>
            Gets a value indicating whether RelayComRef78 is true or false.
            </summary>
            <value><c>true</c> if relay is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6204">
            <summary>
            This interface represents a VT6204 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.RelaySwapBusBarA">
            <summary>
            Gets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.RelaySwapBusBarB">
            <summary>
            Gets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6204.RelaysSwapBusBar">
            <summary>
            Gets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2848">
            <summary>
            This interface represents a IVT2848 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource1To4">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource5To8">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource9To12">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource13To16">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource17To20">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource21To24">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource25To28">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource29To32">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource33To36">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource37To40">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource41To44">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.OutputSource45To48">
            <summary>
            Gets the output source.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold1To8">
            <summary>
            Gets the thresholds for channel 1 to 8.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold9To16">
            <summary>
            Gets the thresholds for channel 9 to 16.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold17To24">
            <summary>
            Gets the thresholds for channel 17 to 24.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold25To32">
            <summary>
            Gets the thresholds for channel 25 to 32.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold33To40">
            <summary>
            Gets the thresholds for channel 33 to 40.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Threshold41To48">
            <summary>
            Gets the thresholds for channel 41 to 48.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel1">
            <summary>
            Gets the channel 1
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel2">
            <summary>
            Gets the channel 2
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel3">
            <summary>
            Gets the channel 3
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel4">
            <summary>
            Gets the channel 4
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel5">
            <summary>
            Gets the channel 5
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel6">
            <summary>
            Gets the channel 6
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel7">
            <summary>
            Gets the channel 7
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel8">
            <summary>
            Gets the channel 8
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel9">
            <summary>
            Gets the channel 9
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel10">
            <summary>
            Gets the channel 10
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel11">
            <summary>
            Gets the channel 11
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel12">
            <summary>
            Gets the channel 12
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel13">
            <summary>
            Gets the channel 13
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel14">
            <summary>
            Gets the channel 14
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel15">
            <summary>
            Gets the channel 15
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel16">
            <summary>
            Gets the channel 16
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel17">
            <summary>
            Gets the channel 17
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel18">
            <summary>
            Gets the channel 18
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel19">
            <summary>
            Gets the channel 19
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel20">
            <summary>
            Gets the channel 20
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel21">
            <summary>
            Gets the channel 21
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel22">
            <summary>
            Gets the channel 22
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel23">
            <summary>
            Gets the channel 23
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel24">
            <summary>
            Gets the channel 24
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel25">
            <summary>
            Gets the channel 25
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel26">
            <summary>
            Gets the channel 26
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel27">
            <summary>
            Gets the channel 27
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel28">
            <summary>
            Gets the channel 28
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel29">
            <summary>
            Gets the channel 29
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel30">
            <summary>
            Gets the channel 30
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel31">
            <summary>
            Gets the channel 31
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel32">
            <summary>
            Gets the channel 32
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel33">
            <summary>
            Gets the channel 33
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel34">
            <summary>
            Gets the channel 34
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel35">
            <summary>
            Gets the channel 35
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel36">
            <summary>
            Gets the channel 36
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel37">
            <summary>
            Gets the channel 37
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel38">
            <summary>
            Gets the channel 38
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel39">
            <summary>
            Gets the channel 39
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel40">
            <summary>
            Gets the channel 40
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel41">
            <summary>
            Gets the channel 41
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel42">
            <summary>
            Gets the channel 42
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel43">
            <summary>
            Gets the channel 43
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel44">
            <summary>
            Gets the channel 44
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel45">
            <summary>
            Gets the channel 45
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel46">
            <summary>
            Gets the channel 46
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel47">
            <summary>
            Gets the channel 47
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2848.Channel48">
            <summary>
            Gets the channel 48
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2820">
            <summary>
            This interface represents a VT2820 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channels1To12">
            <summary>
            Gets the channels 1 to 12 of this module.
            </summary>
            <value>The channels 1 to 12 of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel5">
            <summary>
            Gets channel 5.
            </summary>
            <value>Channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel6">
            <summary>
            Gets channel 6.
            </summary>
            <value>Channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel7">
            <summary>
            Gets channel 7.
            </summary>
            <value>Channel 7.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel8">
            <summary>
            Gets channel 8.
            </summary>
            <value>Channel 8.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel9">
            <summary>
            Gets channel 9.
            </summary>
            <value>Channel 9.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel10">
            <summary>
            Gets channel 10.
            </summary>
            <value>Channel 10.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel11">
            <summary>
            Gets channel 11.
            </summary>
            <value>Channel 11.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel12">
            <summary>
            Gets channel 12.
            </summary>
            <value>Channel 12.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channels13To20">
            <summary>
            Gets the channels 13 to 20 of this module.
            </summary>
            <value>The channels 13 to 20 of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel13">
            <summary>
            Gets channel 13.
            </summary>
            <value>Channel 13.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel14">
            <summary>
            Gets channel 14.
            </summary>
            <value>Channel 14.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel15">
            <summary>
            Gets channel 15.
            </summary>
            <value>Channel 15.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel16">
            <summary>
            Gets channel 16.
            </summary>
            <value>Channel 16.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel17">
            <summary>
            Gets channel 17.
            </summary>
            <value>Channel 17.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel18">
            <summary>
            Gets channel 18.
            </summary>
            <value>Channel 18.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel19">
            <summary>
            Gets channel 19.
            </summary>
            <value>Channel 19.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2820.Channel20">
            <summary>
            Gets channel 20.
            </summary>
            <value>Channel 20.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2816">
            <summary>
            This interface represents a VT2816 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>
            The channels of this module.
            </value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel1">
            <summary>
            Gets the channel 1.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel2">
            <summary>
            Gets the channel 2.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel3">
            <summary>
            Gets the channel 3.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel4">
            <summary>
            Gets the channel 4.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel5">
            <summary>
            Gets the channel 5.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel6">
            <summary>
            Gets the channel 6.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel7">
            <summary>
            Gets the channel 7.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel8">
            <summary>
            Gets the channel 8.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel9">
            <summary>
            Gets the channel 9.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel10">
            <summary>
            Gets the channel 10.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel11">
            <summary>
            Gets the channel 11.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel12">
            <summary>
            Gets the channel 12.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel13">
            <summary>
            Gets the channel 13.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel14">
            <summary>
            Gets the channel 14.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2816.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7900">
            <summary>
            This interface represents a VT7900 module.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7900.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT1004">
            <summary>
            This interface represents a VT1004 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1004.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1004.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1004.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1004.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT1004.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2004">
            <summary>
            This interface represents a VT2004 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaySwapBusBar1A">
            <summary>
            Gets a value indicating whether RelaySwapBusBar1A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaySwapBusBar1B">
            <summary>
            Gets a value indicating whether RelaySwapBusBar1B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaysSwapBusBar1">
            <summary>
            Gets a value indicating whether bus bar 1 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaySwapBusBar2A">
            <summary>
            Gets a value indicating whether RelaySwapBusBar2A is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaySwapBusBar2B">
            <summary>
            Gets a value indicating whether RelaySwapBusBar2B is true or false.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2004.RelaysSwapBusBar2">
            <summary>
            Gets a value indicating whether bus bar 2 is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT2516">
            <summary>
            This interface represents a VT2516 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel1">
            <summary>
            Gets the channel 1.
            </summary>
            <value>The channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel2">
            <summary>
            Gets the channel 2.
            </summary>
            <value>The channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel3">
            <summary>
            Gets the channel 3.
            </summary>
            <value>The channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel4">
            <summary>
            Gets the channel 4.
            </summary>
            <value>The channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel5">
            <summary>
            Gets the channel 5.
            </summary>
            <value>The channel 5.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel6">
            <summary>
            Gets the channel 6.
            </summary>
            <value>The channel 6.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel7">
            <summary>
            Gets the channel 7.
            </summary>
            <value>The channel 7.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel8">
            <summary>
            Gets the channel 8.
            </summary>
            <value>The channel 8.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel9">
            <summary>
            Gets the channel 9.
            </summary>
            <value>The channel 9.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel10">
            <summary>
            Gets the channel 10.
            </summary>
            <value>The channel 10.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel11">
            <summary>
            Gets the channel 11.
            </summary>
            <value>The channel 11.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel12">
            <summary>
            Gets the channel 12.
            </summary>
            <value>The channel 12.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel13">
            <summary>
            Gets the channel 13.
            </summary>
            <value>The channel 13.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel14">
            <summary>
            Gets the channel 14.
            </summary>
            <value>The channel 14.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel15">
            <summary>
            Gets the channel 15.
            </summary>
            <value>The channel 15.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Channel16">
            <summary>
            Gets the channel 16.
            </summary>
            <value>The channel 16.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.RelayBusBarB">
            <summary>
            Gets the relay bus bar B.
            </summary>
            <value>The relay bus bar B. Allowed values are: -1 for Ground, 0 for open, 1 for VBat.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.RelaySwapBusBar">
            <summary>
            Gets a value indicating whether the bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bar is swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Threshold1To8">
            <summary>
            Gets the thresholds for channel 1 to 8.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT2516.Threshold9To16">
            <summary>
            Gets the thresholds for channel 9 to 16.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT6104">
            <summary>
            This interface represents a VT6104 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.Channel3">
            <summary>
            Gets channel 3.
            </summary>
            <value>Channel 3.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.Channel4">
            <summary>
            Gets channel 4.
            </summary>
            <value>Channel 4.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.RelaySwapBusBarA">
            <summary>
            Gets a value indicating whether bus bar A is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar A]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.RelaySwapBusBarB">
            <summary>
            Gets a value indicating whether bus bar B is swapped.
            </summary>
            <value><c>true</c> if [relay swap bus bar B]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT6104.RelaysSwapBusBar">
            <summary>
            Gets a value indicating whether bus bar is swapped.
            </summary>
            <value><c>true</c> if bus bars are swapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVT7001">
            <summary>
            This interface represents a VT7001 module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Channel1">
            <summary>
            Gets channel 1.
            </summary>
            <value>Channel 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Channel2">
            <summary>
            Gets channel 2.
            </summary>
            <value>Channel 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.SupplyInternal">
            <summary>
            Gets the internal supply.
            </summary>
            <value>The internal supply.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Supply1">
            <summary>
            Gets supply 1.
            </summary>
            <value>Supply 1.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Supply2">
            <summary>
            Gets supply 2.
            </summary>
            <value>Supply 2.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Channels">
            <summary>
            Gets the channels of this module.
            </summary>
            <value>The channels of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVT7001.Supplies">
            <summary>
            Gets the supplies of this module.
            </summary>
            <value>The supplies of this module.</value>
        </member>
        <member name="T:Vector.CANoe.VTS.IVTModule">
            <summary>
            This interface represents a generic VT module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.SerialNumber">
            <summary>
            Gets the serial number of this module.
            </summary>
            <value>The serial number of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.HardwareVariant">
            <summary>
            Gets the hardware variant of this module.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.RevisionNumber">
            <summary>
            Gets the revision number of this module.
            </summary>
            <value>The revision number of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.FirmwareVersion">
            <summary>
            Gets the firmware version of this module.
            </summary>
            <value>The firmware version of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.ChannelNames">
            <summary>
            Gets the channel names of this module.
            </summary>
            <value>The channel names of this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.Name">
            <summary>
            This property represents the CANoe name of this module.
            </summary>
            <value></value>
            <returns>The name of this module in CANoe</returns>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserValues">
            <summary>
            Gets the values of this channel.
            </summary>
            <value>The values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserReadValues">
            <summary>
            Gets the read values of this channel.
            </summary>
            <value>The read values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserWriteValues">
            <summary>
            Gets the write values of this channel.
            </summary>
            <value>The write values of this channel.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserValueNames">
            <summary>
            Gets the names of this channel's values.
            </summary>
            <value>The names of this channel's values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserReadValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's read values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.UserWriteValueNames">
            <summary>
            Gets the names of this channel's write values.
            </summary>
            <value>The names of this channel's write values.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.TriggerCount">
            <summary>
            Gets the number of triggers on this module.
            </summary>
            <value>The number of triggers on this module.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTModule.IsOffline">
            <summary>
            Gets the operation mode of the module.
            </summary>
            <value>The operation mode of the module.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetChannel(System.String)">
            <summary>
            Gets a channel by its name.
            </summary>
            <param name="name">The name of the channel to get.</param>
            <returns>The channel with the given name</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.StoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.RestoreState">
            <summary>
            Internal method. You should never use this type.
            </summary>
            <exclude />
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserValue(System.String)">
            <summary>
            Gets a value by its name.
            </summary>
            <param name="name">The name of the value to get.</param>
            <returns>The value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserReadValue(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserReadValue``1(System.String)">
            <summary>
            Gets a read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the read value to get.</param>
            <returns>The read value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserWriteValue(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserWriteValue``1(System.String)">
            <summary>
            Gets a write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="name">The name of the write value to get.</param>
            <returns>The write value with the specified name.</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT7900"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserReadValue(System.String,System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserWriteValue(System.String,System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserReadValue``1(System.String,System.String)">
            <summary>
            Gets a channel's read value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTModule.GetUserWriteValue``1(System.String,System.String)">
            <summary>
            Gets a channel's write value by its name.
            </summary>
            <typeparam name="T">The element type of the value.</typeparam>
            <param name="channelName">Name of the channel.</param>
            <param name="valueName">Name of the value.</param>
            <returns>The specified value</returns>
        </member>
        <member name="T:Vector.CANoe.VTS.VTEntity">
            <summary>
            This class represents a generic VT entity (system, channel or module)
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.VTEntity.Name">
            <summary>
            This property represents the CANoe name of the entity
            </summary>
            <returns>The name of the entity in CANoe</returns>
        </member>
        <member name="F:Vector.CANoe.VTS.VTEntity.mName">
            <summary>
            CANoe name of this entity
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.SerialErrors">
            <summary>
            Specifies the different types of serial communication errors.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.SendOperationFailed">
            <summary>
             Send operation failed.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.ReceiveOperationFailed">
            <summary>
            Receive operation failed.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.FrameError">
            <summary>
            Frame error. May be caused by parity mismatch or any other frame mismatch (e.g. number of stop bits).
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.FrameParityError">
            <summary>
            Frame parity error. Is caused by parity mismatch.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.BufferOverrun">
            <summary>
            Buffer overrun.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.BufferOverrunReceiver">
            <summary>
            Buffer overrun at receiver.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.BreakState">
            <summary>
            Break state. Other end requested to pause.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.SerialErrors.Timeout">
            <summary>
            Timeout. May be caused by wrongly set too short timeout.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.LoadMode">
            <summary>
            Specifies the different load modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.LoadMode.Inactive">
            <summary>
            Specifies that the internal load is not active.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.LoadMode.CurrentControl">
            <summary>
            Sets the internal load to current control mode.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.LoadMode.ResistanceControl">
            <summary>
            Sets the internal load to resistance control mode.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.MeasurementMode">
            <summary>
            Specifies the different measurement modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MeasurementMode.Direct">
            <summary>
            Differential voltage, unfiltered
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MeasurementMode.Filtered">
            <summary>
            Differential voltage, 10 kHz filter active
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MeasurementMode.LineAToGnd">
            <summary>
            Voltage line A to ground 
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MeasurementMode.LineBToGnd">
            <summary>
            Voltage line B to ground 
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.ImpedanceMode">
            <summary>
            Specifies the different impedance modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.ImpedanceMode.High">
            <summary>
            High impedance mode
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.ImpedanceMode.Low">
            <summary>
            Low impedance mode
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.StimulationMode">
            <summary>
            Specifies the different stimulation modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StimulationMode.None">
            <summary>
            Internal stimulation not active
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StimulationMode.Voltage">
            <summary>
            Voltage stimulation 
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StimulationMode.Potentiometer">
            <summary>
            Potentiometer stimulation (VT2004 only)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StimulationMode.ResistanceGreater">
            <summary>
            Resistance stimulation R larger (on switching between resistance values, only intermediate states with resistance values higher than the output or target resistance will occur) (VT2004 only)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StimulationMode.ResistanceLower">
            <summary>
            Resistance stimulation R smaller (on switching between resistance values, only intermediate states with lower resistance values will occur) (VT2004 only)
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.CurveType">
            <summary>
            Specifies the different curve types.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurveType.Constant">
            <summary>
             Constant value, determined by the corresponding output system variable. Nevertheless, this value can also be used dynamically by changing the value of the variable in CANoe.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurveType.PWM">
            <summary>
            PWM
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurveType.AnalogWaveform">
            <summary>
            Analog wave form; loaded using LoadWFVoltage or LoadWFResistance, then startet using StartStimulation (for VT2004 only)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurveType.BitStream">
            <summary>
             Bit stream (= digital wave form); loaded using LoadWFBitStream, then started using StartStimulation (for VT2516 only)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurveType.UserFPGA">
            <summary>
             User FPGA (for user FPGA enabled boards only)
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.MaxCurrentMode">
            <summary>
            Specifies the different max current modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MaxCurrentMode.Inactive">
            <summary>
            Max current control voltage output not active
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.MaxCurrentMode.Constant">
            <summary>
            Constant value, determined by the corresponding output system variable
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.RefVoltageMode">
            <summary>
            Specifies the different ref voltage modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.RefVoltageMode.Inactive">
            <summary>
            Reference voltage output not active
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.RefVoltageMode.Constant">
            <summary>
            Constant value, determined by the corresponding output system variable
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.RefVoltageMode.AnalogWaveForm">
            <summary>
            Analog wave form; loaded using LoadWFVoltage, then started using StartStimulation
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.InterconnectionMode">
            <summary>
            Specifies the different interconnection modes.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.SupInt">
            <summary>
             Internal Power Supply only (mode supint)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup1">
            <summary>
             Power Supply 1 only (mode sup1)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup2">
            <summary>
            Power Supply 2 only (mode sup2)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.SupIntSup1">
            <summary>
            Two independent power supplies for OUT1 and OUT2: internal power supply and power supply 1 (mode supint_sup1)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.SupIntSup2">
            <summary>
            Two independent power supplies for OUT1 and OUT2: internal power supply and power supply 2 (mode supint_sup2)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup1SupInt">
            <summary>
            Two independent power supplies for OUT1 and OUT2: power supply 1 and internal power supply (mode sup1_supint)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup1Sup2">
            <summary>
            Two independent power supplies for OUT1 and OUT2: power supply 1 and power supply 2 (mode sup1_sup2)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup2SupInt">
            <summary>
             Two independent power supplies for OUT1 and OUT2: power supply 2 and internal power supply (mode sup2_supint)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.Sup2Sup1">
            <summary>
            Two independent power supplies for OUT1 and OUT2: power supply 2 and power supply 1 (mode sup2_sup1)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.SupSeries">
            <summary>
            Power supply 1 and power supply 2 are connected in series (sup_series)
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.InterconnectionMode.SupParallel">
            <summary>
            Power supply 1 and power supply 2 are connected parallel (sup_parallel)
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.VT2516RelayBusBarBState">
            <summary>
            Specifies the different states for the RelayBusBarB on VT2516 modules.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2516RelayBusBarBState.Ground">
            <summary>
             Relay is set to Ground
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2516RelayBusBarBState.Open">
            <summary>
             Relay is open
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2516RelayBusBarBState.VBat">
            <summary>
            Relay set to VBat
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.BaudRate">
            <summary>
            Specifies the different baud rates for serial communication.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate1200">
            <summary>
            A baudrate of 1200.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate2400">
            <summary>
            A baudrate of 2400.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate4800">
            <summary>
            A baudrate of 4800.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate9600">
            <summary>
            A baudrate of 9600.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate19200">
            <summary>
            A baudrate of 19200.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.BaudRate.BaudRate38400">
            <summary>
            A baudrate of 38400.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.Parity">
            <summary>
            Specifies the different parity modes for serial communication.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.Parity.None">
            <summary>
            No parity used, i.e. frame contains no parity bit.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.Parity.Odd">
            <summary>
            Odd parity is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.Parity.Even">
            <summary>
            Even Parity is used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.DataBits">
            <summary>
            Specifies the number of data bits for serial communication.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DataBits.Seven">
            <summary>
            Seven data bits.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DataBits.Eight">
            <summary>
            Eight data bits.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.StopBits">
            <summary>
            Specifies the number of stop bits for serial communication.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StopBits.One">
            <summary>
            One stop bit is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.StopBits.Two">
            <summary>
            Two stop bits are used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OutputMode">
            <summary>
            Specifies the mode a VT7001 output is in.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMode.Inactive">
            <summary>
            Output is inactive.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMode.Active">
            <summary>
            Output is active.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMode.ShortCircuit">
            <summary>
            Short circuit is active.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.VT2848OutputMode">
            <summary>
            Specifies the output mode of a VT2848 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2848OutputMode.Inactive">
            <summary>
            Output is inactive.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2848OutputMode.HighsideSwitch">
            <summary>
            Highside switch is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2848OutputMode.LowsideSwitch">
            <summary>
            Lowside switch is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2848OutputMode.PushPull">
            <summary>
            Push pull mode is used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OutputSource">
            <summary>
            Specifies the output source of a VT2848 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputSource.VExt">
            <summary>
            Vext is used as the output source.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputSource.VBat">
            <summary>
            Vbat is used as the output source.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OutputRange">
            <summary>
            Specifies the output ranges of a VT2816 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputRange.ZeroTo28V">
            <summary>
            A range of 0V to 28V is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputRange.PlusMinus10V">
            <summary>
            A range of +/-10V is used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.CurrentMeasurementRange">
            <summary>
            Specifies the current measurement ranges of a VT7001 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range100uA">
            <summary>
            A range of up to 100uA is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range1mA">
            <summary>
            A range of up to 1mA is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range10mA">
            <summary>
            A range of up to 10mA is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range100mA">
            <summary>
            A range of up to 100mA is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range1A">
            <summary>
            A range of up to 1A is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range10A">
            <summary>
            A range of up to 10A is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CurrentMeasurementRange.Range100A">
            <summary>
            A range of up to 100A is used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.VT2808CurrentMeasurementRange">
            <summary>
            Specifies the current measurement ranges of a VT2808 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2808CurrentMeasurementRange.Range50mA">
            <summary>
            A range of up to 50mA is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2808CurrentMeasurementRange.Range1A">
            <summary>
            A range of up to 1A is used.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2808CurrentMeasurementRange.Range20A">
            <summary>
            A range of up to 20A is used.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.VT2816MeasurementMode">
            <summary>
            Specifies the different measurement modes for VT2816 modules.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2816MeasurementMode.VoltageDifferential60V">
            <summary>
            Differential voltage, range +/- 60V
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2816MeasurementMode.VoltageDifferential10V">
            <summary>
            Differential voltage, range +/- 10V
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2816MeasurementMode.VoltageLineAToGnd60V">
            <summary>
            Voltage line A to ground 
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2816MeasurementMode.VoltageLineAToGnd10V">
            <summary>
            Voltage line B to ground 
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VT2816MeasurementMode.Current">
            <summary>
            Current, range +/-5A
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.TriggerEdgeType">
            <summary>
            Specifies the available trigger edge types.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.TriggerEdgeType.Rising">
            <summary>
            The trigger reacts to rising edges
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.TriggerEdgeType.Falling">
            <summary>
            The trigger reacts to falling edges
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.TriggerType">
            <summary>
            Specifies the extended trigger settings
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.TriggerType.Edge">
            <summary>
            The trigger reacts to edges
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.TriggerType.Level">
            <summary>
            The trigger reacts to levels
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.DigitalVoltageMode">
            <summary>
            Specifies the output source of a VT2848 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DigitalVoltageMode.Off">
            <summary>
            No voltage is connected.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DigitalVoltageMode.Internal">
            <summary>
            Internal voltage is used. External voltage is not connected.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DigitalVoltageMode.External">
            <summary>
            External voltage is used. Internal voltage is not connected.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.DigitalVoltageMode.IntToExt">
            <summary>
            Internal voltage is used and also connected to the external voltage pin.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.OutputMask">
            <summary>
            Specifies the output mask options for a VT2832 channel.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.None">
            <summary>
            Indicates that no switches will be enabled for output.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.Row1">
            <summary>
            Indicates if the relay on row 1 will be enabled for output.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.Row2">
            <summary>
            Indicates if the relay on row 2 will be enabled for output.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.Row3">
            <summary>
            Indicates if the relay on row 3 will be enabled for output.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.Row4">
            <summary>
            Indicates if the relay on row 4 will be enabled for output.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.OutputMask.DirectSwitch">
            <summary>
            Indicates if the switch will be enabled for output.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.CANRelayModes">
            <summary>
            Specifies the modes for VT6x04 CAN high/CAN low relays.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CANRelayModes.Open">
            <summary>
            The CAN line is not connected to VBatt or GND.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CANRelayModes.ToVBatt">
            <summary>
            The CAN line is connected to VBatt.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.CANRelayModes.ToGND">
            <summary>
            The CAN line is connected to GND.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IVTSystem">
            <summary>
            This interface allows access to all modules and channels of the VTSystem.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTSystem.Modules">
            <summary>
            Gets all modules in the system.
            </summary>
            <value>All modules.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTSystem.Channels">
            <summary>
            Gets all channels in the system.
            </summary>
            <value>All channels.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTSystem.ChannelNames">
            <summary>
            Gets the channel names in the system.
            </summary>
            <value>All channels' names.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IVTSystem.ModuleNames">
            <summary>
            Gets the module names in the system.
            </summary>
            <value>All modules' names.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTSystem.GetChannel(System.String)">
            <summary>
            Gets the a channel by its name. Throws an exception if the specified channel could not be found.
            </summary>
            <param name="name">The name of the channel to get.</param>
            <returns>The channel with the given name</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTSystem.GetChannel``1(System.String)">
            <summary>
            Gets the a channel by its name. Throws an exception if the specified channel could not be found.
            </summary>
            <typeparam name="T">The element type of the channel.</typeparam>
            <param name="name">The name of the channel to get.</param>
            <returns>The channel with the given name</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTSystem.GetModule(System.String)">
            <summary>
            Gets the a module by its name. Throws an exception if the specified module could not be found.
            </summary>
            <param name="name">The name of the module to get.</param>
            <returns>The module with the given name</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.IVTSystem.GetModule``1(System.String)">
            <summary>
            Gets the a module by its name. Throws an exception if the specified module could not be found.
            </summary>
            <typeparam name="T">The element type of the module.</typeparam>
            <param name="name">The name of the module to get.</param>
            <returns>The module with the given name</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="Listing"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.VTSystem">
            <summary>
            This class allows access to the singleton instance of the VTSystem.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.mVTModules">
            <summary>
            Private list of all connected VT modules
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.mVTModuleNames">
            <summary>
            Private list of all connected VT modules' names
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.mVTChannels">
            <summary>
            Private list of all connected VT channels
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.mVTChannelNames">
            <summary>
            Private list of all connected VT channels' names
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.mMeasurementObservers">
            <summary>
            Private list of all measurement observers
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.VTSystem.Instance">
            <summary>
            Gets the singleton instance of the VTSystem.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.VTSystem.Modules">
            <summary>
            Gets all modules.
            </summary>
            <value>All modules.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.VTSystem.Channels">
            <summary>
            Gets all channels.
            </summary>
            <value>All channels.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.VTSystem.ChannelNames">
            <summary>
            Gets the channel names.
            </summary>
            <value>The channel names.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.VTSystem.ModuleNames">
            <summary>
            Gets the module names.
            </summary>
            <value>The module names.</value>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.GetChannel(System.String)">
            <summary>
            Gets the a channel by its name.
            </summary>
            <param name="name">The name.</param>
            <returns>The channel</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.GetChannel``1(System.String)">
            <summary>
            Gets the a channel by its name.
            </summary>
            <typeparam name="T">The element type of the channel.</typeparam>
            <param name="name">The name.</param>
            <returns>The channel</returns>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="VT2004PWM"/></example>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.GetModule(System.String)">
            <summary>
            Gets the a module by its name.
            </summary>
            <param name="name">The name.</param>
            <returns>The module</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.GetModule``1(System.String)">
            <summary>
            Gets the a module by its name.
            </summary>
            <typeparam name="T">Type of the module.</typeparam>
            <param name="name">The name.</param>
            <returns>The module</returns>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vector.CANoe.VTS.VTSystem.VTSystemInternal"/> class.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.CreateModule(Vector.CANoe.Runtime.Internal.IVTModuleInfo)">
            <summary>
            Creates the module.
            </summary>
            <param name="moduleInfo">The module information.</param>
            <returns></returns>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.RegisterMeasurementObserver(Vector.CANoe.VTS.Sources.VTValues.Interfaces.IMeasurementObserver)">
            <summary>
            Registers a measurement observer.
            </summary>
            <param name="observer">The observer.</param>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.Cleanup">
            <summary>
            Cleans this instance up.
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.MeasurementStart">
            <summary>
            Called when measurement starts
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.VTSystem.VTSystemInternal.#cctor">
            <summary>
            Initializes the <see cref="T:Vector.CANoe.VTS.VTSystem.VTSystemInternal"/> class.
            </summary>
        </member>
        <member name="F:Vector.CANoe.VTS.VTSystem.VTSystemInternal.instance">
            <summary>
            Static instance of the singleton
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.Sources.VTValues.Interfaces.IMeasurementObserver">
            <summary>
            interface IMeasurementObserver
            </summary>
        </member>
        <member name="M:Vector.CANoe.VTS.Sources.VTValues.Interfaces.IMeasurementObserver.OnMeasurementStop">
            <summary>
            Called on measurement stop
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IReadValue">
            <summary>
            This interface defines a value that can be read.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IReadValue`1">
            <summary>
            This interface defines a value that can be read.
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IReadValue`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IWriteValue">
            <summary>
            This interface defines values that can be written only.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IWriteValue`1">
            <summary>
            This interface defines values that can be written only.
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IWriteValue`1.Value">
            <summary>
            Sets the value.
            </summary>
            <value>The value.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IValue">
            <summary>
            Base interface for all values.
            </summary>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IValue.IsAvailable">
            <summary>
            Gets a value indicating whether this value is available.
            </summary>
            <value>
            	<c>true</c> if this value is available; otherwise, <c>false</c>.
            </value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IValue.Name">
            <summary>
            Gets the name of this value.
            </summary>
            <value>The name of this value.</value>
        </member>
        <member name="P:Vector.CANoe.VTS.IValue.Timestamp">
            <summary>
            Gets the timestamp of the value.
            </summary>
        </member>
        <member name="P:Vector.CANoe.VTS.IValue.TimestampOriginal">
            <summary>
            Gets the timestamp of the value before synchronization may have changed it.
            </summary>
        </member>
        <member name="T:Vector.CANoe.VTS.IReadValueTransferCycle`1">
            <summary>
            This interface represents a value that can be read and whose transfer cycle can be changed.
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IReadValueTransferCycle`1.TransferCycle">
            <summary>
            Gets or sets the transfer cycle.
            </summary>
            <value>The transfer cycle.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IReadValueIntegrationTime`1">
            <summary>
            This interface represents a value that can be read and whose integration time and transfer cycle can be changed.
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IReadValueIntegrationTime`1.IntegrationTime">
            <summary>
            Gets or sets the integration time.
            </summary>
            <value>The integration time.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="T:Vector.CANoe.VTS.IReadWriteValue`1">
            <summary>
            This interface represents a value that can be read and written.
            </summary>
            <typeparam name="T">The element type of the system variable</typeparam>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
        <member name="P:Vector.CANoe.VTS.IReadWriteValue`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
            <example><code source="..\Build Documentation\VTSExamples.cs" region="SysVars"/></example>
        </member>
    </members>
</doc>
